<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Sep 2018 14:25:42 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>certbot</title>
      <link>http://example.org/posts/2018/09/certbot/</link>
      <pubDate>Fri, 14 Sep 2018 14:25:42 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/09/certbot/</guid>
      <description>申請wildcard憑證 透過docker執行以下指令 -d 指定網域 -m 指定申請人email -v 把/etc/letsencrypt的資料對應到本機硬碟
docker run -it --rm -v /d/certs:/etc/letsencrypt certbot/certbot \  certonly --manual \  --preferred-challenges dns \  --server https://acme-v02.api.letsencrypt.org/directory \  -d *.developer.idv.tw \  -m xian@developer.idv.tw 同意申請 是否接受郵件通知 是否登錄申請IP 設定網域TXT 確認網域TXT已生效 完成憑證申請 憑證位置 在archive資料夾下面 轉換憑證格式 打開SSL Convert 選擇cert1.pem和privkey1.pem和chain1.pem </description>
    </item>
    
    <item>
      <title>kubeadm install</title>
      <link>http://example.org/posts/2018/06/kubeadm-install/</link>
      <pubDate>Thu, 28 Jun 2018 15:27:40 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/kubeadm-install/</guid>
      <description>在ubuntu 16.04上安裝kubeadm apt-get update &amp;amp;&amp;amp; apt-get install -y apt-transport-https curl curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat &amp;lt;&amp;lt;EOF &amp;gt;/etc/apt/sources.list.d/kubernetes.list deb http://apt.kubernetes.io/ kubernetes-xenial main EOF apt-get update apt-get install -y kubelet kubeadm kubectl 初始化K8S叢集 swapoff -a kubeadm init --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.10.0 kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml # 生成client-certificate-data grep &#39;client-certificate-data&#39; ~/.kube/config | head -n 1 | awk &#39;{print $2}&#39; | base64 -d &amp;gt;&amp;gt; kubecfg.crt # 生成client-key-data grep &#39;client-key-data&#39; ~/.kube/config | head -n 1 | awk &#39;{print $2}&#39; | base64 -d &amp;gt;&amp;gt; kubecfg.</description>
    </item>
    
    <item>
      <title>docker container</title>
      <link>http://example.org/posts/2018/06/docker-container/</link>
      <pubDate>Sun, 10 Jun 2018 15:27:41 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/docker-container/</guid>
      <description>建立一個新容器 $sudo docker create redis:3.2.10 啟動容器 $sudo docker start &amp;lt;guid&amp;gt; 建立並啟動容器 $sudo docker run redis:3.2.10 查詢本機容器 $sudo docker ps -a 對應本機port $sudo docker run -p 6379:6379 redis:3.2.10 對應本機硬碟 $sudo docker run -v /d/redis:/data redis:3.2.10 附加容器執行緒 $sudo docker attach &amp;lt;guid&amp;gt; 執行容器命令 $sudo docker exec -it &amp;lt;guid&amp;gt; bash 查詢容器資訊 $sudo docker inspect &amp;lt;guid&amp;gt; 暫停容器 $sudo docker pause &amp;lt;guid&amp;gt; 停止容器 $sudo docker stop &amp;lt;guid&amp;gt; 強制關閉容器 $sudo docker kill &amp;lt;guid&amp;gt; 刪除容器 $sudo rm &amp;lt;guid&amp;gt; </description>
    </item>
    
    <item>
      <title>docker images</title>
      <link>http://example.org/posts/2018/06/docker-images/</link>
      <pubDate>Sun, 10 Jun 2018 15:25:16 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/docker-images/</guid>
      <description>查詢docker hub上的images $sudo docker search redis 查詢目前電腦的images $sudo docker images 拉取images $sudo docker pull redis:3.2.10 更名images $sudo docker tag redis:3.2.10 myredis:1.2.3 在本機commit新版本 $sudo docker commit -m &amp;quot;commit my redis&amp;quot; 查詢commit記錄 $sudo docker history redis:3.2.10 images存成檔案 $sudo docker save redis:3.2.10 -o redis.tar 檔案匯入images $sudo docker load -i redis.tar 刪除images $sudo docker rmi redis:3.2.10 登入Registry $sudo docker login 登出Registry $sudo docker logout 從Dockerfile編譯images $sudo docker build -t ImageName:tag . </description>
    </item>
    
    <item>
      <title>docker command</title>
      <link>http://example.org/posts/2018/06/docker-command/</link>
      <pubDate>Sun, 10 Jun 2018 15:15:52 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/docker-command/</guid>
      <description>docker指令示意圖 檢查版本 $ sudo docker version Client: Version: 1.13.1 API version: 1.26 Go version: go1.6.2 Git commit: 092cba3 Built: Thu Nov 2 20:40:23 2017 OS/Arch: linux/amd64 Server: Version: 1.13.1 API version: 1.26 (minimum version 1.12) Go version: go1.6.2 Git commit: 092cba3 Built: Thu Nov 2 20:40:23 2017 OS/Arch: linux/amd64 Experimental: false Info $sudo docker info events $sudo docker events </description>
    </item>
    
    <item>
      <title>install docker on linux</title>
      <link>http://example.org/posts/2018/06/install-docker-on-linux/</link>
      <pubDate>Sun, 10 Jun 2018 14:57:21 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/install-docker-on-linux/</guid>
      <description>安裝預設版本 $ sudo apt-get update $ sudo apt-get upgrade -y $ sudo apt-get install docker.io -y 移除docker $ sudo apt-get remove docker docker-engine docker.io -y $ sudo apt-get autoremove -y $ sudo apt-get purge -y </description>
    </item>
    
    <item>
      <title>install docker on windows</title>
      <link>http://example.org/posts/2018/06/install-docker-on-windows/</link>
      <pubDate>Sun, 10 Jun 2018 13:55:17 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/install-docker-on-windows/</guid>
      <description>在google搜尋docker for windows到連結到官網下載Docker Community Edition for Windows</description>
    </item>
    
    <item>
      <title>docker簡介</title>
      <link>http://example.org/posts/2018/06/docker%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Sun, 10 Jun 2018 13:19:42 +0000</pubDate>
      
      <guid>http://example.org/posts/2018/06/docker%E7%B0%A1%E4%BB%8B/</guid>
      <description>Docker vs VM </description>
    </item>
    
    <item>
      <title>安裝Android Studio</title>
      <link>http://example.org/posts/2016/11/%E5%AE%89%E8%A3%9Dandroid-studio/</link>
      <pubDate>Mon, 14 Nov 2016 11:46:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/11/%E5%AE%89%E8%A3%9Dandroid-studio/</guid>
      <description>安裝Android Studio影片
 下載安裝程式
[![](https://3.bp.blogspot.com/-F3AUDbYH96g/WCkzALzdagI/AAAAAAAAENY/Q9KFUGbCfYct3BKWpIiGaHvxFJcFzZufgCLcB/s1600/01.png)](https://3.bp.blogspot.com/-F3AUDbYH96g/WCkzALzdagI/AAAAAAAAENY/Q9KFUGbCfYct3BKWpIiGaHvxFJcFzZufgCLcB/s1600/01.png) 點擊安裝程式
[![](https://4.bp.blogspot.com/-6nJH_73aYyE/WCkzAIlm80I/AAAAAAAAENc/2Jgg-2V15i4xVePqhpWCJ6PPXbpAW3b1wCLcB/s1600/02.png)](https://4.bp.blogspot.com/-6nJH_73aYyE/WCkzAIlm80I/AAAAAAAAENc/2Jgg-2V15i4xVePqhpWCJ6PPXbpAW3b1wCLcB/s1600/02.png) 設定安裝程式
[![](https://2.bp.blogspot.com/-LJ8ze0sM_6c/WCkzAGISipI/AAAAAAAAENg/-3y9LrRKe9Utiu43XHDaU9SVAAI4t3l6gCLcB/s1600/03.png)](https://2.bp.blogspot.com/-LJ8ze0sM_6c/WCkzAGISipI/AAAAAAAAENg/-3y9LrRKe9Utiu43XHDaU9SVAAI4t3l6gCLcB/s1600/03.png) 接受授權絛約
[![](https://2.bp.blogspot.com/-Y-NDkBgf1dQ/WCkzAi1EjvI/AAAAAAAAENk/y9rlBJQb6ekV8_L7_EaJHlbnYLGK0tL3wCLcB/s1600/04.png)](https://2.bp.blogspot.com/-Y-NDkBgf1dQ/WCkzAi1EjvI/AAAAAAAAENk/y9rlBJQb6ekV8_L7_EaJHlbnYLGK0tL3wCLcB/s1600/04.png) 選擇安裝路徑
[![](https://2.bp.blogspot.com/-xhpOTzMWSus/WCkzAp17g8I/AAAAAAAAENs/Sna3ZEKJslcilAqHwJxrafmzxMc9-sKfwCLcB/s1600/05.png)](https://2.bp.blogspot.com/-xhpOTzMWSus/WCkzAp17g8I/AAAAAAAAENs/Sna3ZEKJslcilAqHwJxrafmzxMc9-sKfwCLcB/s1600/05.png) 選擇安裝名稱
[![](https://4.bp.blogspot.com/-Pybx7RQJ_b8/WCkzAif-IpI/AAAAAAAAENo/7ifGpfUp0MM5QwCp0WfDgVrd0rasYxV3wCLcB/s1600/06.png)](https://4.bp.blogspot.com/-Pybx7RQJ_b8/WCkzAif-IpI/AAAAAAAAENo/7ifGpfUp0MM5QwCp0WfDgVrd0rasYxV3wCLcB/s1600/06.png) 開始安裝
[![](https://4.bp.blogspot.com/-f6D1P4E8tp0/WCkzAy8hJsI/AAAAAAAAENw/BtDUiDQxaZckOH1Qfy_S2AjUzr4UqAFywCLcB/s1600/07.png)](https://4.bp.blogspot.com/-f6D1P4E8tp0/WCkzAy8hJsI/AAAAAAAAENw/BtDUiDQxaZckOH1Qfy_S2AjUzr4UqAFywCLcB/s1600/07.png) 安裝完成
[![](https://2.bp.blogspot.com/-eCehO9K_2_g/WCkzA6TulrI/AAAAAAAAEN0/ek5zQEEc8SYwt0yGRInag6tSbLwBCuIhgCLcB/s1600/08.png)](https://2.bp.blogspot.com/-eCehO9K_2_g/WCkzA6TulrI/AAAAAAAAEN0/ek5zQEEc8SYwt0yGRInag6tSbLwBCuIhgCLcB/s1600/08.png) 選擇初始化選項
[![](https://2.bp.blogspot.com/-pp4vce8XFIU/WCkzAxB-q9I/AAAAAAAAEN4/-BbNEWaXFxs7lfCnWFBgCwrDtmc6QFoKACLcB/s1600/09.png)](https://2.bp.blogspot.com/-pp4vce8XFIU/WCkzAxB-q9I/AAAAAAAAEN4/-BbNEWaXFxs7lfCnWFBgCwrDtmc6QFoKACLcB/s1600/09.png) 開始初始化
[![](https://1.bp.blogspot.com/-gDF22-Dg404/WCkzBDr-QTI/AAAAAAAAEN8/oPE2IVU__RoQnbZmh55jzEVc3yOhP9VCwCLcB/s1600/10.png)](https://1.bp.blogspot.com/-gDF22-Dg404/WCkzBDr-QTI/AAAAAAAAEN8/oPE2IVU__RoQnbZmh55jzEVc3yOhP9VCwCLcB/s1600/10.png) 設定初始化
[![](https://3.bp.blogspot.com/-AQwj48dVnHA/WCkzBU7BltI/AAAAAAAAEOA/NQAOPcC2rVYFCKKbihzAwVd-riBN6T3UgCLcB/s1600/11.png)](https://3.bp.blogspot.com/-AQwj48dVnHA/WCkzBU7BltI/AAAAAAAAEOA/NQAOPcC2rVYFCKKbihzAwVd-riBN6T3UgCLcB/s1600/11.png) 完成初始化設定
[![](https://3.bp.blogspot.com/-VFGqRKi8NDo/WCkzBQ8QOYI/AAAAAAAAEOE/LIvHvvUgkXMTEa5iHqpVNNciiFeSvX_hgCLcB/s1600/12.png)](https://3.bp.blogspot.com/-VFGqRKi8NDo/WCkzBQ8QOYI/AAAAAAAAEOE/LIvHvvUgkXMTEa5iHqpVNNciiFeSvX_hgCLcB/s1600/12.png) 下載元件
[![](https://3.bp.blogspot.com/-rgK_DxwZARo/WCkzBWh73II/AAAAAAAAEOI/LRahKASpDmIz_Z6IRr_xmf7-rhjKR-EwQCLcB/s1600/13.png)](https://3.bp.blogspot.com/-rgK_DxwZARo/WCkzBWh73II/AAAAAAAAEOI/LRahKASpDmIz_Z6IRr_xmf7-rhjKR-EwQCLcB/s1600/13.png) 完成元件安裝
[![](https://4.bp.blogspot.com/-gc1On2UdMKM/WCkzB4sxh6I/AAAAAAAAEOM/9JWDSM5ZIogjJREfcggHl5bUGnF0nRKMgCLcB/s1600/14.png)](https://4.bp.blogspot.com/-gc1On2UdMKM/WCkzB4sxh6I/AAAAAAAAEOM/9JWDSM5ZIogjJREfcggHl5bUGnF0nRKMgCLcB/s1600/14.png) 啟動Android Studio</description>
    </item>
    
    <item>
      <title>安裝JAVA JDK</title>
      <link>http://example.org/posts/2016/11/%E5%AE%89%E8%A3%9Djava-jdk/</link>
      <pubDate>Mon, 14 Nov 2016 11:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/11/%E5%AE%89%E8%A3%9Djava-jdk/</guid>
      <description>安裝JAVA SDK影片 下載安裝程式[![](https://3.bp.blogspot.com/-OL4txoEDJts/WCkxfCmYYzI/AAAAAAAAEM0/pOC10lWaRFIZ8c33GFefwYUmUnpBHTBvACLcB/s1600/01.png)](https://3.bp.blogspot.com/-OL4txoEDJts/WCkxfCmYYzI/AAAAAAAAEM0/pOC10lWaRFIZ8c33GFefwYUmUnpBHTBvACLcB/s1600/01.png) 點擊安裝程式[![](https://4.bp.blogspot.com/-SwtE3lIgW7I/WCkxfP_yBOI/AAAAAAAAEM8/igiZyAOcrUcUR4lhXHFqKISCgUXoXMHQgCLcB/s1600/02.png)](https://4.bp.blogspot.com/-SwtE3lIgW7I/WCkxfP_yBOI/AAAAAAAAEM8/igiZyAOcrUcUR4lhXHFqKISCgUXoXMHQgCLcB/s1600/02.png)選擇要安裝的功能[![](https://1.bp.blogspot.com/-BJ_E-uyLNVA/WCkxfHxhBrI/AAAAAAAAEM4/mCZdBtozT9ESgnf8MV2lydWlMBFJkK7pACLcB/s1600/03.png)](https://1.bp.blogspot.com/-BJ_E-uyLNVA/WCkxfHxhBrI/AAAAAAAAEM4/mCZdBtozT9ESgnf8MV2lydWlMBFJkK7pACLcB/s1600/03.png) 開始安裝JDK[![](https://4.bp.blogspot.com/-h_UdAvae-P0/WCkxfQpF87I/AAAAAAAAENI/2m6oDYNOd5A6TL2mDQWR4ffo2DGjQ7GRQCLcB/s1600/04.png)](https://4.bp.blogspot.com/-h_UdAvae-P0/WCkxfQpF87I/AAAAAAAAENI/2m6oDYNOd5A6TL2mDQWR4ffo2DGjQ7GRQCLcB/s1600/04.png) 選擇執行環境資料夾[![](https://4.bp.blogspot.com/-LIt5ZvKb8dU/WCkxfs2zNkI/AAAAAAAAENA/YK-fV7DCi9I52XqFrBNSkGAI-bFvNWmwQCLcB/s1600/05.png)](https://4.bp.blogspot.com/-LIt5ZvKb8dU/WCkxfs2zNkI/AAAAAAAAENA/YK-fV7DCi9I52XqFrBNSkGAI-bFvNWmwQCLcB/s1600/05.png) 開始安裝執行環境[![](https://3.bp.blogspot.com/-NLasBvCSPOg/WCkxfq7j76I/AAAAAAAAENE/COqpd4Oo7owHTVkW-6EecRpdqnmzGBhkQCLcB/s1600/06.png)](https://3.bp.blogspot.com/-NLasBvCSPOg/WCkxfq7j76I/AAAAAAAAENE/COqpd4Oo7owHTVkW-6EecRpdqnmzGBhkQCLcB/s1600/06.png) 安裝完成[!</description>
    </item>
    
    <item>
      <title>Docker on linux</title>
      <link>http://example.org/posts/2016/10/docker-on-linux/</link>
      <pubDate>Wed, 05 Oct 2016 08:56:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/10/docker-on-linux/</guid>
      <description>Docker on linux 前置條件  kernal 3.8以上 64位元  安裝腳本 curl -fsSL https://get.docker.com/ | sh 安裝完成  如果不是用root執行docker的話，記得加入帳號執行docker的權限  sudo usermod -aG docker your-user [![](https://3.bp.blogspot.com/-ekabkWpPcWs/V_RShADmG0I/AAAAAAAAEKE/Xm5jigPW7lcVxm_7AhqYRm8IPE2vlPnDACLcB/s1600/linux.png)](https://3.bp.blogspot.com/-ekabkWpPcWs/V_RShADmG0I/AAAAAAAAEKE/Xm5jigPW7lcVxm_7AhqYRm8IPE2vlPnDACLcB/s1600/linux.png) 移除安裝 sudo apt-get purge docker-engine sudo apt-get autoremove --purge docker-engine sudo apt-get autoclean sudo rm -rf /var/lib/docker </description>
    </item>
    
    <item>
      <title>Docker on windows</title>
      <link>http://example.org/posts/2016/10/docker-on-windows/</link>
      <pubDate>Wed, 05 Oct 2016 08:38:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/10/docker-on-windows/</guid>
      <description>Docker on windows 前置條件  Windows 10 Professional版本以上 啟用Hyper-V支援  [![](https://4.bp.blogspot.com/-AIR7PYyJEN4/V_RLDAqgSbI/AAAAAAAAEJs/rXqEQKUlAE8490pNSJ5UWGZ6Xk85YH4TACLcB/s1600/hyperV.png)](https://4.bp.blogspot.com/-AIR7PYyJEN4/V_RLDAqgSbI/AAAAAAAAEJs/rXqEQKUlAE8490pNSJ5UWGZ6Xk85YH4TACLcB/s1600/hyperV.png) 安裝 首先到官網下載安裝程式 [![](https://4.bp.blogspot.com/-mdHM-Fn3g4k/V_RK6ECYj_I/AAAAAAAAEJo/LtG7BJlijEAimRSDOWTH6l7l4Fl_-AO_gCEw/s1600/download.png)](https://4.bp.blogspot.com/-mdHM-Fn3g4k/V_RK6ECYj_I/AAAAAAAAEJo/LtG7BJlijEAimRSDOWTH6l7l4Fl_-AO_gCEw/s1600/download.png) 接受授權合約 [![](https://2.bp.blogspot.com/-ZJcA8koizB8/V_RK5ZmO07I/AAAAAAAAEJU/p4mTW5NjN-AAoakthFzI36tlMK4MOs9cwCEw/s1600/01.png)](https://2.bp.blogspot.com/-ZJcA8koizB8/V_RK5ZmO07I/AAAAAAAAEJU/p4mTW5NjN-AAoakthFzI36tlMK4MOs9cwCEw/s1600/01.png) 開始安裝 [![](https://4.bp.blogspot.com/-50Oh8KFRFts/V_RK5UpilzI/AAAAAAAAEJQ/4iTkzZ1LqisfHNMaitgESAyJanTWYf4lQCEw/s1600/02.png)](https://4.bp.blogspot.com/-50Oh8KFRFts/V_RK5UpilzI/AAAAAAAAEJQ/4iTkzZ1LqisfHNMaitgESAyJanTWYf4lQCEw/s1600/02.png) 安裝完成 [![](https://1.bp.blogspot.com/-a8DjmDYrjzQ/V_RK5NJ_hlI/AAAAAAAAEJM/-Xc1tD7oWZggjkIGz_lAhgNHIgEwg72hACEw/s1600/03.png)](https://1.bp.blogspot.com/-a8DjmDYrjzQ/V_RK5NJ_hlI/AAAAAAAAEJM/-Xc1tD7oWZggjkIGz_lAhgNHIgEwg72hACEw/s1600/03.png) Docker is running [![](https://3.bp.blogspot.com/-XFM7OCV1uPA/V_RK5oaPFUI/AAAAAAAAEJY/tqsIQmqhQYkutd463JjDqlNzHoBDlZoFQCEw/s1600/04.png)](https://3.bp.blogspot.com/-XFM7OCV1uPA/V_RK5oaPFUI/AAAAAAAAEJY/tqsIQmqhQYkutd463JjDqlNzHoBDlZoFQCEw/s1600/04.png) 在工作列上Docker的icon按右鍵選Settings [![](https://3.bp.blogspot.com/-ScG9jupqcTM/V_RK5_2OH2I/AAAAAAAAEJg/NF_bpfkTRa4d7WO8fQb_MKuqHaZbJkrwgCEw/s1600/05.png)](https://3.bp.blogspot.com/-ScG9jupqcTM/V_RK5_2OH2I/AAAAAAAAEJg/NF_bpfkTRa4d7WO8fQb_MKuqHaZbJkrwgCEw/s1600/05.png) 設定共享磁碟 [![](https://4.bp.blogspot.com/-6oS_huOf5l0/V_RK5r7ALcI/AAAAAAAAEJc/jWWFjPdfYNUJPuRDF1zGksDLD3BNIG_oACEw/s1600/06.png)](https://4.bp.blogspot.com/-6oS_huOf5l0/V_RK5r7ALcI/AAAAAAAAEJc/jWWFjPdfYNUJPuRDF1zGksDLD3BNIG_oACEw/s1600/06.png) 設定使用資源 [![](https://3.bp.blogspot.com/-kRB5QOdm2yE/V_RK6GE8VuI/AAAAAAAAEJk/q5zfoKbcD2YIjfBqIUz4_KBkAfBF5imUwCEw/s1600/07.png)](https://3.bp.blogspot.com/-kRB5QOdm2yE/V_RK6GE8VuI/AAAAAAAAEJk/q5zfoKbcD2YIjfBqIUz4_KBkAfBF5imUwCEw/s1600/07.png) 開始Docker之旅吧:)</description>
    </item>
    
    <item>
      <title>svn migration to git</title>
      <link>http://example.org/posts/2016/09/svn-migration-to-git/</link>
      <pubDate>Fri, 30 Sep 2016 09:12:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/09/svn-migration-to-git/</guid>
      <description>首先下載subgit，需要先安裝好JAVA環境
[![](https://3.bp.blogspot.com/-WHgp_trAbNo/V-26bWM_UjI/AAAAAAAAEIk/EYrM4H_RPPAHpMDLqQlsYc_HB44XmVghgCLcB/s1600/01.png)](https://3.bp.blogspot.com/-WHgp_trAbNo/V-26bWM_UjI/AAAAAAAAEIk/EYrM4H_RPPAHpMDLqQlsYc_HB44XmVghgCLcB/s1600/01.png) 解壓縮後開啟命令列工具到bin資料夾，輸入指令 subgit import &amp;ndash;non-interactive &amp;ndash;default-domain example.com &amp;ndash;svn-url https://svnurl/svn/ExampleProjectName ExampleProjectName
[![](https://1.bp.blogspot.com/-64W4fqUASBs/V-26bj589cI/AAAAAAAAEIs/iz9lOQ6-c_46nLtpFPHJYZIxpWJujxWIACLcB/s1600/02.png)](https://1.bp.blogspot.com/-64W4fqUASBs/V-26bj589cI/AAAAAAAAEIs/iz9lOQ6-c_46nLtpFPHJYZIxpWJujxWIACLcB/s1600/02.png) 匯出成功後，再推送到git server git push &amp;ndash;mirror https://giturl/ExampleProjectName.git
[![](https://4.bp.blogspot.com/-U4IxN5KqWkE/V-26briOl8I/AAAAAAAAEIo/CJ2qjT_Tx7Qsi3Gz9hpXOsfMEAPuCnXUgCLcB/s1600/03.png)](https://4.bp.blogspot.com/-U4IxN5KqWkE/V-26briOl8I/AAAAAAAAEIo/CJ2qjT_Tx7Qsi3Gz9hpXOsfMEAPuCnXUgCLcB/s1600/03.png) 這樣就轉移成功囉</description>
    </item>
    
    <item>
      <title>Gogs with application request routing</title>
      <link>http://example.org/posts/2016/08/gogs-with-application-request-routing/</link>
      <pubDate>Mon, 15 Aug 2016 23:14:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/gogs-with-application-request-routing/</guid>
      <description>Application Request Route的使用方式可以參考以前的筆記 透過Application Request Route來做SSL offloading http://blog.developer.idv.tw/2016/05/application-request-routessl-offloading_8.html
預設的站台只繫結http 80 port
[![](https://1.bp.blogspot.com/-RTDUH6_NBvI/V7HcIB-tOFI/AAAAAAAAD3I/0SxH-OjlwCkC20MVjaMgHZ55V6XCFHh5ACLcB/s1600/01.png)](https://1.bp.blogspot.com/-RTDUH6_NBvI/V7HcIB-tOFI/AAAAAAAAD3I/0SxH-OjlwCkC20MVjaMgHZ55V6XCFHh5ACLcB/s1600/01.png) 安裝好ARR後，新增一組Server Farm [![](https://4.bp.blogspot.com/-BUQI0vG1O2s/V7HcIGM-NCI/AAAAAAAAD3Q/BDTR_cOmalMu9JgL8HD8LgMDYTWZDuwNgCLcB/s1600/02.png)](https://4.bp.blogspot.com/-BUQI0vG1O2s/V7HcIGM-NCI/AAAAAAAAD3Q/BDTR_cOmalMu9JgL8HD8LgMDYTWZDuwNgCLcB/s1600/02.png) 新增一台伺服器，httpPort改成3000 [![](https://2.bp.blogspot.com/-2iQGlC2nMUE/V7HcIBCzN4I/AAAAAAAAD3M/63hu2Ct49McJocI0wdU0YEg7XDHIX0vywCLcB/s1600/03.png)](https://2.bp.blogspot.com/-2iQGlC2nMUE/V7HcIBCzN4I/AAAAAAAAD3M/63hu2Ct49McJocI0wdU0YEg7XDHIX0vywCLcB/s1600/03.png) 新增一條URL Rewrite規則 [![](https://4.bp.blogspot.com/-X64dGenYaKM/V7HcIY_tM7I/AAAAAAAAD3U/9lFevWOGQigbzFaZDbi-dTq_R9GTgskzACLcB/s1600/04.png)](https://4.bp.blogspot.com/-X64dGenYaKM/V7HcIY_tM7I/AAAAAAAAD3U/9lFevWOGQigbzFaZDbi-dTq_R9GTgskzACLcB/s1600/04.png) 使用規則運算式: .* [![](https://1.bp.blogspot.com/-FD4P_AUW1x8/V7HcIpYTCnI/AAAAAAAAD3Y/NlDxlJt4rcAYefwLWIFOugguupLnjwixACLcB/s1600/05.png)](https://1.bp.blogspot.com/-FD4P_AUW1x8/V7HcIpYTCnI/AAAAAAAAD3Y/NlDxlJt4rcAYefwLWIFOugguupLnjwixACLcB/s1600/05.png) 路由到剛設定的伺服器陣列 [![](https://1.bp.blogspot.com/-03Fe7Z8Vc0M/V7HcIrI03dI/AAAAAAAAD3c/0gO3EuOxOJMoXDxkSnPkEZbyiUtTa8WjgCLcB/s1600/06.png)](https://1.bp.blogspot.com/-03Fe7Z8Vc0M/V7HcIrI03dI/AAAAAAAAD3c/0gO3EuOxOJMoXDxkSnPkEZbyiUtTa8WjgCLcB/s1600/06.png) 新增一組測試網址 [![](https://3.bp.blogspot.com/-PMDL1lmoQkI/V7HcI264_DI/AAAAAAAAD3g/IhKetCNMxBwnF3MMbHKU59mP2LlCno4jACLcB/s1600/07.png)](https://3.bp.blogspot.com/-PMDL1lmoQkI/V7HcI264_DI/AAAAAAAAD3g/IhKetCNMxBwnF3MMbHKU59mP2LlCno4jACLcB/s1600/07.png) 瀏覽測試網址，http port 80 會路由到gogs的port 3000 [!</description>
    </item>
    
    <item>
      <title>Gogs 筆記</title>
      <link>http://example.org/posts/2016/08/gogs-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 15 Aug 2016 21:59:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/gogs-%E7%AD%86%E8%A8%98/</guid>
      <description>[Windows 版本]
Gogs - Go Git Service on windows http://blog.developer.idv.tw/2016/08/gogs-go-git-service-on-windows.html
Gogs run as windows service http://blog.developer.idv.tw/2016/08/gogs-run-as-windows-service.html
Nginx run as windows service http://blog.developer.idv.tw/2016/08/nginx-run-as-windows-service.html
Gogs with nginx reverse proxy http://blog.developer.idv.tw/2016/08/gogs-with-nginx-reverse-proxy.html
Gogs with application request routing http://blog.developer.idv.tw/2016/08/gogs-with-application-request-routing.html
svn migration to git</description>
    </item>
    
    <item>
      <title>Gogs with nginx reverse proxy</title>
      <link>http://example.org/posts/2016/08/gogs-with-nginx-reverse-proxy/</link>
      <pubDate>Mon, 15 Aug 2016 21:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/gogs-with-nginx-reverse-proxy/</guid>
      <description>ngix新增一組站台設定
[![](https://3.bp.blogspot.com/-5pCqX-PKlL4/V7HFi9H5m_I/AAAAAAAAD2w/IlMP7TcMxdUbPpXy_r1Gv5Ywnmn8Vv6QgCLcB/s1600/01.png)](https://3.bp.blogspot.com/-5pCqX-PKlL4/V7HFi9H5m_I/AAAAAAAAD2w/IlMP7TcMxdUbPpXy_r1Gv5Ywnmn8Vv6QgCLcB/s1600/01.png) 新增站台的DNS，為了測試方便所以建在本機的hosts [![](https://2.bp.blogspot.com/-TKZboAubPcE/V7HFi3IQVxI/AAAAAAAAD20/aj4gq2qUzj08cHpfG8nN6GH6KPotK515gCLcB/s1600/02.png)](https://2.bp.blogspot.com/-TKZboAubPcE/V7HFi3IQVxI/AAAAAAAAD20/aj4gq2qUzj08cHpfG8nN6GH6KPotK515gCLcB/s1600/02.png) 修改一下gogs的設定，把domain和ROOT_URL改成這組測試的網址 順便DISABLE_SSH = true [![](https://3.bp.blogspot.com/-NWt0cLVNSD8/V7HFi-bF8RI/AAAAAAAAD2s/Z4GJ4sS8QyU6bgG1XPAbOIqV4LOyYj9ogCLcB/s1600/03.png)](https://3.bp.blogspot.com/-NWt0cLVNSD8/V7HFi-bF8RI/AAAAAAAAD2s/Z4GJ4sS8QyU6bgG1XPAbOIqV4LOyYj9ogCLcB/s1600/03.png) 重新啟動gogs服務後，就可以用這組測試網址了 [!</description>
    </item>
    
    <item>
      <title>Nginx run as windows service</title>
      <link>http://example.org/posts/2016/08/nginx-run-as-windows-service/</link>
      <pubDate>Mon, 15 Aug 2016 21:09:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/nginx-run-as-windows-service/</guid>
      <description>在官網下載Nginx編譯好的執行檔
[![](https://3.bp.blogspot.com/-8vknH_NDWWc/V7G-1WbRz9I/AAAAAAAAD2U/8dIR2IfcZLE0Gg8h6v5JraGoPmztkHwNQCLcB/s1600/01.png)](https://3.bp.blogspot.com/-8vknH_NDWWc/V7G-1WbRz9I/AAAAAAAAD2U/8dIR2IfcZLE0Gg8h6v5JraGoPmztkHwNQCLcB/s1600/01.png) [下載nssm](https://nssm.cc/download)用來把nginx的執行檔註冊成一個服務[![](https://2.bp.blogspot.com/-smMH3K8Qmqw/V7G-1QMgHrI/AAAAAAAAD2Q/eueu5aJVMdsHgtocc-YkiZLhNUHOm86ugCLcB/s1600/02.png)](https://2.bp.blogspot.com/-smMH3K8Qmqw/V7G-1QMgHrI/AAAAAAAAD2Q/eueu5aJVMdsHgtocc-YkiZLhNUHOm86ugCLcB/s1600/02.png) 執行nssm install nginx設定好nginx執行檔的路徑和工作目錄[![](https://1.bp.blogspot.com/-x_sQIDUaHcs/V7G-1Z_m1bI/AAAAAAAAD2M/X1KZotWYxuglW7JQ7GHok9H4sT09JVG9ACLcB/s1600/03.png)](https://1.bp.blogspot.com/-x_sQIDUaHcs/V7G-1Z_m1bI/AAAAAAAAD2M/X1KZotWYxuglW7JQ7GHok9H4sT09JVG9ACLcB/s1600/03.png) 啟動nginx服務[![](https://3.bp.blogspot.com/--lOAGgATX0c/V7G-10HDnZI/AAAAAAAAD2Y/lE0r7P2DHYw0mMJiW-XSd_xLm_-BtdaGwCLcB/s1600/04.png)](https://3.bp.blogspot.com/--lOAGgATX0c/V7G-10HDnZI/AAAAAAAAD2Y/lE0r7P2DHYw0mMJiW-XSd_xLm_-BtdaGwCLcB/s1600/04.png) nginx啟動成功[![](https://3.bp.blogspot.com/-Yik38hLCppY/V7G-16Q0rQI/AAAAAAAAD2c/RZz1ARt3dhspgMuzP6N-3sDtI7LmGlJpQCLcB/s1600/05.png)](https://3.bp.blogspot.com/-Yik38hLCppY/V7G-16Q0rQI/AAAAAAAAD2c/RZz1ARt3dhspgMuzP6N-3sDtI7LmGlJpQCLcB/s1600/05.png)  </description>
    </item>
    
    <item>
      <title>Gogs run as windows service</title>
      <link>http://example.org/posts/2016/08/gogs-run-as-windows-service/</link>
      <pubDate>Sun, 14 Aug 2016 16:21:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/gogs-run-as-windows-service/</guid>
      <description>在官網的說明文件中有很詳細的介紹，記錄一下設定的方式
 [![](https://2.bp.blogspot.com/-zukzoZW1jNw/V7AoqLHfc5I/AAAAAAAAD10/M1QecGVWQz8rGHyY5U27Ej3KE61TVFtxwCLcB/s1600/01.png)](https://2.bp.blogspot.com/-zukzoZW1jNw/V7AoqLHfc5I/AAAAAAAAD10/M1QecGVWQz8rGHyY5U27Ej3KE61TVFtxwCLcB/s1600/01.png) 要注意的是設定檔的位置 一開始透過網頁初始化的時後，會新增一個自定義的設定文件在custom/conf/app.ini 但是gogs預設的設定檔位置則是在conf/app.ini，已經編譯在二進位檔裡面了 之後升級的時後才不會覆蓋掉自定義的設定 [![](https://4.bp.blogspot.com/-l7J3l9ssUNU/V7AoqD-4MhI/AAAAAAAAD14/eQKBYVgrziUFDkkR7832drzz2AlWWfejwCLcB/s1600/02.png)](https://4.bp.blogspot.com/-l7J3l9ssUNU/V7AoqD-4MhI/AAAAAAAAD14/eQKBYVgrziUFDkkR7832drzz2AlWWfejwCLcB/s1600/02.png) 所以在註冊服務的時後，設定檔路徑要使用自定義的設定檔 打開命令列工具，透過sc命令新增一個服務 $sc create gogs start= auto binPath= &#34;&#34;D:\gogs\gogs.exe&#34; web --config &#34;D:\gogs\custom\conf\app.ini&#34;&#34; 再透過net命令啟動服務 [![](https://2.bp.blogspot.com/-nc36vEiq4r0/V7AoqMA5idI/AAAAAAAAD1w/mveYHwW6ris0kQ70u6frrYcPyVKIk_IrwCLcB/s1600/03.png)](https://2.bp.blogspot.com/-nc36vEiq4r0/V7AoqMA5idI/AAAAAAAAD1w/mveYHwW6ris0kQ70u6frrYcPyVKIk_IrwCLcB/s1600/03.png) gogs服務已啟動 [!</description>
    </item>
    
    <item>
      <title>Gogs - Go Git Service on windows</title>
      <link>http://example.org/posts/2016/08/gogs-go-git-service-on-windows/</link>
      <pubDate>Sun, 14 Aug 2016 15:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/gogs-go-git-service-on-windows/</guid>
      <description>先到官網下載windodws版本編譯好的二進制壓縮檔
[![](https://4.bp.blogspot.com/-gdi57inFIN4/V7AhnC2PX4I/AAAAAAAAD0k/XeoXDAuNKfs_POtQf4RctzGK2Or6zipHgCLcB/s1600/01.png)](https://4.bp.blogspot.com/-gdi57inFIN4/V7AhnC2PX4I/AAAAAAAAD0k/XeoXDAuNKfs_POtQf4RctzGK2Or6zipHgCLcB/s1600/01.png) 解壓縮後到資料夾下執行gogs web即可，預設Listen port是3000 [![](https://1.bp.blogspot.com/-hslHcwh_lgw/V7AhnCfwnZI/AAAAAAAAD0g/e2HASIhkOLE4DP3i8_Fw3a3ANPvQ6yV6ACLcB/s1600/02.png)](https://1.bp.blogspot.com/-hslHcwh_lgw/V7AhnCfwnZI/AAAAAAAAD0g/e2HASIhkOLE4DP3i8_Fw3a3ANPvQ6yV6ACLcB/s1600/02.png) 打開瀏覽器進入http://127.0.0.1:3000後，開始初始化設定 設定要使用的資料庫和專案放置的資料夾路徑 [![](https://3.bp.blogspot.com/-gsVP-BbXeHU/V7AhnAcVd3I/AAAAAAAAD0o/uRGkeqy8i3IcQj9jgrDQdwA0myitxAfdQCLcB/s1600/03.png)](https://3.bp.blogspot.com/-gsVP-BbXeHU/V7AhnAcVd3I/AAAAAAAAD0o/uRGkeqy8i3IcQj9jgrDQdwA0myitxAfdQCLcB/s1600/03.png) 勾選禁止註冊和登錄訪問限制 再建立一個管理員帳號就完成設定了
[![](https://4.bp.blogspot.com/-u7QiBsg5pLw/V7AhnqGtO3I/AAAAAAAAD0s/rUxLIbIVUc00pqi0RrHaysQd49CvC7q4ACLcB/s1600/04.png)](https://4.bp.blogspot.com/-u7QiBsg5pLw/V7AhnqGtO3I/AAAAAAAAD0s/rUxLIbIVUc00pqi0RrHaysQd49CvC7q4ACLcB/s1600/04.png) 如果沒有勾選禁止註冊，右上角的登入旁邊就會有一個註冊的功能 [![](https://4.bp.blogspot.com/-4b9TPMqjwrw/V7AjGbhqG8I/AAAAAAAAD1g/iG5ub2HARlEeOy69gRHafkMLV5-MgcatwCLcB/s1600/05.png)](https://4.bp.blogspot.com/-4b9TPMqjwrw/V7AjGbhqG8I/AAAAAAAAD1g/iG5ub2HARlEeOy69gRHafkMLV5-MgcatwCLcB/s1600/05.png) 登入後先來建一個專案
[![](https://2.bp.blogspot.com/-IoZIbfFg2ug/V7AhnhNObGI/AAAAAAAAD0w/VRZTy9g_7F4DCiLyI0cjwhZ-chrPAevSwCLcB/s1600/06.png)](https://2.bp.blogspot.com/-IoZIbfFg2ug/V7AhnhNObGI/AAAAAAAAD0w/VRZTy9g_7F4DCiLyI0cjwhZ-chrPAevSwCLcB/s1600/06.png) 輸入專案的名稱，把可見度勾成私有的，就必需有帳密才能下載專案
[![](https://1.bp.blogspot.com/-UpeLRN8U0PE/V7Ahn9MCkUI/AAAAAAAAD04/exwpySFk3e04-KQUhzyGOvuSOUUhwfz2ACLcB/s1600/07.png)](https://1.bp.blogspot.com/-UpeLRN8U0PE/V7Ahn9MCkUI/AAAAAAAAD04/exwpySFk3e04-KQUhzyGOvuSOUUhwfz2ACLcB/s1600/07.png) 右上角的路徑是當初設定時所輸入的網址 [![](https://1.bp.blogspot.com/-FnJ590Dnwuk/V7AhoPh1v-I/AAAAAAAAD08/bIq-2UuFjw8fHmDXUErnzk53VZqHL5BNwCLcB/s1600/08.png)](https://1.bp.blogspot.com/-FnJ590Dnwuk/V7AhoPh1v-I/AAAAAAAAD08/bIq-2UuFjw8fHmDXUErnzk53VZqHL5BNwCLcB/s1600/08.png) 把專案取回來 [![](https://2.bp.blogspot.com/-8D2dnijW8iU/V7AhoAhuuII/AAAAAAAAD1A/EfiP0lkTnIctqFIg5MYCPJwm2LG0tZDxQCLcB/s1600/09.png)](https://2.bp.blogspot.com/-8D2dnijW8iU/V7AhoAhuuII/AAAAAAAAD1A/EfiP0lkTnIctqFIg5MYCPJwm2LG0tZDxQCLcB/s1600/09.png) 因為是私人專案所以需要輸入帳密 [![](https://2.bp.blogspot.com/-oWo36HJO95s/V7AhoYm3wGI/AAAAAAAAD1E/EHmOwTNy4cYps0h42LRlywrzfFZjqNrwgCLcB/s1600/10.png)](https://2.bp.blogspot.com/-oWo36HJO95s/V7AhoYm3wGI/AAAAAAAAD1E/EHmOwTNy4cYps0h42LRlywrzfFZjqNrwgCLcB/s1600/10.png) 新增一個測試專案 [![](https://2.bp.blogspot.com/-AAMdPFCFdBs/V7AhoTl8-kI/AAAAAAAAD1I/mkN1UwVRkIYmnoKzJHVDFDWBk8BjI5mDQCLcB/s1600/12.png)](https://2.bp.blogspot.com/-AAMdPFCFdBs/V7AhoTl8-kI/AAAAAAAAD1I/mkN1UwVRkIYmnoKzJHVDFDWBk8BjI5mDQCLcB/s1600/12.png) 把測試專案移到工作目錄後送交 [![](https://2.bp.blogspot.com/-_xT0GLgF-_A/V7Ahor84L_I/AAAAAAAAD1M/K1nxBB2GMIASEkmh6bQerNAgNKUIKld_ACLcB/s1600/13.png)](https://2.bp.blogspot.com/-_xT0GLgF-_A/V7Ahor84L_I/AAAAAAAAD1M/K1nxBB2GMIASEkmh6bQerNAgNKUIKld_ACLcB/s1600/13.png) 把測試專案推送到gogs [![](https://2.bp.blogspot.com/-e880ZNeiJGU/V7Ahooi8LkI/AAAAAAAAD1Q/hs5y8jaoI8MkotEQSHFkZ-NwTDhuGKRhwCLcB/s1600/15.png)](https://2.bp.blogspot.com/-e880ZNeiJGU/V7Ahooi8LkI/AAAAAAAAD1Q/hs5y8jaoI8MkotEQSHFkZ-NwTDhuGKRhwCLcB/s1600/15.png) 專案同步完成 [!</description>
    </item>
    
    <item>
      <title>Hello .NET Core 1.0</title>
      <link>http://example.org/posts/2016/08/hello-net-core-1-0/</link>
      <pubDate>Sun, 14 Aug 2016 12:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/08/hello-net-core-1-0/</guid>
      <description>首先到官網按照步驟安裝SDK
[![](https://2.bp.blogspot.com/-8cuW-kzgdOA/V6_aFBAfQ5I/AAAAAAAADz4/BK4Nf_FlkBsQNDMzAGhUQooLGDlon56bwCLcB/s1600/01.png)](https://2.bp.blogspot.com/-8cuW-kzgdOA/V6_aFBAfQ5I/AAAAAAAADz4/BK4Nf_FlkBsQNDMzAGhUQooLGDlon56bwCLcB/s1600/01.png) 使用dotnet new 命令來初始化一個專案
[![](https://2.bp.blogspot.com/-bHmStXZF-Yc/V6_aFE7U2HI/AAAAAAAADz8/FWvCy2ny7w49Ft8B-KhfcI4WjsvwFIhbQCLcB/s1600/02.png)](https://2.bp.blogspot.com/-bHmStXZF-Yc/V6_aFE7U2HI/AAAAAAAADz8/FWvCy2ny7w49Ft8B-KhfcI4WjsvwFIhbQCLcB/s1600/02.png) dotnet restore:還原套件 dotnet build:建置專案 dotnet run:執行專案 [![](https://3.bp.blogspot.com/-NQgyN2ZYFsU/V6_aFGcGTmI/AAAAAAAADz0/u6mszI4_3HwObdE8_Yi0uAwHLFyzwZ7ggCLcB/s1600/03.png)](https://3.bp.blogspot.com/-NQgyN2ZYFsU/V6_aFGcGTmI/AAAAAAAADz0/u6mszI4_3HwObdE8_Yi0uAwHLFyzwZ7ggCLcB/s1600/03.png) 打開http://127.0.01:5000就可以看到站台了
[![](https://2.bp.blogspot.com/--vN4i89yLj0/V6_aFdNvrpI/AAAAAAAAD0A/Rry3hJLTG4kweQbP29448yzqsmgp0nD7wCLcB/s1600/04.png)](https://2.bp.blogspot.com/--vN4i89yLj0/V6_aFdNvrpI/AAAAAAAAD0A/Rry3hJLTG4kweQbP29448yzqsmgp0nD7wCLcB/s1600/04.png) dotnet publish: 發佈專案 帶入-output參數可以指發佈的路徑 [![](https://2.bp.blogspot.com/-bLopWepOecU/V6_aFqVQhzI/AAAAAAAAD0E/EUhpOmrE-IMrqHU4l_qWgF-JuHN-w6PBgCLcB/s1600/05.png)](https://2.bp.blogspot.com/-bLopWepOecU/V6_aFqVQhzI/AAAAAAAAD0E/EUhpOmrE-IMrqHU4l_qWgF-JuHN-w6PBgCLcB/s1600/05.png) 發佈後的資料夾
[![](https://1.bp.blogspot.com/-tCreZAN8ees/V6_aFvJt6yI/AAAAAAAAD0I/yCKsFT8w_YQjqBMeEhW5ky0TpCqVycU6wCLcB/s1600/07.png)](https://1.bp.blogspot.com/-tCreZAN8ees/V6_aFvJt6yI/AAAAAAAAD0I/yCKsFT8w_YQjqBMeEhW5ky0TpCqVycU6wCLcB/s1600/07.png) 使用dotnet命令來執行專案的dll [!</description>
    </item>
    
    <item>
      <title>StyleCop SA1208 排列Using時先放置System指示詞</title>
      <link>http://example.org/posts/2016/06/stylecop-sa1208-%E6%8E%92%E5%88%97using%E6%99%82%E5%85%88%E6%94%BE%E7%BD%AEsystem%E6%8C%87%E7%A4%BA%E8%A9%9E/</link>
      <pubDate>Tue, 07 Jun 2016 14:12:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/06/stylecop-sa1208-%E6%8E%92%E5%88%97using%E6%99%82%E5%85%88%E6%94%BE%E7%BD%AEsystem%E6%8C%87%E7%A4%BA%E8%A9%9E/</guid>
      <description>在使用組合管理Using-&amp;gt;移除並排序Using功能的時後，會依照字母的順序排序
[![](https://2.bp.blogspot.com/-4_luDR6yqzk/V1Zluu_U-5I/AAAAAAAADyg/peZgQ-8DWE80Jz07KFQ_5hDzB6sP7lTuQCLcB/s1600/01.png)](https://2.bp.blogspot.com/-4_luDR6yqzk/V1Zluu_U-5I/AAAAAAAADyg/peZgQ-8DWE80Jz07KFQ_5hDzB6sP7lTuQCLcB/s1600/01.png) StyleCop就會靠北說System開頭的命名空間要放在最上面 SA1208 : CSharp.Ordering : System using directives must be placed before all other using directives
[![](https://1.bp.blogspot.com/-y1iOIfsjlRs/V1Zlup2ZRuI/AAAAAAAADyc/p7rBuW9mtIYgN1bjbykZ3JXbyjq2wYlpwCLcB/s1600/02.png)](https://1.bp.blogspot.com/-y1iOIfsjlRs/V1Zlup2ZRuI/AAAAAAAADyc/p7rBuW9mtIYgN1bjbykZ3JXbyjq2wYlpwCLcB/s1600/02.png) 工具-&amp;gt;選項-&amp;gt;文字編輯器-&amp;gt;C#-&amp;gt;進階- 排序Usning時先放置System指示詞勾起來就行了</description>
    </item>
    
    <item>
      <title>angular-deferred-bootstrap</title>
      <link>http://example.org/posts/2016/05/angular-deferred-bootstrap/</link>
      <pubDate>Mon, 23 May 2016 18:03:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/05/angular-deferred-bootstrap/</guid>
      <description>angular-deferred-bootstrap angular-deferred-bootstrap是用來初始化angular應用程式的套件
安裝 bower install --save angular-deferred-bootstrap 用法 deferredBootstrapper.bootstrap({ &amp;amp;nbsp; element: document.body, &amp;amp;nbsp; module: &amp;#39;MyApp&amp;#39;, &amp;amp;nbsp; resolve: { &amp;amp;nbsp; &amp;amp;nbsp; APP_CONFIG: [&amp;#39;$http&amp;#39;, function ($http) { &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; return $http.get(&amp;#39;/api/demo-config&amp;#39;); &amp;amp;nbsp; &amp;amp;nbsp; }] &amp;amp;nbsp; } }); 載入狀態css類別  deferred-bootstrap-loading while the data is loading deferred-bootstrap-error if an error occurs in a resolve function and the app can not be bootstrapped  #loading { &amp;amp;nbsp; &amp;amp;nbsp; display: none; } .deferred-bootstrap-loading #loading { &amp;amp;nbsp; &amp;amp;nbsp; display: block !</description>
    </item>
    
    <item>
      <title>angular-cron-jobs</title>
      <link>http://example.org/posts/2016/05/angular-cron-jobs/</link>
      <pubDate>Mon, 23 May 2016 17:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/05/angular-cron-jobs/</guid>
      <description>angular-cron-jobs angular-cron-jobs是用來轉換crontab語法的介面
安裝 bower install angular-cron-jobs 載入模組 angular.module(&amp;#39;myApp&amp;#39;, [&amp;#39;angular-cron-jobs&amp;#39;]); 用法  output:輸出值 config:設定值 init:初始值  &amp;amp;lt;cron-selection output=&amp;#34;myOutput&amp;#34; config=&amp;#34;myConfig&amp;#34; init=&amp;#34;serverData&amp;#34;&amp;amp;gt;&amp;amp;lt;/cron-selection&amp;amp;gt; 設定值 $scope.myConfig = { &amp;amp;nbsp; &amp;amp;nbsp; options: { &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; allowWeek : false, &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; allowMonth : false, &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; allowYear : false &amp;amp;nbsp; &amp;amp;nbsp; } } </description>
    </item>
    
    <item>
      <title>C# 排程套件: Quartz</title>
      <link>http://example.org/posts/2016/05/c-%E6%8E%92%E7%A8%8B%E5%A5%97%E4%BB%B6-quartz/</link>
      <pubDate>Mon, 23 May 2016 17:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/05/c-%E6%8E%92%E7%A8%8B%E5%A5%97%E4%BB%B6-quartz/</guid>
      <description>Quartz 套件 簡介 Quartz是個排程套件
安裝 $ install-package Quartz 建立Job namespace ConsoleApplication1 { &amp;amp;nbsp; &amp;amp;nbsp; using System; &amp;amp;nbsp; &amp;amp;nbsp; using Quartz; &amp;amp;nbsp; &amp;amp;nbsp; [DisallowConcurrentExecution] &amp;amp;nbsp; &amp;amp;nbsp; internal class MyJob : IJob &amp;amp;nbsp; &amp;amp;nbsp; { &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; public void Execute(IJobExecutionContext context) &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; { &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; Console.WriteLine(&amp;#34;do job&amp;#34;); &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; } &amp;amp;nbsp; &amp;amp;nbsp; } } 建立排程 namespace ConsoleApplication1 { &amp;amp;nbsp; &amp;amp;nbsp; using Quartz; &amp;amp;nbsp; &amp;amp;nbsp; using Quartz.</description>
    </item>
    
    <item>
      <title>dbup - 資料庫更新工具</title>
      <link>http://example.org/posts/2016/05/dbup-%E8%B3%87%E6%96%99%E5%BA%AB%E6%9B%B4%E6%96%B0%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 18 May 2016 15:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/05/dbup-%E8%B3%87%E6%96%99%E5%BA%AB%E6%9B%B4%E6%96%B0%E5%B7%A5%E5%85%B7/</guid>
      <description>dbup是一個用來更新資料庫的工庫，只能往前更新，不能往後回復更新 dbup-consolescripts是用來新增一個年月日時分秒_檔名.sql的套件
新增一個Console專案
[![](https://4.bp.blogspot.com/-mogF88yuPbM/VzwauDgNoCI/AAAAAAAADxs/xQeX1VxpOh0gCJj1SDOHjbU38SjXthHQgCLcB/s1600/01.png)](https://4.bp.blogspot.com/-mogF88yuPbM/VzwauDgNoCI/AAAAAAAADxs/xQeX1VxpOh0gCJj1SDOHjbU38SjXthHQgCLcB/s1600/01.png) 透過NuGet新增dbup和db-consolescripts套件 $ install-package dbup $ install-package dbup-consolescripts [![](https://2.bp.blogspot.com/-oV1LzJLW774/VzwauAIASRI/AAAAAAAADxk/0ahWoAwgPMcxgb21clM47CU7mhOZPhhRQCLcB/s1600/02.png)](https://2.bp.blogspot.com/-oV1LzJLW774/VzwauAIASRI/AAAAAAAADxk/0ahWoAwgPMcxgb21clM47CU7mhOZPhhRQCLcB/s1600/02.png) 加入System.Configuration參考 [![](https://2.bp.blogspot.com/-2MXHs6-ULcU/VzwauNNva1I/AAAAAAAADxo/4u4Kh9JLsn09nbXM-nbdqo5Oa00XHRCAQCLcB/s1600/03.png)](https://2.bp.blogspot.com/-2MXHs6-ULcU/VzwauNNva1I/AAAAAAAADxo/4u4Kh9JLsn09nbXM-nbdqo5Oa00XHRCAQCLcB/s1600/03.png) 新增連線字串 &amp;amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;amp;gt; &amp;amp;lt;configuration&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;connectionStrings&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;add name=&amp;#34;DBConn&amp;#34; providerName=&amp;#34;System.Data.SqlClient&amp;#34; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;connectionString=&amp;#34;data source=(localdb)\ATCity;initial catalog=RankingSystem;trusted_connection=true;&amp;#34;/&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;/connectionStrings&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;startup&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;supportedRuntime version=&amp;#34;v4.0&amp;#34; sku=&amp;#34;.NETFramework,Version=v4.5&amp;#34; /&amp;amp;gt; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;lt;/startup&amp;amp;gt; &amp;amp;lt;/configuration&amp;amp;gt; 修改Program.cs namespace SGT.ATCity.RankingSystem.Database { &amp;amp;nbsp; &amp;amp;nbsp; using System; &amp;amp;nbsp; &amp;amp;nbsp; using System.</description>
    </item>
    
    <item>
      <title>透過Application Request Route來做SSL offloading</title>
      <link>http://example.org/posts/2016/05/%E9%80%8F%E9%81%8Eapplication-request-route%E4%BE%86%E5%81%9Assl-offloading/</link>
      <pubDate>Sun, 08 May 2016 12:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/05/%E9%80%8F%E9%81%8Eapplication-request-route%E4%BE%86%E5%81%9Assl-offloading/</guid>
      <description>Application Request Route 越來越多站台要開始使用SSL了, 記錄一下使用Application Request Route來做SSL offloading的用法
首先透過Web Platform Installer來安裝ARR [![](https://1.bp.blogspot.com/-ElT4qkQUCMg/Vy6-1AwXW9I/AAAAAAAADwo/F5deoTLNuUYZCXB6Wa9fWioG_MkC_12nQCLcB/s1600/01.png)](https://1.bp.blogspot.com/-ElT4qkQUCMg/Vy6-1AwXW9I/AAAAAAAADwo/F5deoTLNuUYZCXB6Wa9fWioG_MkC_12nQCLcB/s1600/01.png) 搜尋Application Request Routing, 找到後點安裝就行了 [![](https://2.bp.blogspot.com/-PqGjDtVXRKE/Vy6-1HeRtPI/AAAAAAAADws/8USKKPPzNtszIbaUSy_KROwdUHAo6C1LACLcB/s1600/02.png)](https://2.bp.blogspot.com/-PqGjDtVXRKE/Vy6-1HeRtPI/AAAAAAAADws/8USKKPPzNtszIbaUSy_KROwdUHAo6C1LACLcB/s1600/02.png) 重新打開IIS會看到新增了Server Farms和ARR和URL Rewrite這幾個功能 [![](https://3.bp.blogspot.com/-SAnm-5fysLo/Vy6-09HaEuI/AAAAAAAADwk/UdlVYz0Cm3Yz9x0uXyEcxvxeV9mQS_WAwCLcB/s1600/03.png)](https://3.bp.blogspot.com/-SAnm-5fysLo/Vy6-09HaEuI/AAAAAAAADwk/UdlVYz0Cm3Yz9x0uXyEcxvxeV9mQS_WAwCLcB/s1600/03.png) 先建立一個預設的站台來繫結https通訊協定 [![](https://4.bp.blogspot.com/-wOACJ9Oz_Dk/Vy6-1ZMCEnI/AAAAAAAADww/HrE4keo33UkK3nuuMhXIFyQrWz18IELSgCLcB/s1600/04.png)](https://4.bp.blogspot.com/-wOACJ9Oz_Dk/Vy6-1ZMCEnI/AAAAAAAADww/HrE4keo33UkK3nuuMhXIFyQrWz18IELSgCLcB/s1600/04.png) 只有預設站台是HTTPS, 其他站台都是HTTP [![](https://2.bp.blogspot.com/-JApbMNiN87M/Vy6-1iZNSmI/AAAAAAAADw4/wr7iijiMFoAZzzJFxZ5LLncz7yWhoEJ7ACLcB/s1600/05.png)](https://2.bp.blogspot.com/-JApbMNiN87M/Vy6-1iZNSmI/AAAAAAAADw4/wr7iijiMFoAZzzJFxZ5LLncz7yWhoEJ7ACLcB/s1600/05.png) 建立一組Server Farms [![](https://1.bp.blogspot.com/-W1G06hP7xQc/Vy6-1ekSG8I/AAAAAAAADw0/brdiY-EUg4I5eOFOqdL0FnY90qX3UuvJwCLcB/s1600/06.png)](https://1.bp.blogspot.com/-W1G06hP7xQc/Vy6-1ekSG8I/AAAAAAAADw0/brdiY-EUg4I5eOFOqdL0FnY90qX3UuvJwCLcB/s1600/06.png) 建立一條路由規則來強制站台只能使用https通訊協定 [![](https://3.bp.blogspot.com/-TzVI_c6eXAE/Vy6-1pAPevI/AAAAAAAADw8/-1-hgZkbNIY8HC0WhcKZevo6giJ6hF--QCLcB/s1600/07.png)](https://3.bp.blogspot.com/-TzVI_c6eXAE/Vy6-1pAPevI/AAAAAAAADw8/-1-hgZkbNIY8HC0WhcKZevo6giJ6hF--QCLcB/s1600/07.png) 建立第二條路由規則來處理SSL offloading路由到原來只繫結http的站台 [![](https://2.bp.blogspot.com/-f_vIIp3UtEY/Vy6-1z0koVI/AAAAAAAADxA/AuXVhz2ecYwiHH8q-z97tLFavcCzRRPLwCLcB/s1600/08.png)](https://2.bp.blogspot.com/-f_vIIp3UtEY/Vy6-1z0koVI/AAAAAAAADxA/AuXVhz2ecYwiHH8q-z97tLFavcCzRRPLwCLcB/s1600/08.png) http就會自動轉向https囉 [!</description>
    </item>
    
    <item>
      <title>Markdown語法簡介</title>
      <link>http://example.org/posts/2016/04/markdown%E8%AA%9E%E6%B3%95%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Tue, 26 Apr 2016 10:24:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/markdown%E8%AA%9E%E6%B3%95%E7%B0%A1%E4%BB%8B/</guid>
      <description>Markdown語法簡介 標題 &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;# H1&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;## H2&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;### H3&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;#### H4&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;##### H5&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-header&amp;quot;&amp;gt;###### H6&amp;lt;/span&amp;gt;`&amp;lt;/pre&amp;gt; ## 換行與段落    一個換行字元會轉成換行&amp;amp;lt;br /&amp;amp;gt;
  兩個換行字元會轉成段落&amp;amp;lt;p&amp;amp;gt;&amp;amp;lt;/p&amp;amp;gt;`第一段 第一行 第二行
第二段 第一行 第二行`
字體 `*斜體* **粗體** ***粗斜體*** ~~刪除線~~` 引言 `&amp;gt; 用&amp;gt;和一個空白表示 &amp;gt;&amp;gt; 多個&amp;gt;表示嵌套` 水平分隔線 `三個以上的星號、連字號、底線表示 不能有空白或其他的文字 *** --- ___` 無序清單 `* 星號加空白 * 加Tab可嵌套清單 + 加號也可以 - 減號也可以` 有序清單 `1\. 格式為一個數字加小數點加空白 2\. 數字本身順序不重要會自動遞增 1\. 一樣用加Tab可以嵌套` 超連結 `* [行內連結](https://www.google.com) * [帶標題的行內連結](https://www.</description>
    </item>
    
    <item>
      <title>安裝gitbook-cli套件</title>
      <link>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dgitbook-cli%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Tue, 26 Apr 2016 10:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dgitbook-cli%E5%A5%97%E4%BB%B6/</guid>
      <description>安裝gitbook-cli套件 打開命令視窗 $ npm install gitbook-cli -g [![](https://4.bp.blogspot.com/-c2sNfkVb0Ak/Vx7Q4UEFNFI/AAAAAAAADu4/KufuhMsAEfYpYfUZKzENgKX0MuxujO37wCLcB/s1600/01.png)](https://4.bp.blogspot.com/-c2sNfkVb0Ak/Vx7Q4UEFNFI/AAAAAAAADu4/KufuhMsAEfYpYfUZKzENgKX0MuxujO37wCLcB/s1600/01.png) 到gitbook新增一本書 [![](https://4.bp.blogspot.com/-0gERcw00EKI/Vx7Q4c0qDPI/AAAAAAAADu8/YZ6P9jaunpwDpJ3wjHus68mESLDtunWOgCLcB/s1600/02.png)](https://4.bp.blogspot.com/-0gERcw00EKI/Vx7Q4c0qDPI/AAAAAAAADu8/YZ6P9jaunpwDpJ3wjHus68mESLDtunWOgCLcB/s1600/02.png) 輸入書名 [![](https://1.bp.blogspot.com/-xaAtNiEzDck/Vx7Q4XnXYOI/AAAAAAAADvA/Tj8c6D9Npq0fYO9Lh411JQZ26HOOde-5wCLcB/s1600/03.png)](https://1.bp.blogspot.com/-xaAtNiEzDck/Vx7Q4XnXYOI/AAAAAAAADvA/Tj8c6D9Npq0fYO9Lh411JQZ26HOOde-5wCLcB/s1600/03.png) 進入設定頁面 [![](https://2.bp.blogspot.com/-SDs_CHuIDLM/Vx7Q4g_vBbI/AAAAAAAADvE/IiTyOM_CClMDyQTtaKrXjyf7BfjsnveLgCLcB/s1600/04.png)](https://2.bp.blogspot.com/-SDs_CHuIDLM/Vx7Q4g_vBbI/AAAAAAAADvE/IiTyOM_CClMDyQTtaKrXjyf7BfjsnveLgCLcB/s1600/04.png) 取得git路徑 https://git.gitbook.com/{username}/{bookname}.git [![](https://3.bp.blogspot.com/-BYik6CeSdIE/Vx7Q45JruuI/AAAAAAAADvI/Za1vyQhkd0Q1_ZfYLZUlxZW3Mlo_9y7WACLcB/s1600/05.png)](https://3.bp.blogspot.com/-BYik6CeSdIE/Vx7Q45JruuI/AAAAAAAADvI/Za1vyQhkd0Q1_ZfYLZUlxZW3Mlo_9y7WACLcB/s1600/05.png) 取得這本書的原始檔案 $ git clone https://git.gitbook.com/{username}/{bookname}.git bookdir [![](https://2.bp.blogspot.com/-Sb06atwi5qg/Vx7Q43FUJaI/AAAAAAAADvM/lUZKBoh0mgceJc05Ic2qZDmV4dynot7JACLcB/s1600/06.png)](https://2.bp.blogspot.com/-Sb06atwi5qg/Vx7Q43FUJaI/AAAAAAAADvM/lUZKBoh0mgceJc05Ic2qZDmV4dynot7JACLcB/s1600/06.png) 使用Visual Studio Code打開資料夾 [![](https://4.bp.blogspot.com/-5TFjL1ZKGY8/Vx7Q5K5CBgI/AAAAAAAADvQ/UwQz1vxI7SY_FE1nmIgNku3RFA_aof0HACLcB/s1600/07.png)](https://4.bp.blogspot.com/-5TFjL1ZKGY8/Vx7Q5K5CBgI/AAAAAAAADvQ/UwQz1vxI7SY_FE1nmIgNku3RFA_aof0HACLcB/s1600/07.png) 在本地端觀看編輯後的結果 $ gitbook serve [![](https://4.bp.blogspot.com/-AobZ7eNyvDQ/Vx7Q5dttWhI/AAAAAAAADvU/SLCiXw_8SzY-FycsUL_YtC4I5Rp2cVPbQCLcB/s1600/08.png)](https://4.bp.blogspot.com/-AobZ7eNyvDQ/Vx7Q5dttWhI/AAAAAAAADvU/SLCiXw_8SzY-FycsUL_YtC4I5Rp2cVPbQCLcB/s1600/08.png) 輸入此次異動的訊息 [![](https://2.bp.blogspot.com/-5CIEZEcRakU/Vx7Q5eBHCzI/AAAAAAAADvY/5G6x9gqc03I92n6QZemfkED_vb_dcr-CQCLcB/s1600/09.png)](https://2.bp.blogspot.com/-5CIEZEcRakU/Vx7Q5eBHCzI/AAAAAAAADvY/5G6x9gqc03I92n6QZemfkED_vb_dcr-CQCLcB/s1600/09.png) 同步記錄到gitbook [!</description>
    </item>
    
    <item>
      <title>安裝NodeJS</title>
      <link>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dnodejs/</link>
      <pubDate>Tue, 26 Apr 2016 10:20:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dnodejs/</guid>
      <description>安裝NodeJS 到官網下載安裝程式 [![](https://2.bp.blogspot.com/-zqxVXCYaHLs/Vx7QSctzWTI/AAAAAAAADuc/HWI51Qm2uEINknmIpbTsYxfe2oo3IsRRQCLcB/s1600/01.png)](https://2.bp.blogspot.com/-zqxVXCYaHLs/Vx7QSctzWTI/AAAAAAAADuc/HWI51Qm2uEINknmIpbTsYxfe2oo3IsRRQCLcB/s1600/01.png) 雙擊安裝程式開始安裝 [![](https://4.bp.blogspot.com/-6CjssQgIWtw/Vx7QSc0KaSI/AAAAAAAADuU/be1BYXZTy2QHZk2AzKI9pCbrvzqGHyRLgCLcB/s1600/02.png)](https://4.bp.blogspot.com/-6CjssQgIWtw/Vx7QSc0KaSI/AAAAAAAADuU/be1BYXZTy2QHZk2AzKI9pCbrvzqGHyRLgCLcB/s1600/02.png) 接受授權條款 [![](https://3.bp.blogspot.com/-B-4-D6NeuJQ/Vx7QSb2FSlI/AAAAAAAADuY/51OaG65vqXQHJb9YihIhybygHkxbi2vOgCLcB/s1600/03.png)](https://3.bp.blogspot.com/-B-4-D6NeuJQ/Vx7QSb2FSlI/AAAAAAAADuY/51OaG65vqXQHJb9YihIhybygHkxbi2vOgCLcB/s1600/03.png) 選擇安裝路徑 [![](https://3.bp.blogspot.com/-5YSHvoyPNI8/Vx7QS6gVlTI/AAAAAAAADug/L7kx6dFJVDkMXWSsCT_fZYE1GoruR1nbACLcB/s1600/04.png)](https://3.bp.blogspot.com/-5YSHvoyPNI8/Vx7QS6gVlTI/AAAAAAAADug/L7kx6dFJVDkMXWSsCT_fZYE1GoruR1nbACLcB/s1600/04.png) 自訂安裝設定(使用預設值即可) [![](https://3.bp.blogspot.com/-Hgc-P0PW0b0/Vx7QS4rOmaI/AAAAAAAADuk/XhCNfuRhs40Y0--kSPk6xL7oS_QGzAnmgCLcB/s1600/05.png)](https://3.bp.blogspot.com/-Hgc-P0PW0b0/Vx7QS4rOmaI/AAAAAAAADuk/XhCNfuRhs40Y0--kSPk6xL7oS_QGzAnmgCLcB/s1600/05.png) 準備安裝 [![](https://4.bp.blogspot.com/-oOaOfTe9LNk/Vx7QS5b6XBI/AAAAAAAADuo/iHvQK-XEeQQ23HMq41-wQGQJzq2kTQMUwCLcB/s1600/06.png)](https://4.bp.blogspot.com/-oOaOfTe9LNk/Vx7QS5b6XBI/AAAAAAAADuo/iHvQK-XEeQQ23HMq41-wQGQJzq2kTQMUwCLcB/s1600/06.png) 安裝中 [![](https://2.bp.blogspot.com/-ahztXiULWuA/Vx7QTIkbmoI/AAAAAAAADus/H8vEU_9ONZwQXsVpnphvUxffAdvYVCQaQCLcB/s1600/07.png)](https://2.bp.blogspot.com/-ahztXiULWuA/Vx7QTIkbmoI/AAAAAAAADus/H8vEU_9ONZwQXsVpnphvUxffAdvYVCQaQCLcB/s1600/07.png) 安裝完成 [!</description>
    </item>
    
    <item>
      <title>安裝 git for windows</title>
      <link>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9D-git-for-windows/</link>
      <pubDate>Tue, 26 Apr 2016 10:19:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9D-git-for-windows/</guid>
      <description>安裝Git for Windows 先到官網下載安裝程式 [![](https://3.bp.blogspot.com/-dABrzIH45zw/Vx7Lj4gC5cI/AAAAAAAADto/wDSxRlU__z4yVizIPpKTtagkGm7rUvAnwCLcB/s1600/01.png)](https://3.bp.blogspot.com/-dABrzIH45zw/Vx7Lj4gC5cI/AAAAAAAADto/wDSxRlU__z4yVizIPpKTtagkGm7rUvAnwCLcB/s1600/01.png) 雙擊安裝程式開始安裝 [![](https://2.bp.blogspot.com/-SVZBAJjLuoE/Vx7Lj_iHLCI/AAAAAAAADtg/_aew6AjLcA4yEfmxyX56GDXH-ZEW5cQ6gCLcB/s1600/02.png)](https://2.bp.blogspot.com/-SVZBAJjLuoE/Vx7Lj_iHLCI/AAAAAAAADtg/_aew6AjLcA4yEfmxyX56GDXH-ZEW5cQ6gCLcB/s1600/02.png) 選擇安裝路徑 [![](https://3.bp.blogspot.com/-CDQWRrC3Q80/Vx7Lj28kIfI/AAAAAAAADtk/tzFzNQxljCcwA_wSR1qOqFbtKQm3SSsNwCLcB/s1600/03.png)](https://3.bp.blogspot.com/-CDQWRrC3Q80/Vx7Lj28kIfI/AAAAAAAADtk/tzFzNQxljCcwA_wSR1qOqFbtKQm3SSsNwCLcB/s1600/03.png) 選擇安裝元件 [![](https://4.bp.blogspot.com/-TNr0zgsVlfk/Vx7LkdlY2pI/AAAAAAAADts/-PUOHdpv0okp8JmcIibS-NODMW0HqgJnwCLcB/s1600/04.png)](https://4.bp.blogspot.com/-TNr0zgsVlfk/Vx7LkdlY2pI/AAAAAAAADts/-PUOHdpv0okp8JmcIibS-NODMW0HqgJnwCLcB/s1600/04.png) 輸入開始功能表的資料夾名稱 [![](https://4.bp.blogspot.com/-rw5kaupPgmg/Vx7LkTpp1fI/AAAAAAAADtw/Vq_4V8FaOBIcO10mRbyW2GdFXk9BhwKZwCLcB/s1600/05.png)](https://4.bp.blogspot.com/-rw5kaupPgmg/Vx7LkTpp1fI/AAAAAAAADtw/Vq_4V8FaOBIcO10mRbyW2GdFXk9BhwKZwCLcB/s1600/05.png) 調整環境路徑 [![](https://3.bp.blogspot.com/-uDjSPyDBqw8/Vx7LkXz72OI/AAAAAAAADt0/8YHMNtcKx1UI4xUGhWm2gv828jj_E3Q1QCLcB/s1600/06.png)](https://3.bp.blogspot.com/-uDjSPyDBqw8/Vx7LkXz72OI/AAAAAAAADt0/8YHMNtcKx1UI4xUGhWm2gv828jj_E3Q1QCLcB/s1600/06.png) 設定文件的結尾符號 [![](https://1.bp.blogspot.com/-55AKWEwo0ZM/Vx7LkqKHe5I/AAAAAAAADt4/R_Up4rvb6509tfgvEVoerx2yrYy4hoQsQCLcB/s1600/07.png)](https://1.bp.blogspot.com/-55AKWEwo0ZM/Vx7LkqKHe5I/AAAAAAAADt4/R_Up4rvb6509tfgvEVoerx2yrYy4hoQsQCLcB/s1600/07.png) 設定命令列模式 [![](https://1.bp.blogspot.com/-KZPND7pw0ik/Vx7Lk3UG4EI/AAAAAAAADt8/fZIJJTuV22kYNcc6IBVzsMYod1ZHbqK-gCLcB/s1600/08.png)](https://1.bp.blogspot.com/-KZPND7pw0ik/Vx7Lk3UG4EI/AAAAAAAADt8/fZIJJTuV22kYNcc6IBVzsMYod1ZHbqK-gCLcB/s1600/08.png) 設定快取 [![](https://3.bp.blogspot.com/-vmGiLuQY9r4/Vx7Lk-EAw9I/AAAAAAAADuA/j8y38z-nuywtpiTe9OZxyA0BHyzTVGxygCLcB/s1600/09.png)](https://3.bp.blogspot.com/-vmGiLuQY9r4/Vx7Lk-EAw9I/AAAAAAAADuA/j8y38z-nuywtpiTe9OZxyA0BHyzTVGxygCLcB/s1600/09.png) 開始安裝 [![](https://4.bp.blogspot.com/-6D58j-Yqvmo/Vx7LlGU4dXI/AAAAAAAADuE/jzXs3GRKsIgLDm0qLvCP6YJRrUgEYQAZgCLcB/s1600/10.png)](https://4.bp.blogspot.com/-6D58j-Yqvmo/Vx7LlGU4dXI/AAAAAAAADuE/jzXs3GRKsIgLDm0qLvCP6YJRrUgEYQAZgCLcB/s1600/10.png) 安裝完成 [!</description>
    </item>
    
    <item>
      <title>安裝Visual Studio Code</title>
      <link>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dvisual-studio-code/</link>
      <pubDate>Tue, 26 Apr 2016 09:58:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/%E5%AE%89%E8%A3%9Dvisual-studio-code/</guid>
      <description>安裝Visual Studio Code 先到官網下載安裝程式 [![](https://3.bp.blogspot.com/-JpT7bFdxIzc/Vx7K90TZb2I/AAAAAAAADtA/XtAvvO8hKcwyZPWPKXfy7EvNBl2y6HOzACKgB/s1600/01.png)](https://3.bp.blogspot.com/-JpT7bFdxIzc/Vx7K90TZb2I/AAAAAAAADtA/XtAvvO8hKcwyZPWPKXfy7EvNBl2y6HOzACKgB/s1600/01.png) 下載好後雙擊安裝程式開始安裝 [![](https://3.bp.blogspot.com/-eDTvTRVrwq8/Vx7K9wZVTSI/AAAAAAAADs4/-5Wg8EvXTB4DxIZG7X_Oec6yMO4vsNougCKgB/s1600/02.png)](https://3.bp.blogspot.com/-eDTvTRVrwq8/Vx7K9wZVTSI/AAAAAAAADs4/-5Wg8EvXTB4DxIZG7X_Oec6yMO4vsNougCKgB/s1600/02.png) 接受授權合約 [![](https://2.bp.blogspot.com/-8JGO3W-0Aq8/Vx7K9ykL_zI/AAAAAAAADs8/0-sMMThWhLoJLmF5IBx56W03S3Tm4RzFgCKgB/s1600/03.png)](https://2.bp.blogspot.com/-8JGO3W-0Aq8/Vx7K9ykL_zI/AAAAAAAADs8/0-sMMThWhLoJLmF5IBx56W03S3Tm4RzFgCKgB/s1600/03.png) 選擇安裝的路徑 [![](https://3.bp.blogspot.com/-W8cvFQsEjfI/Vx7K-UdteGI/AAAAAAAADtE/a5lutEHj8N0zWW-RVwtYLDDNtzr4FIe3ACKgB/s1600/04.png)](https://3.bp.blogspot.com/-W8cvFQsEjfI/Vx7K-UdteGI/AAAAAAAADtE/a5lutEHj8N0zWW-RVwtYLDDNtzr4FIe3ACKgB/s1600/04.png) 輸入之後要在功能表顯示的名稱 [![](https://2.bp.blogspot.com/-imy5YTGvwKA/Vx7K-q8Wt-I/AAAAAAAADtI/OLHyClW0Hq8FOsgqyf5VhFgeSBFKyX9LACKgB/s1600/05.png)](https://2.bp.blogspot.com/-imy5YTGvwKA/Vx7K-q8Wt-I/AAAAAAAADtI/OLHyClW0Hq8FOsgqyf5VhFgeSBFKyX9LACKgB/s1600/05.png) 勾選加入資料夾和檔案的操作功能表 [![](https://4.bp.blogspot.com/-rkr_KMFXDlo/Vx7K-i9zzxI/AAAAAAAADtM/0btaZ4OUjNsqODpjEn3VzV_hhcaPuwKGACKgB/s1600/06.png)](https://4.bp.blogspot.com/-rkr_KMFXDlo/Vx7K-i9zzxI/AAAAAAAADtM/0btaZ4OUjNsqODpjEn3VzV_hhcaPuwKGACKgB/s1600/06.png) 準備安裝 [![](https://4.bp.blogspot.com/-7ma_IddXLbM/Vx7K-13vbcI/AAAAAAAADtQ/ajZpJMKUquIihu1qNnJ4jTz1s2VBUnWggCKgB/s1600/07.png)](https://4.bp.blogspot.com/-7ma_IddXLbM/Vx7K-13vbcI/AAAAAAAADtQ/ajZpJMKUquIihu1qNnJ4jTz1s2VBUnWggCKgB/s1600/07.png) 安裝中 [![](https://4.bp.blogspot.com/-jJ6AqOWMzWY/Vx7K-2L4saI/AAAAAAAADtU/aTVW-oveKiogss7xW8OQsWpGDdHKbVAMwCKgB/s1600/08.png)](https://4.bp.blogspot.com/-jJ6AqOWMzWY/Vx7K-2L4saI/AAAAAAAADtU/aTVW-oveKiogss7xW8OQsWpGDdHKbVAMwCKgB/s1600/08.png) 安裝完成 [!</description>
    </item>
    
    <item>
      <title>AngularJS ngProgress 套件</title>
      <link>http://example.org/posts/2016/04/angularjs-ngprogress-%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Fri, 08 Apr 2016 17:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/angularjs-ngprogress-%E5%A5%97%E4%BB%B6/</guid>
      <description>安裝指令 &amp;lt;span class=&amp;quot;hljs-variable&amp;quot;&amp;gt;$ &amp;lt;/span&amp;gt;bower install ngprogress`&amp;lt;/pre&amp;gt; # 加入css和js &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`&amp;lt;span class=&amp;quot;hljs-tag&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;span class=&amp;quot;hljs-title&amp;quot;&amp;gt;script&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-attribute&amp;quot;&amp;gt;src&amp;lt;/span&amp;gt;=&amp;lt;span class=&amp;quot;hljs-value&amp;quot;&amp;gt;&amp;quot;app/components/ngProgress/ngProgress.min.js&amp;quot;&amp;lt;/span&amp;gt;&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;javascript&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-tag&amp;quot;&amp;gt;&amp;amp;lt;/&amp;lt;span class=&amp;quot;hljs-title&amp;quot;&amp;gt;script&amp;lt;/span&amp;gt;&amp;amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-tag&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;span class=&amp;quot;hljs-title&amp;quot;&amp;gt;link&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-attribute&amp;quot;&amp;gt;rel&amp;lt;/span&amp;gt;=&amp;lt;span class=&amp;quot;hljs-value&amp;quot;&amp;gt;&amp;quot;stylesheet&amp;quot;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-attribute&amp;quot;&amp;gt;href&amp;lt;/span&amp;gt;=&amp;lt;span class=&amp;quot;hljs-value&amp;quot;&amp;gt;&amp;quot;ngProgress.css&amp;quot;&amp;lt;/span&amp;gt;&amp;amp;gt;&amp;lt;/span&amp;gt;`&amp;lt;/pre&amp;gt; # 載入模組 &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;var&amp;lt;/span&amp;gt; app = angular.module(&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&#39;progressApp&#39;&amp;lt;/span&amp;gt;, [&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&#39;ngProgress&#39;&amp;lt;/span&amp;gt;]);`&amp;lt;/pre&amp;gt; # 注入控制器 &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;var&amp;lt;/span&amp;gt; MainCtrl = &amp;lt;span class=&amp;quot;hljs-function&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;function&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-params&amp;quot;&amp;gt;($scope, $timeout, ngProgressFactory)&amp;lt;/span&amp;gt; {&amp;lt;/span&amp;gt;}`&amp;lt;/pre&amp;gt; # 建立進度條物件 &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`$scope.progressbar = ngProgressFactory.createInstance();`&amp;lt;/pre&amp;gt; # 啟動進度條 &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`$scope.progressbar.start(); $timeout($scope.progressbar.complete(), &amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;1000&amp;lt;/span&amp;gt;);`&amp;lt;/pre&amp;gt; # API &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;start:&amp;lt;/span&amp;gt; 啟動進度條 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;setHeight:&amp;lt;/span&amp;gt; 設定進度條高度 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;setColor:&amp;lt;/span&amp;gt; 設定進度條顏色 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;status:&amp;lt;/span&amp;gt; 進度條狀態 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;stop:&amp;lt;/span&amp;gt; 停止進度條 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;set:&amp;lt;/span&amp;gt; 設定進度 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;reset:&amp;lt;/span&amp;gt; 重設進度 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;complete:&amp;lt;/span&amp;gt; 完成進度 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;setParent:&amp;lt;/span&amp;gt; 設定進度條上層原素 &amp;lt;/span&amp;gt;-&amp;lt;span class=&amp;quot;ruby&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;hljs-symbol&amp;quot;&amp;gt;getDomElement:&amp;lt;/span&amp;gt; 取得進度條元素&amp;lt;/span&amp;gt;  相關連結 ngProgress 官網 ngProgress GitHub</description>
    </item>
    
    <item>
      <title>AngularJS ngNotify 套件</title>
      <link>http://example.org/posts/2016/04/angularjs-ngnotify-%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Fri, 08 Apr 2016 17:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/04/angularjs-ngnotify-%E5%A5%97%E4%BB%B6/</guid>
      <description>必要條件  IE9+* AngularJS 不需要JQuery  安裝指令 &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;bower&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;install&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;ng&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;notify&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;save&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;npm&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;install&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;ng&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;notify&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-literal&amp;quot;&amp;gt;-&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;save&amp;lt;/span&amp;gt;`&amp;lt;/pre&amp;gt; # CDN &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`&amp;lt;span class=&amp;quot;hljs-label&amp;quot;&amp;gt;http:&amp;lt;/span&amp;gt;//cdn&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.jsdelivr&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.net&amp;lt;/span&amp;gt;/angular&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.ng&amp;lt;/span&amp;gt;-notify/&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;0.8&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;.0&amp;lt;/span&amp;gt;/ng-notify&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.min&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.js&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-label&amp;quot;&amp;gt;http:&amp;lt;/span&amp;gt;//cdn&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.jsdelivr&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.net&amp;lt;/span&amp;gt;/angular&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.ng&amp;lt;/span&amp;gt;-notify/&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;0.8&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-number&amp;quot;&amp;gt;.0&amp;lt;/span&amp;gt;/ng-notify&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.min&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;hljs-preprocessor&amp;quot;&amp;gt;.css&amp;lt;/span&amp;gt;`&amp;lt;/pre&amp;gt; # 用法 app.js &amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;`(&amp;lt;span class=&amp;quot;hljs-function&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;hljs-keyword&amp;quot;&amp;gt;function&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-params&amp;quot;&amp;gt;()&amp;lt;/span&amp;gt; {&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;hljs-comment&amp;quot;&amp;gt;// 載入模組&amp;lt;/span&amp;gt; angular .module(&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&#39;myApp&#39;&amp;lt;/span&amp;gt;, [&amp;lt;span class=&amp;quot;hljs-string&amp;quot;&amp;gt;&#39;ngNotify&#39;&amp;lt;/span&amp;gt;]) .</description>
    </item>
    
    <item>
      <title>ChartJS 簡單好用的圖表元件</title>
      <link>http://example.org/posts/2016/03/chartjs-%E7%B0%A1%E5%96%AE%E5%A5%BD%E7%94%A8%E7%9A%84%E5%9C%96%E8%A1%A8%E5%85%83%E4%BB%B6/</link>
      <pubDate>Sat, 19 Mar 2016 11:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/03/chartjs-%E7%B0%A1%E5%96%AE%E5%A5%BD%E7%94%A8%E7%9A%84%E5%9C%96%E8%A1%A8%E5%85%83%E4%BB%B6/</guid>
      <description>正所謂一圖解千文，一張圖表可以更容易地看出資料背後所代表的意義 ChartJS是一套簡單好用基於HTML5的JS Library，提供六種圖表，使用方式還滿簡單地
首先透過Nuget或Bower取得ChartJS
$ Install-Package Chart.js $ Bower Install Chart.js  宣告一個canvas元素 &amp;lt;canvas id=&#34;myLine&#34; width=&#34;300&#34; height=&#34;400&#34;&amp;gt;&amp;lt;/canvas&amp;gt;  準備該適合該圖表的資料 把資料傳入該圖表即可 (function () {  var lineChartData = {
 labels: [&amp;ldquo;January&amp;rdquo;, &amp;ldquo;February&amp;rdquo;, &amp;ldquo;March&amp;rdquo;, &amp;ldquo;April&amp;rdquo;, &amp;ldquo;May&amp;rdquo;, &amp;ldquo;June&amp;rdquo;, &amp;ldquo;July&amp;rdquo;],
 datasets: [
 {
 fillColor: &amp;ldquo;rgba(220,220,220,0.5)&amp;rdquo;,
 strokeColor: &amp;ldquo;rgba(220,220,220,1)&amp;rdquo;,
 pointColor: &amp;ldquo;rgba(220,220,220,1)&amp;rdquo;,
 pointStrokeColor: &amp;ldquo;#fff&amp;rdquo;,
 data: [65, 59, 90, 81, 56, 55, 40]
 },
 {
 fillColor: &amp;ldquo;rgba(151,187,205,0.5)&amp;rdquo;,</description>
    </item>
    
    <item>
      <title>前端套件管理工具: Bower</title>
      <link>http://example.org/posts/2016/03/%E5%89%8D%E7%AB%AF%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-bower/</link>
      <pubDate>Tue, 15 Mar 2016 15:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/03/%E5%89%8D%E7%AB%AF%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-bower/</guid>
      <description>安裝bower$ npm install bower -g 產生設定檔$ bower init { &#34;name&#34;: &#34;ASP.NET&#34;, &#34;private&#34;: true, &#34;dependencies&#34;: { &#34;bootstrap&#34;: &#34;3.3.5&#34;, &#34;jquery&#34;: &#34;2.1.4&#34;, &#34;jquery-validation&#34;: &#34;1.14.0&#34;, &#34;jquery-validation-unobtrusive&#34;: &#34;3.2.4&#34;, &#34;angularjs&#34;: &#34;1.5.0&#34; } } 新增.bowerrc檔案輸入資料夾位置{ &#34;directory&#34;: &#34;wwwroot/lib&#34; } 安裝套件$ bower install $ bower install jquery $ bower install jquery --save $ bower install jquery --save-dev 查詢套件$ bower search jquery 查詢指定套件詳細訊息 $ bower info jquery 查詢已安裝套件$ bower list 移除套件$ bower uninstall jquery </description>
    </item>
    
    <item>
      <title>gulp 前端最佳化js和css工具</title>
      <link>http://example.org/posts/2016/03/gulp-%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%8C%96js%E5%92%8Ccss%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 14 Mar 2016 21:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/03/gulp-%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%8C%96js%E5%92%8Ccss%E5%B7%A5%E5%85%B7/</guid>
      <description>安裝gulp-cli套件 $ npm install gulp-cli -g 安裝gulp套件 $ npm install gulp --save-dev 安裝gulp plugin套件 $ npm install gulp-concat $ npm install gulp-cssmin $ npm install gulp-uglify $ npm install rimraf 新增gulpfile.js /// &amp;lt;binding BeforeBuild=&#39;min&#39; Clean=&#39;clean&#39; /&amp;gt; &#34;use strict&#34;; var gulp = require(&amp;ldquo;gulp&amp;rdquo;), rimraf = require(&amp;ldquo;rimraf&amp;rdquo;), concat = require(&amp;ldquo;gulp-concat&amp;rdquo;), cssmin = require(&amp;ldquo;gulp-cssmin&amp;rdquo;), uglify = require(&amp;ldquo;gulp-uglify&amp;rdquo;);
var paths = { webroot: &amp;ldquo;./wwwroot/&amp;rdquo; };
paths.js = paths.webroot + &amp;ldquo;js//*.js&amp;rdquo;; paths.minJs = paths.webroot + &amp;ldquo;js//.</description>
    </item>
    
    <item>
      <title>NodeJS套件管理工具</title>
      <link>http://example.org/posts/2016/03/nodejs%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 14 Mar 2016 18:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/03/nodejs%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description># npm介紹 - node package manager - [npm官網](https://www.npmjs.com/) # package.json - $ npm init [![](https://4.bp.blogspot.com/-04RgkUsOupM/VuaYTiejJRI/AAAAAAAADrE/aX4I3I-knLcwCvIya7DSSQCtZKVHylqog/s1600/01.png)](https://4.bp.blogspot.com/-04RgkUsOupM/VuaYTiejJRI/AAAAAAAADrE/aX4I3I-knLcwCvIya7DSSQCtZKVHylqog/s1600/01.png) - [package.json文件](https://docs.npmjs.com/files/package.json) [![](https://3.bp.blogspot.com/-9av8Fqm3X4Q/VuaYTuv-KtI/AAAAAAAADrA/5F0Xnq8z5K4e3WGN7SnBrUMLC7YuIdh4A/s1600/02.png)](https://3.bp.blogspot.com/-9av8Fqm3X4Q/VuaYTuv-KtI/AAAAAAAADrA/5F0Xnq8z5K4e3WGN7SnBrUMLC7YuIdh4A/s1600/02.png) # npm指令 - 安裝資料夾 **node_modules** ``` shell # 安裝套件 $ npm install -g  $ npm install  # 安裝並寫入設定檔 $ npm install  --save $ npm install ** --save-dev # 移除套件 $ npm uninstall -g  $ npm uninstall  # 搜尋套件 $ npm search  # 列出已安裝的套件 $ npm list -g $ npm list # 更新套件 $ npm update -g $ npm update # 安裝package.</description>
    </item>
    
    <item>
      <title>AutoMapper 4.2 API Update</title>
      <link>http://example.org/posts/2016/02/automapper-4-2-api-update/</link>
      <pubDate>Sun, 28 Feb 2016 18:01:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/02/automapper-4-2-api-update/</guid>
      <description>AutoMapper 4.2版本之後，將Mapper靜態API類別標注為過時，改用MapperConfiguration來設定對應，記錄一下新的使用方式 首先宣告一個MapperConfiguration物件，並且設定類別對應關系  var config = new MapperConfiguration(cfg =&amp;amp;gt; cfg.CreateMap&amp;amp;lt;Order, OrderDto&amp;amp;gt;());`&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;使用的時後，透過CreateMapper建立一個IMapper物件 再透過IMapper物件來轉換類別&amp;lt;/div&amp;gt;&amp;lt;pre style=&amp;quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&amp;quot;&amp;gt;`var mapper = config.CreateMapper(); OrderDto dto = mapper.Map&amp;amp;lt;OrderDto&amp;amp;gt;(order); </description>
    </item>
    
    <item>
      <title>TopShelf</title>
      <link>http://example.org/posts/2016/01/topshelf/</link>
      <pubDate>Wed, 27 Jan 2016 11:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2016/01/topshelf/</guid>
      <description>開發Windows Service的時後，為了開發方便，之前都用一些小技巧切換在本機的Console模式和伺服器的Service模式，但在日後維護的時後或是偵錯的時後，總是不太方便，最近用了一個好用的套件叫TopShelf，是一個用來開發Windows Service的框架，實在太好用了，所以記錄一下筆記
首先新增一個Console專案
[![](http://2.bp.blogspot.com/-b-j_Dv8q9Y0/Vqg97bx32-I/AAAAAAAADkE/QVrxbWArdXg/s1600/01.%25E6%2596%25B0%25E5%25A2%259E%25E5%25B0%2588%25E6%25A1%2588.png)](http://2.bp.blogspot.com/-b-j_Dv8q9Y0/Vqg97bx32-I/AAAAAAAADkE/QVrxbWArdXg/s1600/01.%25E6%2596%25B0%25E5%25A2%259E%25E5%25B0%2588%25E6%25A1%2588.png) 透過NuGet安裝TopShelf套件 [![](http://4.bp.blogspot.com/-0rrhnPEnOBU/Vqg97v3I74I/AAAAAAAADkQ/3I4zfXvgEYg/s1600/02.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png)](http://4.bp.blogspot.com/-0rrhnPEnOBU/Vqg97v3I74I/AAAAAAAADkQ/3I4zfXvgEYg/s1600/02.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png) 簡單地寫一個類別，包含Start和Stop兩個函式 using System; namespace ConsoleApplication1 { class MyService { public void Start() { Console.WriteLine(&amp;ldquo;MyService Start&amp;rdquo;); }
 public void Stop() { Console.WriteLine(&amp;quot;My Service Stop&amp;quot;); } }  }
 回到應用程式進入點開始配置服務
using Topshelf; namespace ConsoleApplication1 { class Program { static void Main(string[] args) { Topshelf.HostFactory.Run(x=&amp;gt; { x.Service&amp;lt;MyService&amp;gt;(s =&amp;gt; { s.ConstructUsing(() =&amp;gt; new MyService()); s.WhenStarted(svc =&amp;gt; svc.Start()); s.WhenStopped(svc =&amp;gt; svc.Stop()); });
 x.RunAsLocalSystem(); x.StartAutomatically(); x.SetServiceName(&amp;quot;MyService&amp;quot;); x.</description>
    </item>
    
    <item>
      <title>Bootstrap.Switch</title>
      <link>http://example.org/posts/2015/11/bootstrap-switch/</link>
      <pubDate>Mon, 30 Nov 2015 21:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/11/bootstrap-switch/</guid>
      <description>首先安裝Bootstrap.Switch這個套件
[![](http://4.bp.blogspot.com/-faOE9uyJuH4/VlxQFVdS3AI/AAAAAAAADZg/edkXVZQdkYI/s1600/01.%25E5%25A5%2597%25E4%25BB%25B6.png)](http://4.bp.blogspot.com/-faOE9uyJuH4/VlxQFVdS3AI/AAAAAAAADZg/edkXVZQdkYI/s1600/01.%25E5%25A5%2597%25E4%25BB%25B6.png) 引用css和javascript [![](http://3.bp.blogspot.com/-O730AbiP9DQ/VlxQFTVg2SI/AAAAAAAADZo/J0uQGJcf1GE/s1600/02.%25E5%25BC%2595%25E7%2594%25A8.png)](http://3.bp.blogspot.com/-O730AbiP9DQ/VlxQFTVg2SI/AAAAAAAADZo/J0uQGJcf1GE/s1600/02.%25E5%25BC%2595%25E7%2594%25A8.png) 透過JQuery呼叫bootstrapSwitch這個方法 [![](http://2.bp.blogspot.com/-d4QNIxCS2dc/VlxQFtjzgII/AAAAAAAADZk/IRsfWZMh-Z8/s1600/03.code.png)](http://2.bp.blogspot.com/-d4QNIxCS2dc/VlxQFtjzgII/AAAAAAAADZk/IRsfWZMh-Z8/s1600/03.code.png) 原本的checkbox就會變成開關的樣式了 [![](http://2.bp.blogspot.com/-E4lEQttojp4/VlxQF823nOI/AAAAAAAADZs/W4zb19LYzXk/s1600/04.%25E7%25B5%2590%25E6%259E%259C.png)](http://2.bp.blogspot.com/-E4lEQttojp4/VlxQF823nOI/AAAAAAAADZs/W4zb19LYzXk/s1600/04.%25E7%25B5%2590%25E6%259E%259C.png) 參考資料 [Bootstrap Switch 官網](http://www.</description>
    </item>
    
    <item>
      <title>IIS URL Rewrite Module 發生 HTTP 500.52 錯誤</title>
      <link>http://example.org/posts/2015/10/iis-url-rewrite-module-%E7%99%BC%E7%94%9F-http-500-52-%E9%8C%AF%E8%AA%A4/</link>
      <pubDate>Fri, 09 Oct 2015 11:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/10/iis-url-rewrite-module-%E7%99%BC%E7%94%9F-http-500-52-%E9%8C%AF%E8%AA%A4/</guid>
      <description>最近使用的IIS URL Rewrite模組發生了500.52錯誤
[![](http://2.bp.blogspot.com/-zQUJWNA4ux8/Vhc3eXjlngI/AAAAAAAACkc/VpadeJYWBQQ/s1600/0.500.52.png)](http://2.bp.blogspot.com/-zQUJWNA4ux8/Vhc3eXjlngI/AAAAAAAACkc/VpadeJYWBQQ/s1600/0.500.52.png) 看起來像是NTFS權限的問題，把IIS_IUSR帳號加入後，錯誤訊息又變了
[![](http://3.bp.blogspot.com/-ryedzB87MxI/Vhc3qXqAXSI/AAAAAAAACkk/3x1fBsCo3I4/s1600/0.500.52-1.png)](http://3.bp.blogspot.com/-ryedzB87MxI/Vhc3qXqAXSI/AAAAAAAACkk/3x1fBsCo3I4/s1600/0.500.52-1.png) 在URL Rewrite的時後，把HTTP_ACCEPT_ENCODING設定空就行了 [![](http://3.bp.blogspot.com/-4Vr_72byhB0/Vhc3t2AtRdI/AAAAAAAACks/aPnouMLaX4M/s1600/remove.png)](http://3.bp.blogspot.com/-4Vr_72byhB0/Vhc3t2AtRdI/AAAAAAAACks/aPnouMLaX4M/s1600/remove.png) 另一個方式是把IIS的動態壓縮關閉 關閉動態壓縮</description>
    </item>
    
    <item>
      <title>Server2012 安裝 IIS8 碰到 HTTP 500.19 錯誤訊息</title>
      <link>http://example.org/posts/2015/10/server2012-%E5%AE%89%E8%A3%9D-iis8-%E7%A2%B0%E5%88%B0-http-500-19-%E9%8C%AF%E8%AA%A4%E8%A8%8A%E6%81%AF/</link>
      <pubDate>Fri, 09 Oct 2015 11:18:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/10/server2012-%E5%AE%89%E8%A3%9D-iis8-%E7%A2%B0%E5%88%B0-http-500-19-%E9%8C%AF%E8%AA%A4%E8%A8%8A%E6%81%AF/</guid>
      <description>開始使用Server2012R2上面的IIS 8，結果就碰到一個問題500.19的問題
[![](http://4.bp.blogspot.com/-FGSmEdeARrs/VhczqkuRogI/AAAAAAAACkQ/FGrIdc6JyDs/s1600/00.500.19.png)](http://4.bp.blogspot.com/-FGSmEdeARrs/VhczqkuRogI/AAAAAAAACkQ/FGrIdc6JyDs/s1600/00.500.19.png) 以為是權限問題，搞了半天，錯誤訊息又變成設定檔錯誤 [![](http://1.bp.blogspot.com/-r7oRQE18Dm4/VhczIgXuuUI/AAAAAAAACkI/_oZ6irWnsBE/s1600/00.error.png)](http://1.bp.blogspot.com/-r7oRQE18Dm4/VhczIgXuuUI/AAAAAAAACkI/_oZ6irWnsBE/s1600/00.error.png) 爬文發現是ASP.NET的模組沒裝好，最簡單的方法就是aspnet_regiis -i重新安裝就好 但在Server2012 R2上面已經不再支援這個命令了&amp;hellip;
[![](http://2.bp.blogspot.com/-ff_xTkXmelA/VhcxtKP1XkI/AAAAAAAACiw/t8oNHmYaIZ0/s1600/00.regiis.png)](http://2.bp.blogspot.com/-ff_xTkXmelA/VhcxtKP1XkI/AAAAAAAACiw/t8oNHmYaIZ0/s1600/00.regiis.png) 只好打開新增角色和精靈來研究一下IIS的功能模組 [![](http://2.bp.blogspot.com/-1Dg6QD8BVRY/VhcxtJYIalI/AAAAAAAACis/qWtmPwkXB40/s1600/01.%25E6%2596%25B0%25E5%25A2%259E%25E8%25A7%2592%25E8%2589%25B2.png)](http://2.bp.blogspot.com/-1Dg6QD8BVRY/VhcxtJYIalI/AAAAAAAACis/qWtmPwkXB40/s1600/01.%25E6%2596%25B0%25E5%25A2%259E%25E8%25A7%2592%25E8%2589%25B2.png) 選擇角色型或功能型安裝 [![](http://2.bp.blogspot.com/-Zqp7wZ6mYbY/VhcxtMAW1iI/AAAAAAAACio/Xo1WFEaPVVE/s1600/02.%25E8%25A7%2592%25E8%2589%25B2%25E5%259E%258B%25E5%25AE%2589%25E8%25A3%259D.png)](http://2.bp.blogspot.com/-Zqp7wZ6mYbY/VhcxtMAW1iI/AAAAAAAACio/Xo1WFEaPVVE/s1600/02.%25E8%25A7%2592%25E8%2589%25B2%25E5%259E%258B%25E5%25AE%2589%25E8%25A3%259D.png) 選擇伺服器 [![](http://1.bp.blogspot.com/-vkF7mkt1Ntk/VhcxtlxKmZI/AAAAAAAACi0/yESQb9cuZd0/s1600/03.%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8%25E9%25A0%2585%25E7%259B%25AE.png)](http://1.bp.blogspot.com/-vkF7mkt1Ntk/VhcxtlxKmZI/AAAAAAAACi0/yESQb9cuZd0/s1600/03.%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8%25E9%25A0%2585%25E7%259B%25AE.png) 勾選網頁伺服器(IIS)和應用程式伺服器 [![](http://4.bp.blogspot.com/-wldIGTpf1To/Vhcxt2WIH2I/AAAAAAAACjQ/xYoqS5S8cyM/s1600/04.%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8%25E8%25A7%2592%25E8%2589%25B2.png)](http://4.bp.blogspot.com/-wldIGTpf1To/Vhcxt2WIH2I/AAAAAAAACjQ/xYoqS5S8cyM/s1600/04.%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8%25E8%25A7%2592%25E8%2589%25B2.png) 勾選ASP.NET45功能模組 [![](http://4.bp.blogspot.com/-8WrAFc3_vUo/Vhcxt7DlS5I/AAAAAAAACjA/wlc6DwnsYYI/s1600/05.asp45.png)](http://4.bp.blogspot.com/-8WrAFc3_vUo/Vhcxt7DlS5I/AAAAAAAACjA/wlc6DwnsYYI/s1600/05.asp45.png) 網頁伺服器(IIS)的角色服務中，勾選ASP.NET4.5 [![](http://2.bp.blogspot.com/-j_BGR9TPWQs/VhcyoH_ckII/AAAAAAAACj4/M2jDUV5NMXI/s1600/06.asp45.png)](http://2.bp.blogspot.com/-j_BGR9TPWQs/VhcyoH_ckII/AAAAAAAACj4/M2jDUV5NMXI/s1600/06.asp45.png) 應用程式伺服器的角色服務中，勾選網頁伺服器(IIS)支援 [![](http://3.bp.blogspot.com/-vdp2raIVtXg/VhcysyVo-iI/AAAAAAAACkA/Ms8uKV9j0zc/s1600/07.iis.png)](http://3.bp.blogspot.com/-vdp2raIVtXg/VhcysyVo-iI/AAAAAAAACkA/Ms8uKV9j0zc/s1600/07.iis.png) 準備安裝 [![](http://2.bp.blogspot.com/-i4v0KRMe7FM/VhcxutX6UWI/AAAAAAAACjY/_-3X6U_LuZg/s1600/08.install.png)](http://2.bp.blogspot.com/-i4v0KRMe7FM/VhcxutX6UWI/AAAAAAAACjY/_-3X6U_LuZg/s1600/08.install.png) 打完收工</description>
    </item>
    
    <item>
      <title>Jenkins 安裝 MSTest</title>
      <link>http://example.org/posts/2015/09/jenkins-%E5%AE%89%E8%A3%9D-mstest/</link>
      <pubDate>Wed, 16 Sep 2015 16:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/09/jenkins-%E5%AE%89%E8%A3%9D-mstest/</guid>
      <description>下載Visual Studio Agents 2015
[![](http://2.bp.blogspot.com/-_Umr--V4V3U/VfknYUXoEbI/AAAAAAAAChc/jg6ZNx4qHno/s1600/01.download.png)](http://2.bp.blogspot.com/-_Umr--V4V3U/VfknYUXoEbI/AAAAAAAAChc/jg6ZNx4qHno/s1600/01.download.png) 安裝Visual Studio Agents 2015 [![](http://3.bp.blogspot.com/-o1dba2X_Itw/VfknYS7d9DI/AAAAAAAAChI/iPNFXpq_m6Y/s1600/02.install.png)](http://3.bp.blogspot.com/-o1dba2X_Itw/VfknYS7d9DI/AAAAAAAAChI/iPNFXpq_m6Y/s1600/02.install.png) 安裝完後會有MSTest.exe相關的工具 [![](http://3.bp.blogspot.com/-Wrcu2ooOiVk/VfknYUYTc8I/AAAAAAAACiI/DD6sDL5RquI/s1600/03.MSTest%25E4%25BD%258D%25E7%25BD%25AE.png)](http://3.bp.blogspot.com/-Wrcu2ooOiVk/VfknYUYTc8I/AAAAAAAACiI/DD6sDL5RquI/s1600/03.MSTest%25E4%25BD%258D%25E7%25BD%25AE.png) 安裝MSTest Plugin [![](http://4.bp.blogspot.com/-cS7FjLfzdkk/VfknYxFXtCI/AAAAAAAAChY/cDMNnB4soSs/s1600/04.%25E5%25AE%2589%25E8%25A3%259DPlugin.png)](http://4.bp.blogspot.com/-cS7FjLfzdkk/VfknYxFXtCI/AAAAAAAAChY/cDMNnB4soSs/s1600/04.%25E5%25AE%2589%25E8%25A3%259DPlugin.png) 安裝完成後重新啟動 [![](http://1.bp.blogspot.com/-hkTk5p1E13w/VfknZC7en_I/AAAAAAAACiA/IexA64ONuTo/s1600/05.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png)](http://1.bp.blogspot.com/-hkTk5p1E13w/VfknZC7en_I/AAAAAAAACiA/IexA64ONuTo/s1600/05.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png) 管理Jenkins =&amp;gt; 設定系統 [![](http://2.bp.blogspot.com/-zDvrRK1d7qw/VfknZI3z6NI/AAAAAAAAChs/m8Dw-X8kIdA/s1600/06.%25E8%25A8%25AD%25E5%25AE%259A%25E7%25B3%25BB%25E7%25B5%25B1.png)](http://2.bp.blogspot.com/-zDvrRK1d7qw/VfknZI3z6NI/AAAAAAAAChs/m8Dw-X8kIdA/s1600/06.%25E8%25A8%25AD%25E5%25AE%259A%25E7%25B3%25BB%25E7%25B5%25B1.png) 設定MSTest路徑 [![](http://2.bp.blogspot.com/-Jm59N2yNC_E/VfknZZ45kxI/AAAAAAAACho/P-Jzgcxe2os/s1600/07.%25E8%25A8%25AD%25E5%25AE%259Amstest%25E8%25B7%25AF%25E5%25BE%2591.png)](http://2.bp.blogspot.com/-Jm59N2yNC_E/VfknZZ45kxI/AAAAAAAACho/P-Jzgcxe2os/s1600/07.%25E8%25A8%25AD%25E5%25AE%259Amstest%25E8%25B7%25AF%25E5%25BE%2591.png) 新增一個測試專案 [![](http://2.bp.blogspot.com/-XQhDZ_W8oTc/VfkoEokeDMI/AAAAAAAACiQ/wFpl_Kn8b4M/s1600/08.%25E6%2596%25B0%25E5%25A2%259E%25E6%25B8%25AC%25E8%25A9%25A6%25E5%25B0%2588%25E6%25A1%2588.png)](http://2.bp.blogspot.com/-XQhDZ_W8oTc/VfkoEokeDMI/AAAAAAAACiQ/wFpl_Kn8b4M/s1600/08.%25E6%2596%25B0%25E5%25A2%259E%25E6%25B8%25AC%25E8%25A9%25A6%25E5%25B0%2588%25E6%25A1%2588.png) 新增建置步驟 [![](http://4.bp.blogspot.com/-Fr-q7s6B_bQ/VfknZ5FPBfI/AAAAAAAACh0/PLWo8-AfeYg/s1600/10.%25E5%258A%25A0%25E5%2585%25A5%25E5%25BB%25BA%25E7%25BD%25AE%25E6%25AD%25A5%25E9%25A9%259F.png)](http://4.bp.blogspot.com/-Fr-q7s6B_bQ/VfknZ5FPBfI/AAAAAAAACh0/PLWo8-AfeYg/s1600/10.%25E5%258A%25A0%25E5%2585%25A5%25E5%25BB%25BA%25E7%25BD%25AE%25E6%25AD%25A5%25E9%25A9%259F.png) 新增建置後動作 [![](http://4.bp.blogspot.com/-HReseVBcVUQ/VfknZ3YVOVI/AAAAAAAACh4/uRvenG4XGkE/s1600/11.%25E5%258A%25A0%25E5%2585%25A5%25E5%25BB%25BA%25E7%25BD%25AE%25E5%25BE%258C%25E5%258B%2595%25E4%25BD%259C.png)](http://4.bp.blogspot.com/-HReseVBcVUQ/VfknZ3YVOVI/AAAAAAAACh4/uRvenG4XGkE/s1600/11.%25E5%258A%25A0%25E5%2585%25A5%25E5%25BB%25BA%25E7%25BD%25AE%25E5%25BE%258C%25E5%258B%2595%25E4%25BD%259C.png) 建置結果 [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝 Change Assembly Version Plugin</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D-change-assembly-version-plugin/</link>
      <pubDate>Mon, 31 Aug 2015 16:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D-change-assembly-version-plugin/</guid>
      <description>安裝 Change Assembly Version
[![](http://1.bp.blogspot.com/-hqIvlueWJ1Y/VeQKi_q2QnI/AAAAAAAACgA/e1Cdgy32j3Q/s1600/01.%25E5%25AE%2589%25E8%25A3%259D.png)](http://1.bp.blogspot.com/-hqIvlueWJ1Y/VeQKi_q2QnI/AAAAAAAACgA/e1Cdgy32j3Q/s1600/01.%25E5%25AE%2589%25E8%25A3%259D.png) 建置步驟中增加Change Assembly Version步驟 [![](http://2.bp.blogspot.com/-HNxAE3DRgIk/VeQKiwhX9fI/AAAAAAAACgI/ysJi1NG3bog/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E5%25BB%25BA%25E7%25BD%25AE%25E6%25AD%25A5%25E9%25A9%259F.png)](http://2.bp.blogspot.com/-HNxAE3DRgIk/VeQKiwhX9fI/AAAAAAAACgI/ysJi1NG3bog/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E5%25BB%25BA%25E7%25BD%25AE%25E6%25AD%25A5%25E9%25A9%259F.png) 套用版本變數即可 [![](http://2.bp.blogspot.com/-QHHofaV7bqo/VeQKi9skN9I/AAAAAAAACgE/ZnLPCDA7B5c/s1600/03.%25E8%25A8%25AD%25E5%25AE%259A.png)](http://2.bp.blogspot.com/-QHHofaV7bqo/VeQKi9skN9I/AAAAAAAACgE/ZnLPCDA7B5c/s1600/03.%25E8%25A8%25AD%25E5%25AE%259A.png) 執行建置 [![](http://3.bp.blogspot.com/-zcpuD2erpoY/VeQKjZeY18I/AAAAAAAACgU/Nd0N5TI7i9M/s1600/04.%25E5%25BB%25BA%25E7%25BD%25AE.png)](http://3.bp.blogspot.com/-zcpuD2erpoY/VeQKjZeY18I/AAAAAAAACgU/Nd0N5TI7i9M/s1600/04.%25E5%25BB%25BA%25E7%25BD%25AE.png) AssemblyInfo裡面的版本就會完成取代 [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝 Version Number Plug-In</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D-version-number-plug-in/</link>
      <pubDate>Mon, 31 Aug 2015 15:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D-version-number-plug-in/</guid>
      <description>安裝Version Number Plug-In
[![](http://3.bp.blogspot.com/-Xn0N1_xaf80/VeQGyWbBTMI/AAAAAAAACfk/uR9AJYB8H1U/s1600/01.%25E5%25AE%2589%25E8%25A3%259D.png)](http://3.bp.blogspot.com/-Xn0N1_xaf80/VeQGyWbBTMI/AAAAAAAACfk/uR9AJYB8H1U/s1600/01.%25E5%25AE%2589%25E8%25A3%259D.png) 專案組態中增加版號設定 [![](http://4.bp.blogspot.com/-mooSquyV2HM/VeQGyZOpluI/AAAAAAAACfo/9N_eI5C7ivM/s1600/02.%25E8%25A8%25AD%25E5%25AE%259A.png)](http://4.bp.blogspot.com/-mooSquyV2HM/VeQGyZOpluI/AAAAAAAACfo/9N_eI5C7ivM/s1600/02.%25E8%25A8%25AD%25E5%25AE%259A.png) 執行結果 [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝Next Build Number Plugin</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dnext-build-number-plugin/</link>
      <pubDate>Mon, 31 Aug 2015 15:28:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dnext-build-number-plugin/</guid>
      <description>安裝Next Build Number Plugin
[![](http://2.bp.blogspot.com/-n6Ie4b1ZqxM/VeQB4BD41sI/AAAAAAAACfI/XSX7jrqYhgc/s1600/01.next%2Bbuild.png)](http://2.bp.blogspot.com/-n6Ie4b1ZqxM/VeQB4BD41sI/AAAAAAAACfI/XSX7jrqYhgc/s1600/01.next%2Bbuild.png) 設定下一次建置號碼 [![](http://1.bp.blogspot.com/-4LIPhqdSxxY/VeQB4LHSJyI/AAAAAAAACfE/hEmww9zZOBA/s1600/02.set.png)](http://1.bp.blogspot.com/-4LIPhqdSxxY/VeQB4LHSJyI/AAAAAAAACfE/hEmww9zZOBA/s1600/02.set.png) 按下馬上建置會發現建置號碼改成新的設定值 [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝Template Project Plugin</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dtemplate-project-plugin/</link>
      <pubDate>Mon, 31 Aug 2015 15:19:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dtemplate-project-plugin/</guid>
      <description>安裝Template Project Plugin外掛
[![](http://3.bp.blogspot.com/-S4pGkauZdEU/VeP_rf74mxI/AAAAAAAACeQ/VRoVVlGeFbI/s1600/01.TemplateProjectPlugin.png)](http://3.bp.blogspot.com/-S4pGkauZdEU/VeP_rf74mxI/AAAAAAAACeQ/VRoVVlGeFbI/s1600/01.TemplateProjectPlugin.png) 設定一個建置範本WebTemplate [![](http://4.bp.blogspot.com/-bTKxG-UpN_c/VeP_rfsOJ6I/AAAAAAAACeY/2SubJt43_6g/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E4%25BD%259C%25E6%25A5%25AD.png)](http://4.bp.blogspot.com/-bTKxG-UpN_c/VeP_rfsOJ6I/AAAAAAAACeY/2SubJt43_6g/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E4%25BD%259C%25E6%25A5%25AD.png) 這邊的設定被套用時只有建置步驟會生效 [![](http://4.bp.blogspot.com/-kyrWvVl0-iI/VeP_rVViW0I/AAAAAAAACe8/H46fdV-9zzU/s1600/03.Build.png)](http://4.bp.blogspot.com/-kyrWvVl0-iI/VeP_rVViW0I/AAAAAAAACe8/H46fdV-9zzU/s1600/03.Build.png) 新增一個專案 [![](http://2.bp.blogspot.com/-tNrm-c7Dn0o/VeP_sJHLG8I/AAAAAAAACeo/tvjIbr5_ur8/s1600/04.QQ123.png)](http://2.bp.blogspot.com/-tNrm-c7Dn0o/VeP_sJHLG8I/AAAAAAAACeo/tvjIbr5_ur8/s1600/04.QQ123.png) 建置步驟選擇Use builders from another project [![](http://1.bp.blogspot.com/-fANuqXp__-o/VeP_sMECO7I/AAAAAAAACes/Ktv3ZsDEtgM/s1600/05.use%2Btemplate.png)](http://1.bp.blogspot.com/-fANuqXp__-o/VeP_sMECO7I/AAAAAAAACes/Ktv3ZsDEtgM/s1600/05.use%2Btemplate.png) 套用WebTemplate建置範本 [![](http://1.bp.blogspot.com/-uqRg0OCO7FM/VeP_sQFCDWI/AAAAAAAACe0/vX44eTidrHM/s1600/06.webtemplate.png)](http://1.bp.blogspot.com/-uqRg0OCO7FM/VeP_sQFCDWI/AAAAAAAACe0/vX44eTidrHM/s1600/06.webtemplate.png) 建置成功 [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝MSBuild Plugin</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dmsbuild-plugin/</link>
      <pubDate>Mon, 31 Aug 2015 11:59:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9Dmsbuild-plugin/</guid>
      <description>管理Jenkins
[![](http://2.bp.blogspot.com/-PxmL6C-eHeQ/VePQw4c7WyI/AAAAAAAACd4/Itbo-MtJNj4/s1600/01.%25E7%25AE%25A1%25E7%2590%2586Jenkins.png)](http://2.bp.blogspot.com/-PxmL6C-eHeQ/VePQw4c7WyI/AAAAAAAACd4/Itbo-MtJNj4/s1600/01.%25E7%25AE%25A1%25E7%2590%2586Jenkins.png) 管理外掛程式 [![](http://3.bp.blogspot.com/-uIhO8-4TvUk/VePQw8ybiAI/AAAAAAAACdc/QVwn4HGCeYw/s1600/02.%25E7%25AE%25A1%25E7%2590%2586%25E5%25A4%2596%25E6%258E%259B.png)](http://3.bp.blogspot.com/-uIhO8-4TvUk/VePQw8ybiAI/AAAAAAAACdc/QVwn4HGCeYw/s1600/02.%25E7%25AE%25A1%25E7%2590%2586%25E5%25A4%2596%25E6%258E%259B.png) 找到MSBuild Plugin後直接安裝 [![](http://1.bp.blogspot.com/-H2FUF2a1hKs/VePQw9coHhI/AAAAAAAACdw/T-FF3aqySGA/s1600/03.%25E9%2581%25B8%25E6%2593%2587msbuild.png)](http://1.bp.blogspot.com/-H2FUF2a1hKs/VePQw9coHhI/AAAAAAAACdw/T-FF3aqySGA/s1600/03.%25E9%2581%25B8%25E6%2593%2587msbuild.png) 安裝成功後勾選重新啟動 [![](http://2.bp.blogspot.com/-ua0dgqyU9_Y/VePQxfOIXWI/AAAAAAAACdo/qf5EPjg_4Z4/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E6%2588%2590%25E5%258A%259F.png)](http://2.bp.blogspot.com/-ua0dgqyU9_Y/VePQxfOIXWI/AAAAAAAACdo/qf5EPjg_4Z4/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E6%2588%2590%25E5%258A%259F.png) 重新啟動中 [![](http://4.bp.blogspot.com/-QvaaKBop3xk/VePQxkWwHrI/AAAAAAAACds/YRHw-ghFy04/s1600/05.%25E9%2587%258D%25E6%2596%25B0%25E5%2595%259F%25E5%258B%2595.png)](http://4.bp.blogspot.com/-QvaaKBop3xk/VePQxkWwHrI/AAAAAAAACds/YRHw-ghFy04/s1600/05.%25E9%2587%258D%25E6%2596%25B0%25E5%2595%259F%25E5%258B%2595.png) 設定系統 [![](http://1.bp.blogspot.com/-_zKRLWEkES8/VePQyN0oqPI/AAAAAAAACd0/eL2UV0fwJzk/s1600/06.%25E8%25A8%25AD%25E5%25AE%259A%25E7%25B3%25BB%25E7%25B5%25B1.png)](http://1.bp.blogspot.com/-_zKRLWEkES8/VePQyN0oqPI/AAAAAAAACd0/eL2UV0fwJzk/s1600/06.%25E8%25A8%25AD%25E5%25AE%259A%25E7%25B3%25BB%25E7%25B5%25B1.png) 新增MSBuild的版本和路徑 VS2013 C:\Program Files (x86)\MSBuild\12.0\bin\amd64\msbuild.exe VS2015 C:\Program Files (x86)\MSBuild\14.0\bin\amd64\msbuild.exe</description>
    </item>
    
    <item>
      <title>Jenkins 建立VS2013和Framework4.5編譯環境</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%BB%BA%E7%AB%8Bvs2013%E5%92%8Cframework4-5%E7%B7%A8%E8%AD%AF%E7%92%B0%E5%A2%83/</link>
      <pubDate>Mon, 31 Aug 2015 11:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%BB%BA%E7%AB%8Bvs2013%E5%92%8Cframework4-5%E7%B7%A8%E8%AD%AF%E7%92%B0%E5%A2%83/</guid>
      <description>下載Microsoft Build Tools 2013 http://www.microsoft.com/zh-tw/download/details.aspx?id=40760
[![](http://2.bp.blogspot.com/-EiIMQ5xvTqQ/VePOHpjXHII/AAAAAAAACc0/838zrh8ObhI/s1600/00.msbuild2013.png)](http://2.bp.blogspot.com/-EiIMQ5xvTqQ/VePOHpjXHII/AAAAAAAACc0/838zrh8ObhI/s1600/00.msbuild2013.png) 下載適用於 Windows 8 的 Windows 軟體開發套件 (SDK) https://msdn.microsoft.com/zh-tw/windows/desktop/hh852363.aspx
[![](http://4.bp.blogspot.com/-X2obIDZ7r4k/VePMiQjjhlI/AAAAAAAACcM/jpYjPkzlOLs/s1600/05.sdk.png)](http://4.bp.blogspot.com/-X2obIDZ7r4k/VePMiQjjhlI/AAAAAAAACcM/jpYjPkzlOLs/s1600/05.sdk.png) 選擇安裝.NET Framework 4.5 Software Development Kit [![](http://2.bp.blogspot.com/-LKRu8hbHJeU/VePMjCG-7-I/AAAAAAAACcg/5RWZIfCxgvk/s1600/09.framework45.png)](http://2.bp.blogspot.com/-LKRu8hbHJeU/VePMjCG-7-I/AAAAAAAACcg/5RWZIfCxgvk/s1600/09.framework45.png) 複製資料夾 C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio [!</description>
    </item>
    
    <item>
      <title>Jenkins 安裝</title>
      <link>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Tue, 25 Aug 2015 18:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/jenkins-%E5%AE%89%E8%A3%9D/</guid>
      <description>首先到官網下載檔案
[![](http://1.bp.blogspot.com/-NontDaM9nQE/Vdw_Of-gjSI/AAAAAAAACaA/h3j3yGEkPwI/s1600/01.%25E5%25AE%2598%25E7%25B6%25B2%25E4%25B8%258B%25E8%25BC%2589.png)](http://1.bp.blogspot.com/-NontDaM9nQE/Vdw_Of-gjSI/AAAAAAAACaA/h3j3yGEkPwI/s1600/01.%25E5%25AE%2598%25E7%25B6%25B2%25E4%25B8%258B%25E8%25BC%2589.png) 解壓縮後得到安裝檔 [![](http://2.bp.blogspot.com/--Q9ttYS9CVE/Vdw_OUuDv-I/AAAAAAAACaI/ufs39rQxRVk/s1600/02.%25E8%25A7%25A3%25E5%25A3%2593%25E7%25B8%25AE.png)](http://2.bp.blogspot.com/--Q9ttYS9CVE/Vdw_OUuDv-I/AAAAAAAACaI/ufs39rQxRVk/s1600/02.%25E8%25A7%25A3%25E5%25A3%2593%25E7%25B8%25AE.png) 安裝歡迎畫面 [![](http://1.bp.blogspot.com/-hEX0_tJR8ZQ/Vdw_OSHHxwI/AAAAAAAACbQ/JkU22JFLO8M/s1600/03.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png)](http://1.bp.blogspot.com/-hEX0_tJR8ZQ/Vdw_OSHHxwI/AAAAAAAACbQ/JkU22JFLO8M/s1600/03.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png) 選擇安裝的資料夾 [![](http://3.bp.blogspot.com/-j2KuGxIHmxM/Vdw_OyExMNI/AAAAAAAACbU/V4j4n-P0ols/s1600/04.%25E9%2581%25B8%25E6%2593%2587%25E5%25AE%2589%25E8%25A3%259D%25E8%25B7%25AF%25E5%25BE%2591.png)](http://3.bp.blogspot.com/-j2KuGxIHmxM/Vdw_OyExMNI/AAAAAAAACbU/V4j4n-P0ols/s1600/04.%25E9%2581%25B8%25E6%2593%2587%25E5%25AE%2589%25E8%25A3%259D%25E8%25B7%25AF%25E5%25BE%2591.png) 安裝需要管理員權限 [![](http://3.bp.blogspot.com/-L7s0QGfNKsk/Vdw_PG6DBJI/AAAAAAAACaU/m_sFGeGNNDI/s1600/05.%25E6%25BA%2596%25E5%2582%2599%25E5%25AE%2589%25E8%25A3%259D.png)](http://3.bp.blogspot.com/-L7s0QGfNKsk/Vdw_PG6DBJI/AAAAAAAACaU/m_sFGeGNNDI/s1600/05.%25E6%25BA%2596%25E5%2582%2599%25E5%25AE%2589%25E8%25A3%259D.png) 安裝中 [![](http://3.bp.blogspot.com/-typutUEBj_c/Vdw_PfIm1uI/AAAAAAAACaY/ILnu7d2SfGg/s1600/06.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png)](http://3.bp.blogspot.com/-typutUEBj_c/Vdw_PfIm1uI/AAAAAAAACaY/ILnu7d2SfGg/s1600/06.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png) 安裝完成 [![](http://3.bp.blogspot.com/--dVs1w1o7yg/Vdw_PvkHMXI/AAAAAAAACak/HXZ7ml1M2r0/s1600/07.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png)](http://3.bp.blogspot.com/--dVs1w1o7yg/Vdw_PvkHMXI/AAAAAAAACak/HXZ7ml1M2r0/s1600/07.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png) 預設是PORT 8080 [![](http://1.bp.blogspot.com/-tlBTFzskZHg/Vdw_QAI7yPI/AAAAAAAACa0/1JYPbm8Vra4/s1600/08.%25E9%25A0%2590%25E8%25A8%25AD8080.png)](http://1.bp.blogspot.com/-tlBTFzskZHg/Vdw_QAI7yPI/AAAAAAAACa0/1JYPbm8Vra4/s1600/08.%25E9%25A0%2590%25E8%25A8%25AD8080.png) 要改埠號的話要在安裝資料夾下面找到jenkins.xml [![](http://3.bp.blogspot.com/-zYnhTxUODLQ/Vdw_QdBFpfI/AAAAAAAACaw/kUkmUQSWo1k/s1600/09.%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png)](http://3.bp.blogspot.com/-zYnhTxUODLQ/Vdw_QdBFpfI/AAAAAAAACaw/kUkmUQSWo1k/s1600/09.%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png) 把裡面的執行參數-httpPort=8080改掉就行了 [![](http://3.bp.blogspot.com/-wF8-p26IDHQ/Vdw_Q6ItqzI/AAAAAAAACbA/iKhSdaBwP5g/s1600/10.%25E6%2594%25B9port.png)](http://3.bp.blogspot.com/-wF8-p26IDHQ/Vdw_Q6ItqzI/AAAAAAAACbA/iKhSdaBwP5g/s1600/10.%25E6%2594%25B9port.png) 再重新啟動服務 [![](http://2.bp.blogspot.com/-JqdZYybFNAM/Vdw_RCrROQI/AAAAAAAACa8/6q9X6EoWnUU/s1600/11.%25E9%2587%258D%25E5%2595%259F%25E6%259C%258D%25E5%258B%2599.png)](http://2.bp.blogspot.com/-JqdZYybFNAM/Vdw_RCrROQI/AAAAAAAACa8/6q9X6EoWnUU/s1600/11.%25E9%2587%258D%25E5%2595%259F%25E6%259C%258D%25E5%258B%2599.png) 就會換成新埠號了 [!</description>
    </item>
    
    <item>
      <title>架設NuPeek Symbol &amp; NuGet Server</title>
      <link>http://example.org/posts/2015/08/%E6%9E%B6%E8%A8%ADnupeek-symbol-nuget-server/</link>
      <pubDate>Fri, 07 Aug 2015 14:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/08/%E6%9E%B6%E8%A8%ADnupeek-symbol-nuget-server/</guid>
      <description>首先到Bitbucket下載NuPeek的原始碼回來 https://bitbucket.org/thinkbeforecoding/nupeek
[![](http://2.bp.blogspot.com/-oQRiidn7woQ/VcRUEOkTHzI/AAAAAAAACYs/6-EfBRJj5dk/s1600/01.%25E5%25AE%2598%25E7%25B6%25B2%25E4%25B8%258B%25E8%25BC%2589.png)](http://2.bp.blogspot.com/-oQRiidn7woQ/VcRUEOkTHzI/AAAAAAAACYs/6-EfBRJj5dk/s1600/01.%25E5%25AE%2598%25E7%25B6%25B2%25E4%25B8%258B%25E8%25BC%2589.png) 打開專案後，記得先改一下Symbols資料夾的名稱，不然會卡住 [![](http://2.bp.blogspot.com/-PR8hHSy2T8k/VcRUELObHvI/AAAAAAAACYk/3nHRJakSjWI/s1600/02.%25E6%259B%25B4%25E5%2590%258D%25E8%25B3%2587%25E6%2596%2599%25E5%25A4%25BE.png)](http://2.bp.blogspot.com/-PR8hHSy2T8k/VcRUELObHvI/AAAAAAAACYk/3nHRJakSjWI/s1600/02.%25E6%259B%25B4%25E5%2590%258D%25E8%25B3%2587%25E6%2596%2599%25E5%25A4%25BE.png) web.config中，也要把symbolsPath的值改成修改後的名稱 [![](http://1.bp.blogspot.com/-SE4iQc3tiRk/VcRUEOVlHII/AAAAAAAACYo/iyVluHcVMbs/s1600/03.%25E6%259B%25B4%25E6%2594%25B9%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png)](http://1.bp.blogspot.com/-SE4iQc3tiRk/VcRUEOVlHII/AAAAAAAACYo/iyVluHcVMbs/s1600/03.%25E6%259B%25B4%25E6%2594%25B9%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png) 佈署的Server後，首頁會有相關的資訊 [![](http://1.bp.blogspot.com/-N2dx5rrJZoA/VcRUEg5yZvI/AAAAAAAACYw/3ngpW204hMU/s1600/04.%25E9%25A6%2596%25E9%25A0%2581.png)](http://1.bp.blogspot.com/-N2dx5rrJZoA/VcRUEg5yZvI/AAAAAAAACYw/3ngpW204hMU/s1600/04.%25E9%25A6%2596%25E9%25A0%2581.png) 在Visual Studio中的工具-&amp;gt;選項-&amp;gt;偵錯-&amp;gt;一般，改用來源伺服器支援 [![](http://2.bp.blogspot.com/-2E822hTBCzA/VcRUEyZbAUI/AAAAAAAACY8/63nyAVu3Oqw/s1600/05.%25E4%25BE%2586%25E6%25BA%2590%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8.png)](http://2.bp.blogspot.com/-2E822hTBCzA/VcRUEyZbAUI/AAAAAAAACY8/63nyAVu3Oqw/s1600/05.%25E4%25BE%2586%25E6%25BA%2590%25E4%25BC%25BA%25E6%259C%258D%25E5%2599%25A8.png) 在Visual Studio中的工具-&amp;gt;選項-&amp;gt;偵錯-&amp;gt;符號，新增SymbolServer位置 [![](http://1.bp.blogspot.com/-171ZsRPe9fA/VcRUE5-ZggI/AAAAAAAACY4/r4f_T4B9vko/s1600/06.%25E8%25A8%25AD%25E5%25AE%259Asymbol.png)](http://1.bp.blogspot.com/-171ZsRPe9fA/VcRUE5-ZggI/AAAAAAAACY4/r4f_T4B9vko/s1600/06.%25E8%25A8%25AD%25E5%25AE%259Asymbol.png) Symbol推送到NuPeek後，在程式碼中下個中斷點 [![](http://1.bp.blogspot.com/-tjJyCp9Z_Y0/VcRUFN0nfJI/AAAAAAAACZA/CsERo4TzUNs/s1600/07.%25E4%25B8%25AD%25E6%2596%25B7%25E9%25BB%259E.png)](http://1.bp.blogspot.com/-tjJyCp9Z_Y0/VcRUFN0nfJI/AAAAAAAACZA/CsERo4TzUNs/s1600/07.%25E4%25B8%25AD%25E6%2596%25B7%25E9%25BB%259E.png) 透過Fillder可以看到下載Symbol符號和Source 符號快取資料夾中也可以看到下載的資料 [![](http://1.bp.blogspot.com/-YoZEmEC8L_M/VcRUFr50hMI/AAAAAAAACZE/r4Cm7K-fVFE/s1600/08.%25E4%25B8%258B%25E8%25BC%2589%25E7%25AC%25A6%25E8%2599%259F.png)](http://1.bp.blogspot.com/-YoZEmEC8L_M/VcRUFr50hMI/AAAAAAAACZE/r4Cm7K-fVFE/s1600/08.%25E4%25B8%258B%25E8%25BC%2589%25E7%25AC%25A6%25E8%2599%259F.png) F11進入函式後，可以看到符號的Source是在符號快取資料夾中取得 [!</description>
    </item>
    
    <item>
      <title>[Sublime Text 3 Package] HTML-CSS-JS Prettify</title>
      <link>http://example.org/posts/2015/07/sublime-text-3-package-html-css-js-prettify/</link>
      <pubDate>Fri, 03 Jul 2015 16:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/07/sublime-text-3-package-html-css-js-prettify/</guid>
      <description>HTML-CSS-JS Prettify套件是用來格式化html文件的工具 一樣按下Ctrl + Shift + P透過Pageage Control來安裝套件
[![](http://4.bp.blogspot.com/-T9xlzy_ldYM/VZZJjIIlW9I/AAAAAAAACXk/ekC6uQ_sMYI/s1600/01.install%2Bpackage.png)](http://4.bp.blogspot.com/-T9xlzy_ldYM/VZZJjIIlW9I/AAAAAAAACXk/ekC6uQ_sMYI/s1600/01.install%2Bpackage.png) 找到HTML-CSS-JS PRettify套件按下Enter即可 [![](http://1.bp.blogspot.com/-aaHozB7QiKg/VZZJjH-vu5I/AAAAAAAACXo/HfQqJtO2nO8/s1600/02.htmlcssjs%25E5%25A5%2597%25E4%25BB%25B6.png)](http://1.bp.blogspot.com/-aaHozB7QiKg/VZZJjH-vu5I/AAAAAAAACXo/HfQqJtO2nO8/s1600/02.htmlcssjs%25E5%25A5%2597%25E4%25BB%25B6.png) 套件需要透過Node來格式化文件，所以需要確定Node執行檔的路徑 [![](http://1.bp.blogspot.com/-ZIQo-oOuuDg/VZZJjJ2VcXI/AAAAAAAACXs/lm1kcnRjuFI/s1600/03.%25E8%25A8%25AD%25E5%25AE%259Anodejs%25E8%25B7%25AF%25E5%25BE%2591.png)](http://1.bp.blogspot.com/-ZIQo-oOuuDg/VZZJjJ2VcXI/AAAAAAAACXs/lm1kcnRjuFI/s1600/03.%25E8%25A8%25AD%25E5%25AE%259Anodejs%25E8%25B7%25AF%25E5%25BE%2591.png) 確定node.exe執行檔的路徑即可 [![](http://1.bp.blogspot.com/-LFnjhIHYh6I/VZZJjzkQH8I/AAAAAAAACXw/Z5U0KfZ5C3k/s1600/04.%25E8%25BC%25B8%25E5%2585%25A5NodJS%25E8%25B7%25AF%25E5%25BE%2591.png)](http://1.bp.blogspot.com/-LFnjhIHYh6I/VZZJjzkQH8I/AAAAAAAACXw/Z5U0KfZ5C3k/s1600/04.%25E8%25BC%25B8%25E5%2585%25A5NodJS%25E8%25B7%25AF%25E5%25BE%2591.png) 準備一份html文件，按下Ctrl&amp;nbsp;+ Shift&amp;nbsp;+ H快速鍵 [![](http://2.bp.blogspot.com/-dbffjR23Gzk/VZZJkFkfxaI/AAAAAAAACX0/SeWf0YZl564/s1600/05.html%25E6%2596%2587%25E4%25BB%25B6.png)](http://2.bp.blogspot.com/-dbffjR23Gzk/VZZJkFkfxaI/AAAAAAAACX0/SeWf0YZl564/s1600/05.html%25E6%2596%2587%25E4%25BB%25B6.png) 即可完成格式化 [!</description>
    </item>
    
    <item>
      <title>[Sublime Text 3 Package] Emmet</title>
      <link>http://example.org/posts/2015/07/sublime-text-3-package-emmet/</link>
      <pubDate>Fri, 03 Jul 2015 15:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/07/sublime-text-3-package-emmet/</guid>
      <description>Emmet套件是用來快速產生HTML和CSS tag的工具，語法如下
  &amp;gt; 子層元素  + 同層元素  ^ 上層元素  # id  . class  [] 屬性  {} 文字內容  () 群組  * 重覆數量，後面接數字可以指定要重覆多少個數的元素  $ 排序數字，多個$符號會產生多位數的排序數字，前面補零  lorem 亂數文字，後面接數字可以指定幾個字的文字，不接數字的話則是一整個句子  按下Ctrl + Shift&amp;nbsp;+ P 叫出命令視窗，輸入Instal Package，選擇安裝套件 [![](http://2.bp.blogspot.com/-RXRQlvTImrA/VZY6RvHqogI/AAAAAAAACXE/beyRzp0QOdI/s1600/01.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png)](http://2.bp.blogspot.com/-RXRQlvTImrA/VZY6RvHqogI/AAAAAAAACXE/beyRzp0QOdI/s1600/01.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png) 輸入emmet按下enter即可安裝 [![](http://2.bp.blogspot.com/-x9ggQilI3S0/VZY6Rh9QDJI/AAAAAAAACXU/LqzkEKondZg/s1600/02.%25E9%2581%25B8%25E6%2593%2587emmet.png)](http://2.bp.blogspot.com/-x9ggQilI3S0/VZY6Rh9QDJI/AAAAAAAACXU/LqzkEKondZg/s1600/02.%25E9%2581%25B8%25E6%2593%2587emmet.png) 安裝完成 [![](http://3.bp.blogspot.com/-NJPkD0s5oqI/VZY6RlDbh4I/AAAAAAAACXQ/hCrHH8EBA5g/s1600/03.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png)](http://3.bp.blogspot.com/-NJPkD0s5oqI/VZY6RlDbh4I/AAAAAAAACXQ/hCrHH8EBA5g/s1600/03.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png) 開一個新檔案來試試，輸入html:5&amp;gt;div#header+div#content+div#footer後，按下tab鍵 [![](http://1.bp.blogspot.com/-Ud9bZo64rQ4/VZY6SYGOTAI/AAAAAAAACXM/Tv_tOrYIaDw/s1600/04.%25E8%25BC%25B8%25E5%2585%25A5zencode.png)](http://1.bp.blogspot.com/-Ud9bZo64rQ4/VZY6SYGOTAI/AAAAAAAACXM/Tv_tOrYIaDw/s1600/04.%25E8%25BC%25B8%25E5%2585%25A5zencode.png) 就會自動展開成html元素 [![](http://4.bp.blogspot.com/-y6ncW6qrNgc/VZY6SfUtxzI/AAAAAAAACXY/GqmDW0_SKgY/s1600/05.%25E6%258C%2589%25E4%25B8%258Btab.png)](http://4.bp.blogspot.com/-y6ncW6qrNgc/VZY6SfUtxzI/AAAAAAAACXY/GqmDW0_SKgY/s1600/05.%25E6%258C%2589%25E4%25B8%258Btab.png) </description>
    </item>
    
    <item>
      <title>[Sublime Text 3 Package] ConvertToUTF8</title>
      <link>http://example.org/posts/2015/07/sublime-text-3-package-converttoutf8/</link>
      <pubDate>Fri, 03 Jul 2015 13:45:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/07/sublime-text-3-package-converttoutf8/</guid>
      <description>Sublime Text 3 預設不支援中文編碼，所以需要安裝ConvertToUTF8套件來解決這個問題 按下Ctrl + Shift + P叫出命令視窗，輸入Install Package，選擇Package Control: Install Package
[![](http://2.bp.blogspot.com/-B1rAv6zEp1A/VZYg570fO3I/AAAAAAAACWA/egNm6XGSRMQ/s1600/1.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png)](http://2.bp.blogspot.com/-B1rAv6zEp1A/VZYg570fO3I/AAAAAAAACWA/egNm6XGSRMQ/s1600/1.%25E5%25AE%2589%25E8%25A3%259D%25E5%25A5%2597%25E4%25BB%25B6.png) 在命令列中輸入UTF8，選擇ConvertToUTF8套件 [![](http://2.bp.blogspot.com/-lj_t3nvfC-o/VZYg6NFAqYI/AAAAAAAACWI/_0qVzfrva04/s1600/2.%25E9%2581%25B8%25E6%2593%2587UTF8.png)](http://2.bp.blogspot.com/-lj_t3nvfC-o/VZYg6NFAqYI/AAAAAAAACWI/_0qVzfrva04/s1600/2.%25E9%2581%25B8%25E6%2593%2587UTF8.png) 左下角會顯示正在安裝套件 [![](http://1.bp.blogspot.com/-1tDQP_IsDnA/VZYg6cyipbI/AAAAAAAACWM/tiRVWfXO7A0/s1600/3.%25E5%25AE%2589%25E8%25A3%259DUTF8%25E5%25A5%2597%25E4%25BB%25B6.png)](http://1.bp.blogspot.com/-1tDQP_IsDnA/VZYg6cyipbI/AAAAAAAACWM/tiRVWfXO7A0/s1600/3.%25E5%25AE%2589%25E8%25A3%259DUTF8%25E5%25A5%2597%25E4%25BB%25B6.png) 安裝完成後打開套件預設設定值 [![](http://2.bp.blogspot.com/-cLmFa_brOHo/VZYg6jSAJNI/AAAAAAAACWQ/osdZHOQjirg/s1600/6.%25E9%25A0%2590%25E8%25A8%25AD%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png)](http://2.bp.blogspot.com/-cLmFa_brOHo/VZYg6jSAJNI/AAAAAAAACWQ/osdZHOQjirg/s1600/6.%25E9%25A0%2590%25E8%25A8%25AD%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png) 將預設設定值複制後打開套件個人設定值 [![](http://1.bp.blogspot.com/-6P8MALErcg8/VZYg5FetwEI/AAAAAAAACV0/cuC0b1NOOIs/s1600/07.%25E5%25A5%2597%25E4%25BB%25B6%25E5%2580%258B%25E4%25BA%25BA%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png)](http://1.bp.blogspot.com/-6P8MALErcg8/VZYg5FetwEI/AAAAAAAACV0/cuC0b1NOOIs/s1600/07.%25E5%25A5%2597%25E4%25BB%25B6%25E5%2580%258B%25E4%25BA%25BA%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png) 調整BIG5編碼順序放到GBK前面後存檔 [![](http://4.bp.blogspot.com/-L5m5ZtnSchg/VZYg5KY5mUI/AAAAAAAACV8/OJC66EPLfoU/s1600/08.%25E4%25BA%25A4%25E6%258F%259Bbig5.png)](http://4.bp.blogspot.com/-L5m5ZtnSchg/VZYg5KY5mUI/AAAAAAAACV8/OJC66EPLfoU/s1600/08.%25E4%25BA%25A4%25E6%258F%259Bbig5.png) 透過File&amp;gt;Set File Encoding to選單可以調整檔案編碼 [!</description>
    </item>
    
    <item>
      <title>Sublime Text 3 個人設定檔</title>
      <link>http://example.org/posts/2015/07/sublime-text-3-%E5%80%8B%E4%BA%BA%E8%A8%AD%E5%AE%9A%E6%AA%94/</link>
      <pubDate>Fri, 03 Jul 2015 10:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/07/sublime-text-3-%E5%80%8B%E4%BA%BA%E8%A8%AD%E5%AE%9A%E6%AA%94/</guid>
      <description>預設的設定值在Preferences&amp;gt;Settings-Default
[![](http://4.bp.blogspot.com/-BHtrsMvmUSc/VZXzTQv_MKI/AAAAAAAACVo/taqlyOEkpa8/s1600/01.%25E9%25A0%2590%25E8%25A8%25AD%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png)](http://4.bp.blogspot.com/-BHtrsMvmUSc/VZXzTQv_MKI/AAAAAAAACVo/taqlyOEkpa8/s1600/01.%25E9%25A0%2590%25E8%25A8%25AD%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png) 打開後會有所有設定的說明和設定值，這個檔案是唯讀的JSON檔案如果要變更設定，需要打開Preferences&amp;gt;Settings-User[![](http://4.bp.blogspot.com/-6FtW1vtnTW4/VZXzTeGHcgI/AAAAAAAACVg/A4Izoa5_Y5U/s1600/02.%25E5%2594%25AF%25E8%25AE%2580%25E7%259A%2584%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png)](http://4.bp.blogspot.com/-6FtW1vtnTW4/VZXzTeGHcgI/AAAAAAAACVg/A4Izoa5_Y5U/s1600/02.%25E5%2594%25AF%25E8%25AE%2580%25E7%259A%2584%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AA%2594.png) 在這個檔案中把預設的設定值覆蓋即可[![](http://2.bp.blogspot.com/-z-2bKW2AXyk/VZXzTSxadGI/AAAAAAAACVk/d-nB7KIDDTY/s1600/03.%25E6%2588%2591%25E7%259A%2584%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png)](http://2.bp.blogspot.com/-z-2bKW2AXyk/VZXzTSxadGI/AAAAAAAACVk/d-nB7KIDDTY/s1600/03.%25E6%2588%2591%25E7%259A%2584%25E8%25A8%25AD%25E5%25AE%259A%25E5%2580%25BC.png)  { &#34;font_size&#34;: 16, &#34;translate_tabs_to_spaces&#34;: true, &#34;word_wrap&#34;: false, &#34;highlight_line&#34;: true, &#34;highlight_modified_tabs&#34;: true, &#34;show_encoding&#34;: true, &#34;show_line_endings&#34;: true, } </description>
    </item>
    
    <item>
      <title>Sublime Text 3 安裝 Package Control</title>
      <link>http://example.org/posts/2015/06/sublime-text-3-%E5%AE%89%E8%A3%9D-package-control/</link>
      <pubDate>Sat, 27 Jun 2015 14:52:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/06/sublime-text-3-%E5%AE%89%E8%A3%9D-package-control/</guid>
      <description>來到 Package Control 官網，選擇Installation
[![](http://4.bp.blogspot.com/-9EHy-0yFlmI/VY5HZM-iefI/AAAAAAAACUM/dcc_k7VFRHc/s1600/01.%25E5%25A5%2597%25E4%25BB%25B6%25E7%25AE%25A1%25E7%2590%2586%25E5%25AE%2598%25E7%25B6%25B2.png)](http://4.bp.blogspot.com/-9EHy-0yFlmI/VY5HZM-iefI/AAAAAAAACUM/dcc_k7VFRHc/s1600/01.%25E5%25A5%2597%25E4%25BB%25B6%25E7%25AE%25A1%25E7%2590%2586%25E5%25AE%2598%25E7%25B6%25B2.png) 選擇要安裝的版本，把下面的語法複制起來 [![](http://1.bp.blogspot.com/-VK54ChzDu3w/VY5HZGlK2vI/AAAAAAAACUc/yeo4iQMNvVg/s1600/02.%25E9%2581%25B8%25E6%2593%2587%25E7%2589%2588%25E6%259C%25AC.png)](http://1.bp.blogspot.com/-VK54ChzDu3w/VY5HZGlK2vI/AAAAAAAACUc/yeo4iQMNvVg/s1600/02.%25E9%2581%25B8%25E6%2593%2587%25E7%2589%2588%25E6%259C%25AC.png) 打開Sublime Text，按下Ctrl&amp;nbsp;+ `打開控制台，將剛複制的語法貼上去，按Enter執行 [![](http://3.bp.blogspot.com/-s3kOUX0c8OY/VY5HZDay4OI/AAAAAAAACUQ/LstUNWDBtdw/s1600/03.%25E8%25B2%25BC%25E4%25B8%258A.png)](http://3.bp.blogspot.com/-s3kOUX0c8OY/VY5HZDay4OI/AAAAAAAACUQ/LstUNWDBtdw/s1600/03.%25E8%25B2%25BC%25E4%25B8%258A.png) 接下來按下Ctrl&amp;nbsp;+ Shift&amp;nbsp;+ P，打開命令列，可以看到多了Package Control相關的指令 [![](http://3.bp.blogspot.com/-4ZTY7d_jUzA/VY5HZwfgM_I/AAAAAAAACUs/GYvz6m_4Ha4/s1600/04.install%2Bpackage.png)](http://3.bp.blogspot.com/-4ZTY7d_jUzA/VY5HZwfgM_I/AAAAAAAACUs/GYvz6m_4Ha4/s1600/04.install%2Bpackage.png) 接下來安裝個套件，選擇Install Package，切換到可安裝的套件列表 [![](http://1.bp.blogspot.com/-v4yQdfOFx7w/VY5HaBoz5WI/AAAAAAAACUo/k0p5uampu9o/s1600/05.%25E5%25A5%2597%25E4%25BB%25B6%25E5%2590%258D%25E7%25A8%25B1%25E5%2588%2597%25E8%25A1%25A8.png)](http://1.bp.blogspot.com/-v4yQdfOFx7w/VY5HaBoz5WI/AAAAAAAACUo/k0p5uampu9o/s1600/05.%25E5%25A5%2597%25E4%25BB%25B6%25E5%2590%258D%25E7%25A8%25B1%25E5%2588%2597%25E8%25A1%25A8.png) 輸入utf8，找到ConvertToUTF8，點擊後安裝 [![](http://1.bp.blogspot.com/-qBvotxZBRkY/VY5HbOFQASI/AAAAAAAACU4/9qSlwdMpDyM/s1600/6.utf8%25E5%25A5%2597%25E4%25BB%25B6.png)](http://1.bp.blogspot.com/-qBvotxZBRkY/VY5HbOFQASI/AAAAAAAACU4/9qSlwdMpDyM/s1600/6.utf8%25E5%25A5%2597%25E4%25BB%25B6.png) 安裝完成 [![](http://2.bp.blogspot.com/-z-XYbMu9E5I/VY5HaffK6kI/AAAAAAAACUw/mQafH9uK53Y/s1600/07.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png)](http://2.bp.blogspot.com/-z-XYbMu9E5I/VY5HaffK6kI/AAAAAAAACUw/mQafH9uK53Y/s1600/07.%25E5%25AE%2589%25E8%25A3%259D%25E5%25AE%258C%25E6%2588%2590.png) 檔案會以UTF8方式儲存 [!</description>
    </item>
    
    <item>
      <title>安裝Sublime Text 3</title>
      <link>http://example.org/posts/2015/06/%E5%AE%89%E8%A3%9Dsublime-text-3/</link>
      <pubDate>Sat, 27 Jun 2015 14:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/06/%E5%AE%89%E8%A3%9Dsublime-text-3/</guid>
      <description>先到官網下載安裝程式
[![](http://4.bp.blogspot.com/-JDVMIAWkA7U/VY5ClXt9JII/AAAAAAAACTI/TXN2R2wq1Xw/s1600/0.%25E5%25AE%2598%25E7%25B6%25B2.png)](http://4.bp.blogspot.com/-JDVMIAWkA7U/VY5ClXt9JII/AAAAAAAACTI/TXN2R2wq1Xw/s1600/0.%25E5%25AE%2598%25E7%25B6%25B2.png) 雙擊安裝程式後開始安裝 [![](http://2.bp.blogspot.com/-o8f1QZyUwDM/VY5ClU17nyI/AAAAAAAACTE/81X6hvBlp7A/s1600/01.%2B%25E5%25AE%2589%25E8%25A3%259D.png)](http://2.bp.blogspot.com/-o8f1QZyUwDM/VY5ClU17nyI/AAAAAAAACTE/81X6hvBlp7A/s1600/01.%2B%25E5%25AE%2589%25E8%25A3%259D.png) 選擇安裝路徑 [![](http://1.bp.blogspot.com/-99ARoptqIks/VY5Cleq6hRI/AAAAAAAACTw/MzM7dJJX_Ek/s1600/02.%25E9%2581%25B8%25E6%2593%2587%25E5%25AE%2589%25E8%25A3%259D%25E8%25B7%25AF%25E5%25BE%2591.png)](http://1.bp.blogspot.com/-99ARoptqIks/VY5Cleq6hRI/AAAAAAAACTw/MzM7dJJX_Ek/s1600/02.%25E9%2581%25B8%25E6%2593%2587%25E5%25AE%2589%25E8%25A3%259D%25E8%25B7%25AF%25E5%25BE%2591.png) 勾選加入滑鼠右鍵 [![](http://3.bp.blogspot.com/-eyfiB5CBKfc/VY5CmEaoIBI/AAAAAAAACTo/JE3Lp2bwzH4/s1600/03.%25E5%258B%25BE%25E9%2581%25B8%25E5%258A%25A0%25E5%2585%25A5%25E6%25BB%2591%25E9%25BC%25A0%25E5%258F%25B3%25E9%258D%25B5.png)](http://3.bp.blogspot.com/-eyfiB5CBKfc/VY5CmEaoIBI/AAAAAAAACTo/JE3Lp2bwzH4/s1600/03.%25E5%258B%25BE%25E9%2581%25B8%25E5%258A%25A0%25E5%2585%25A5%25E6%25BB%2591%25E9%25BC%25A0%25E5%258F%25B3%25E9%258D%25B5.png) 安裝資訊確認 [![](http://1.bp.blogspot.com/-DY9wtfPk6gI/VY5CmWFpA6I/AAAAAAAACTg/0No4B7wFAs4/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E8%25B3%2587%25E8%25A8%258A%25E7%25A2%25BA%25E8%25AA%258D.png)](http://1.bp.blogspot.com/-DY9wtfPk6gI/VY5CmWFpA6I/AAAAAAAACTg/0No4B7wFAs4/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E8%25B3%2587%25E8%25A8%258A%25E7%25A2%25BA%25E8%25AA%258D.png) 開始安裝 [![](http://1.bp.blogspot.com/-xjtQwqsAO34/VY5CmjhzZWI/AAAAAAAACTk/eRL1DWM3aqU/s1600/05.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png)](http://1.bp.blogspot.com/-xjtQwqsAO34/VY5CmjhzZWI/AAAAAAAACTk/eRL1DWM3aqU/s1600/05.%25E9%2596%258B%25E5%25A7%258B%25E5%25AE%2589%25E8%25A3%259D.png) 完成安裝 [!</description>
    </item>
    
    <item>
      <title>Sublime Text 3 學習筆記</title>
      <link>http://example.org/posts/2015/06/sublime-text-3-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sat, 27 Jun 2015 14:22:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/06/sublime-text-3-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>1. 安裝Sublime Text 3 http://blog.developer.idv.tw/2015/06/sublime-text-3_27.html
2. Sublime Text 3 安裝Package Control http://blog.developer.idv.tw/2015/06/sublime-text-3_36.html
3. Sublime Text 3 個人設定檔 http://blog.developer.idv.tw/2015/07/sublime-text-3.html
4. [Sublime Text 3 Package] ConvertToUTF8 http://blog.developer.idv.tw/2015/07/sublime-text-3-package-converttoutf8.html
5. [Sublime Text 3 Package] Emmet http://blog.developer.idv.tw/2015/07/sublime-text-3-package-emmet.html
6. [Sublime Text 3 Package] HTML-CSS-JS Prettify http://blog.developer.idv.tw/2015/07/sublime-text-3-package-html-css-js.html
參考資料 Sublime Text 手冊
Sublime Text 全程指南
Sublime Text 3 新手上路：必要的安裝、設定與基本使用教學
Table of Contents - Sublime Text Unofficial Documentation
Sublime Text 3 Documentation</description>
    </item>
    
    <item>
      <title>Frame Hijacking 防止其他站台用Frame包住自家的網站</title>
      <link>http://example.org/posts/2015/05/frame-hijacking-%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%AB%99%E5%8F%B0%E7%94%A8frame%E5%8C%85%E4%BD%8F%E8%87%AA%E5%AE%B6%E7%9A%84%E7%B6%B2%E7%AB%99/</link>
      <pubDate>Wed, 20 May 2015 15:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/05/frame-hijacking-%E9%98%B2%E6%AD%A2%E5%85%B6%E4%BB%96%E7%AB%99%E5%8F%B0%E7%94%A8frame%E5%8C%85%E4%BD%8F%E8%87%AA%E5%AE%B6%E7%9A%84%E7%B6%B2%E7%AB%99/</guid>
      <description>建立簡單的三個站台
[![](http://1.bp.blogspot.com/-bmqrkBwnMi0/VVw5htGvBVI/AAAAAAAACSc/yGWZiLD-X4c/s1600/00.site.png)](http://1.bp.blogspot.com/-bmqrkBwnMi0/VVw5htGvBVI/AAAAAAAACSc/yGWZiLD-X4c/s1600/00.site.png) w1.aaa.com &amp;lt;%@ Page Language=&#34;C#&#34; AutoEventWireup=&#34;true&#34; CodeBehind=&#34;default.aspx.cs&#34; Inherits=&#34;w1._default&#34; %&amp;gt; &amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;rdquo;&amp;gt; &amp;lt;head runat=&amp;quot;server&amp;rdquo;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;rdquo; content=&amp;quot;text/html; charset=utf-8&amp;rdquo; /&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form id=&amp;quot;form1&amp;rdquo; runat=&amp;quot;server&amp;rdquo;&amp;gt; &amp;lt;div&amp;gt; w1 &amp;lt;/div&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  w2.bbb.com
&amp;lt;%@ Page Language=&#34;C#&#34; AutoEventWireup=&#34;true&#34; CodeBehind=&#34;default.aspx.cs&#34; Inherits=&#34;w2._default&#34; %&amp;gt; &amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;rdquo;&amp;gt; &amp;lt;head runat=&amp;quot;server&amp;rdquo;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;rdquo; content=&amp;quot;text/html; charset=utf-8&amp;rdquo; /&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form id=&amp;quot;form1&amp;rdquo; runat=&amp;quot;server&amp;rdquo;&amp;gt; &amp;lt;div&amp;gt; w2 &amp;lt;/div&amp;gt; &amp;lt;br /&amp;gt; &amp;lt;div&amp;gt; &amp;lt;iframe src=&amp;quot;http://w1.aaa.com&amp;rdquo; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;</description>
    </item>
    
    <item>
      <title>申請Google API</title>
      <link>http://example.org/posts/2015/04/%E7%94%B3%E8%AB%8Bgoogle-api/</link>
      <pubDate>Tue, 21 Apr 2015 16:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/04/%E7%94%B3%E8%AB%8Bgoogle-api/</guid>
      <description>首先進到Google Console頁面 https://console.developers.google.com/
登入google帳號
[![](http://3.bp.blogspot.com/-jRAsU5bHt1Y/VTYIp-OGA4I/AAAAAAAACRE/REV4lLL9vV4/s1600/01.%E7%99%BB%E5%85%A5%E5%B8%B3%E8%99%9F.png)](http://3.bp.blogspot.com/-jRAsU5bHt1Y/VTYIp-OGA4I/AAAAAAAACRE/REV4lLL9vV4/s1600/01.%E7%99%BB%E5%85%A5%E5%B8%B3%E8%99%9F.png) 如果之前沒建過專案的話，需要先建立專案 [![](http://2.bp.blogspot.com/-g6E2ZF4L-NQ/VTYIpsqqQCI/AAAAAAAACRI/l_d4fMWOXiY/s1600/02.%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-g6E2ZF4L-NQ/VTYIpsqqQCI/AAAAAAAACRI/l_d4fMWOXiY/s1600/02.%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88.png) 輸入專案名稱後，按下建立專案 [![](http://2.bp.blogspot.com/-H_W5hJgUueA/VTYIpqpS2RI/AAAAAAAACRA/fhoyVXnA8E8/s1600/03.%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-H_W5hJgUueA/VTYIpqpS2RI/AAAAAAAACRA/fhoyVXnA8E8/s1600/03.%E5%BB%BA%E7%AB%8B%E5%B0%88%E6%A1%88.png) 先啟用API，這邊用Youtube Data API來當例子 [![](http://1.bp.blogspot.com/-c241WnttL90/VTYIqQ0seLI/AAAAAAAACRM/Dmp9oKLYfAg/s1600/04.youtube%2Bapi.png)](http://1.bp.blogspot.com/-c241WnttL90/VTYIqQ0seLI/AAAAAAAACRM/Dmp9oKLYfAg/s1600/04.youtube%2Bapi.png) 啟用API [![](http://2.bp.blogspot.com/-THEurV1HVik/VTYIqqoXfDI/AAAAAAAACRQ/HwLxgv53wvI/s1600/05.%E5%95%9F%E7%94%A8api.png)](http://2.bp.blogspot.com/-THEurV1HVik/VTYIqqoXfDI/AAAAAAAACRQ/HwLxgv53wvI/s1600/05.%E5%95%9F%E7%94%A8api.png) 接下來要用設定同意畫面，選擇電子郵件和輸入產品名稱就可以了 [![](http://3.bp.blogspot.com/-8fHQUGNCI5E/VTYIqykLyGI/AAAAAAAACRU/nkLryYLB0qE/s1600/06.%E5%90%8C%E6%84%8F%E7%95%AB%E9%9D%A2.png)](http://3.bp.blogspot.com/-8fHQUGNCI5E/VTYIqykLyGI/AAAAAAAACRU/nkLryYLB0qE/s1600/06.%E5%90%8C%E6%84%8F%E7%95%AB%E9%9D%A2.png) 再來要取得API的存取資料，這邊用OAuth為例 [![](http://1.bp.blogspot.com/-mvIEA3eWWW8/VTYIrHd65cI/AAAAAAAACRY/AC2lnpCTbGA/s1600/07.%E6%86%91%E8%AD%89.png)](http://1.bp.blogspot.com/-mvIEA3eWWW8/VTYIrHd65cI/AAAAAAAACRY/AC2lnpCTbGA/s1600/07.%E6%86%91%E8%AD%89.png) 選擇已安裝的應用程式 [![](http://4.bp.blogspot.com/-LfDyJXsdLeY/VTYIrQx6wUI/AAAAAAAACRc/Vdkka2-1vKY/s1600/08.%E5%BB%BA%E7%AB%8B%E6%86%91%E8%AD%89.png)](http://4.bp.blogspot.com/-LfDyJXsdLeY/VTYIrQx6wUI/AAAAAAAACRc/Vdkka2-1vKY/s1600/08.%E5%BB%BA%E7%AB%8B%E6%86%91%E8%AD%89.png) API Key建立完成 [!</description>
    </item>
    
    <item>
      <title>C# HexString to ByteArray</title>
      <link>http://example.org/posts/2015/03/c-hexstring-to-bytearray/</link>
      <pubDate>Wed, 04 Mar 2015 15:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/03/c-hexstring-to-bytearray/</guid>
      <description>16進位的字串轉成ByteArray
namespace ConsoleApplication1 { using System; using System.Linq; class Program { static void Main(string[] args) { string hexstring = &amp;quot;0123456789abcdef&amp;quot;; byte[] byteArray = Enumerable.Range(0, hexstring.Length) .Where(x =&amp;amp;gt; x % 2 == 0) .Select(x =&amp;amp;gt; Convert.ToByte(hexstring.Substring(x, 2), 16)) .ToArray(); Console.WriteLine(BitConverter.ToString(byteArray)); } }  }</description>
    </item>
    
    <item>
      <title>NodeJS 筆記</title>
      <link>http://example.org/posts/2015/01/nodejs-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Wed, 28 Jan 2015 15:42:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/nodejs-%E7%AD%86%E8%A8%98/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Redis RedisOutputCacheProvider</title>
      <link>http://example.org/posts/2015/01/redis-redisoutputcacheprovider/</link>
      <pubDate>Wed, 21 Jan 2015 17:51:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-redisoutputcacheprovider/</guid>
      <description>先開個Web專案
[![](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 安裝Microsoft.Web.RedisOutputCacheProvider套件 [![](http://4.bp.blogspot.com/-QT6Acrh4AnY/VL9106aZdnI/AAAAAAAACJg/7SwSvzSuaow/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://4.bp.blogspot.com/-QT6Acrh4AnY/VL9106aZdnI/AAAAAAAACJg/7SwSvzSuaow/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) web.config中的caching區段會自動帶入預設的設定 註解的說明也很清楚 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;system.web&amp;gt; &amp;lt;compilation debug=&#34;true&#34; targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;httpRuntime targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;caching&amp;gt; &amp;lt;outputCache defaultProvider=&#34;MyRedisOutputCache&#34;&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;!-- Either use &#39;connectionString&#39; and provide all parameters as string OR use &#39;host&#39;,&#39;port&#39;,&#39;accessKey&#39;,&#39;ssl&#39;,&#39;connectionTimeoutInMilliseconds&#39; and &#39;operationTimeoutInMilliseconds&#39;. --&amp;gt; &amp;lt;!-- &#39;databaseId&#39; and &#39;applicationName&#39; can be used with both options. --&amp;gt; &amp;lt;!-- &amp;lt;add name=&#34;MyRedisOutputCache&#34; host = &#34;127.0.0.1&#34; [String] port = &#34;&#34; [number] accessKey = &#34;&#34; [String] ssl = &#34;false&#34; [true|false] databaseId = &#34;</description>
    </item>
    
    <item>
      <title>Redis SessionStateProvider</title>
      <link>http://example.org/posts/2015/01/redis-sessionstateprovider/</link>
      <pubDate>Wed, 21 Jan 2015 17:28:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-sessionstateprovider/</guid>
      <description>首先開一個Web專案
[![](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 安裝Microsoft.Web.RedisSessionStateProvider套件 [![](http://1.bp.blogspot.com/-DuvFSvwfNg4/VL9vy-aDZCI/AAAAAAAACJA/Isrbq2EmYPE/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-DuvFSvwfNg4/VL9vy-aDZCI/AAAAAAAACJA/Isrbq2EmYPE/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 設定檔中的sessionState自動會加入一段設定，註解的說明也很清楚 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;system.web&amp;gt; &amp;lt;compilation debug=&#34;true&#34; targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;httpRuntime targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;sessionState mode=&#34;Custom&#34; customProvider=&#34;MySessionStateStore&#34;&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;!-- Either use &#39;connectionString&#39; and provide all parameters as string OR use &#39;host&#39;,&#39;port&#39;,&#39;accessKey&#39;,&#39;ssl&#39;,&#39;connectionTimeoutInMilliseconds&#39; and &#39;operationTimeoutInMilliseconds&#39;. --&amp;gt; &amp;lt;!-- &#39;throwOnError&#39;,&#39;retryTimeoutInMilliseconds&#39;,&#39;databaseId&#39; and &#39;applicationName&#39; can be used with both options. --&amp;gt; &amp;lt;!-- &amp;lt;add name=&#34;MySessionStateStore&#34; host = &#34;127.0.0.1&#34; [String] port = &#34;&#34; [number] accessKey = &#34;&#34; [String] ssl = &#34;false&#34; [true|false] throwOnError = &#34;true&#34; [true|false] retryTimeoutInMilliseconds = &#34;</description>
    </item>
    
    <item>
      <title>Redis 持久化</title>
      <link>http://example.org/posts/2015/01/redis-%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Wed, 21 Jan 2015 16:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>Redis有兩種持久化方式，一種是RDB，一種是Append，可同時使用 RDB是定時快照，觸發條件發生時，會把當時記憶體的資料存成檔案 所以一旦發生故障，損失的資料較多
啟用RDB持久化
save 900 1 save 300 10 save 60 10000 關閉RDB持久化
save &amp;quot;&amp;rdquo; 設定是否可以壓縮 rdbcompression yes
設定RDB的檔名 dbfilename dump.rdb
設定檔案的資料夾位置 dir ./
=============================================== AOF是把收到的指令，用純文字檔的方式附加到檔案中，資料持久化的效能較完整
啟用AOF持久化
appendonly no AOF檔案名稱
appendfilename appendonly.aof AOF檔案寫入的方式
appendfsync always appendfsync everysec
appendfsync no 設定AOF檔案重整的時間 auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb</description>
    </item>
    
    <item>
      <title>Redis StoredSet</title>
      <link>http://example.org/posts/2015/01/redis-storedset/</link>
      <pubDate>Wed, 21 Jan 2015 16:08:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-storedset/</guid>
      <description>指令說明ZADD將一個或多個元素加入有序集合ZCARD取得有序集合中的元素個數ZCOUNT取得有序集合中，score值在min到max的元素個數ZINCRBY設定有序集合中的成員score遞增值ZRANGE取得有序集合中指定位置範圍的元素ZRANGEBYSCORE取得有序集合中指定score範圍的元素ZRANK取得有序集合中元素從大到小的排列順序ZREM移除有序集合中一個或多個元素ZREMRANGEBYRANK移除有序集合中指定排名範圍的元素ZREMRANGEBYSCORE移除有序集合中指定score範圍的元素ZREVRANGE取得有序集合中指定位置範圍的元素 元素以遞減方式排列ZREVRANGEBYSCORE取得有序集合中指定score範圍的元素 元素以遞減方式排列ZREVRANK取得有序集合中元素從小到大的排列順序ZSCORE取得有序集點中元素的score值ZUNIONSTORE合併一個或多個有序集合的聯集 並把合併後的資料存成另一個有序集合ZINTERSTORE合併一個或多個有序集合的交集 並把合併後的資料存成另一個有序集合ZSCAN搜尋有序集合元素ZRANGEBYLEX取得有序集合中指定位置範圍的元素 當元素有相同的score時，用成員的字典順序排列ZLEXCOUNT取得有序集合中指定位置範圍的元素數量 當元素有相同的score時，用成員的字典順序排列ZREMRANGEBYLEX移除有序集合中指定排名範圍的元素 當元素有相同的score時，用成員的字典順序排列</description>
    </item>
    
    <item>
      <title>Redis Set</title>
      <link>http://example.org/posts/2015/01/redis-set/</link>
      <pubDate>Tue, 20 Jan 2015 11:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-set/</guid>
      <description>指令說明SADD將一或多個元性加入集合SCARD取得集合中元素的數量SDIFF取得集合中的差集SDIFFSTORE取得集合中的差集，並將結果存到另一個集合SINTER取得集合中的合集SINTERSTORE取得集合中的合集，並將結果存到另一個集合SISMEMBER判斷集合中是否有指定的元素SMEMBERS取得集合中的所有元素SMOVE將集合中的元素移動到另一個集合SPOP隨機取得集合中的元素，並移除該元素SRANDMEMBER隨機取得集合中的元素，不移除該元素SREM移除集合中的一個或多個元素SUNION取得集合中的聯集SUNIONSTORE取得集合中的聯集，並將結果存到另一個集合SSCAN搜尋集合中的元素</description>
    </item>
    
    <item>
      <title>Redis List</title>
      <link>http://example.org/posts/2015/01/redis-list/</link>
      <pubDate>Tue, 20 Jan 2015 11:42:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-list/</guid>
      <description>指令說明BLPOP阻塞式指令，從開頭彈出內容BRPOP阻塞式指令，從尾端彈出內容BRPOPLPUSH阻塞式指令，從尾端彈出內容，並把彈出的內容加入一個List的頭部LINDEX取得List中指定位置的內容LINSERT配合AFTER和BEFORE來決定插入指定位置的前面或後面LLEN取得List的長度LPOP從開頭彈出資料LPUSH從開頭加入資料LPUSHX從開頭加入資料，只有當鍵值存在並且是一個List的時後才成功LRANGE取得指定範圍內的資料LREM移除和指定內容相同的元素和個數LSET設定指定的資料LTRIM只保留指定範圍內的資料，不在指定範圍的資料全部移除RPOP從尾部彈出資料RPOPLPUSH從尾部彈出資料，並把彈出的資料加入一個List的頭部RPUSH從尾部加入資料RPUSHX從尾部加入資料，只有當鍵值存在並且是一個List的時後才成功</description>
    </item>
    
    <item>
      <title>Redis Hash</title>
      <link>http://example.org/posts/2015/01/redis-hash/</link>
      <pubDate>Tue, 20 Jan 2015 11:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-hash/</guid>
      <description>指令說明HDEL刪除指定的鍵值裡面的欄位HEXISTS檢查指定的鍵值欄位是否存在HGET取得指定的鍵值欄位內容HGETALL取得指定的鍵值所有欄位內容HINCRBY指定的鍵值欄位內容遞增加一HINCRBYFLOAT指定的鍵值欄位內容遞指定的浮點數HKEYS取得指定鍵值的所有欄位名稱HLEN取得指定鍵值的欄位數量HMGET同時取得多組指定鍵值的欄位內容HMSET同時設定多組指定鍵值的欄位內容HSET設定指定鍵值的欄位內容HSETNX設定指定鍵值的欄位內容HVALS取得指定鍵值的所有欄位的內容HSCAN查詢指定鍵值的欄位名稱</description>
    </item>
    
    <item>
      <title>Redis String</title>
      <link>http://example.org/posts/2015/01/redis-string/</link>
      <pubDate>Tue, 20 Jan 2015 11:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-string/</guid>
      <description>指令說明APPEND拼接字串BITCOUNT計算字串中的二進位值被設成1的個數BITOP字串中的二進位值的位元操作DECR遞減值一DECRBY遞減指定的值GET取得指定鍵值的內容GETBIT取得指定鍵值的二進位內容GETRANGE取得指定鍵值的資料特定位置的內容GETSET設定指定鍵值的內容，並返回舊值INCR遞增值一INCRBY遞增指定的值INCRBYFLOAT遞增指定的浮點數值MGET一次取回多組指定的key valueMSET一次設定多組key valueMSETNX一次設定多組key value，並且所有設定的key都不存在才成功PSETEX設定key value，並指定過期時間，單位是毫秒SET設定key value 配合ex參數設定過期時間，單位是秒 配合px參數設定過期時間，單位是毫秒 配合nx參數只有key不存在時才成功 配合xx參數只有key已存在時才成功SETBIT設定指定鍵值的二進位資料SETEX設定key value，並指定過期時間，單位是秒SETNX設定key value，並只有在key不存在時才成功SETRANGE更改特定位置的資料內容STRLEN取得指定鍵值的內容長度</description>
    </item>
    
    <item>
      <title>Redis Key</title>
      <link>http://example.org/posts/2015/01/redis-key/</link>
      <pubDate>Tue, 20 Jan 2015 11:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-key/</guid>
      <description>指令說明DEL刪除指定的KeyDUMP將指定key的內容匯出二進位內容 配合RESTORE指令可以把資料還原EXISTS判斷指定的Key是否存在EXPIRE用來設定Key的過期時間，單位是秒EXPIREAT用來設定Key的過期時間，單位是秒，UNIX時間戳記KEYS用來查詢目前Redis實體上的Key 可配合pattern查詢MIGRATE搬移資料到不同的Redis執行個體MOVE將指定的Key值搬到同一個Redis執行個體的不同資料庫OBJECT用來顯示該Key值的特性 OBJECT REFCOUNT &amp;lt;key&amp;gt; 取得該key的異動次數 OBJECT ENCODING &amp;lt;key&amp;gt; 取得該key的編碼 OBJECT IDLETIME &amp;lt;key&amp;gt; 取得該key未被存取的秒數PERSIST取消KEY上面的過期時間PEXPIRE用來設定Key的過期時間，單位是毫秒PEXPIREAT用來設定Key的過期時間，單位是毫秒，UNIX時間戳記PTTL取得Key到期的剩餘時間，單位是毫秒RANDOMKEY隨機取得一個KeyRENAME更名Key的名稱，如果新名稱已存在會覆蓋RENAMENX當key的新名稱不存在時，才更名Key的名稱RESTORE配合DUMP指令匯出的二進位內容 用來把資料還原SORT排序指定key的內容 配合limit可限制筆數 TTL取得Key到期的剩餘時間，單位是秒TYPE取得指定Key的內容的資料型態SCAN搜尋Key，可配合pattern 返回結果是一個迭代的指標</description>
    </item>
    
    <item>
      <title>Redis C# Client - StackExchange.Redis</title>
      <link>http://example.org/posts/2015/01/redis-c-client-stackexchange-redis/</link>
      <pubDate>Tue, 20 Jan 2015 10:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-c-client-stackexchange-redis/</guid>
      <description>先透過NuGet安裝StackExchange.Redis這個套件 如果需要簽署的元件，可以安裝StackExchange.Redis.StrongName這個套件
[![](http://2.bp.blogspot.com/-5e3umPXt3g0/VL2_bYzn_sI/AAAAAAAACIo/y5oTaiwue3Q/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://2.bp.blogspot.com/-5e3umPXt3g0/VL2_bYzn_sI/AAAAAAAACIo/y5oTaiwue3Q/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 透過ConnectionMultiplexer這個類別來產生連線，並重覆使用 再透過GetDatabase來取得要IDatabase介面，就可以存取Redis了
namespace ConsoleApplication1 { using System; using StackExchange.Redis; class Program { static void Main(string[] args) { ConnectionMultiplexer conn = ConnectionMultiplexer.Connect(&amp;quot;127.0.0.1:6379&amp;quot;); IDatabase cache = conn.GetDatabase(); cache.StringSet(&amp;quot;key1&amp;quot;, &amp;quot;value1&amp;quot;); string data = cache.StringGet(&amp;quot;key1&amp;quot;); Console.WriteLine(data); } }  } 
參考資料
StackExchange.Redis官網</description>
    </item>
    
    <item>
      <title>Redis 設定檔</title>
      <link>http://example.org/posts/2015/01/redis-%E8%A8%AD%E5%AE%9A%E6%AA%94/</link>
      <pubDate>Mon, 19 Jan 2015 19:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E8%A8%AD%E5%AE%9A%E6%AA%94/</guid>
      <description>用來指派空間的單位簡寫，不區分大小寫
1k =&amp;gt; 1000 bytes 1kb =&amp;gt; 1024 bytes 1m =&amp;gt; 1000000 bytes 1mb =&amp;gt; 1024*1024 bytes 1g =&amp;gt; 1000000000 bytes 1gb =&amp;gt; 102410241024 bytes 伺服器埠號 port 6379
繫結位址，預設是本機全部
bind 127.0.0.1 Client連線閒置多久要切斷連線，單位為秒，0是不限制時間 timeout 0
################################ 快照設定 ################################# 第一個參數是秒數，第二個參數是異動次數 符合以下任一條件，就執行一次快照，產生dump.rdb
save 900 1 save 300 10 save 60 10000
產生快照檔時是否要壓縮檔案 rdbcompression yes
快照檔案的檔名 dbfilename dump.rdb
快照檔案的路徑 dir ./
################################# 覆寫 #################################
在slave的實體上，用來指定master的位址
slaveof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt; 如果master需要驗證密碼時設定
masterauth &amp;lt;master-password&amp;gt; 當slave和master斷線，或是正在同步中，是否回應Client端要求 設定成no會回應一個SYNC with master in progress的錯誤 slave-serve-stale-data yes</description>
    </item>
    
    <item>
      <title>Redis 安裝</title>
      <link>http://example.org/posts/2015/01/redis-%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Mon, 19 Jan 2015 17:56:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E5%AE%89%E8%A3%9D/</guid>
      <description>在Linux環境上安裝Redis，最簡單的方式是用套件管理(apt or yum)，但通常不是最新版本 如果要使用最新版本，需要到官網下載原始碼編譯$ wget http://download.redis.io/releases/redis-2.8.19.tar.gz $ tar xzf redis-2.8.19.tar.gz $ cd redis-2.8.19 $ make 編譯如果碰到這個情況 make[1]: Entering directory &#39;/tmp/redis-2.8.19/src&#39; &amp;nbsp; &amp;nbsp; CC adlist.o In file included from adlist.c:34:0: zmalloc.h:50:31: fatal error: jemalloc/jemalloc.h: No such file or directory &amp;nbsp;#include &amp;lt;jemalloc/jemalloc.h&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;^ compilation terminated.  可以到deps下面先行編譯$ cd deps $ make hiredis jemalloc linenoise lua 或是直接執行以下的命令$ make MALLOC=libc Windows下的安裝，可以參考MSOpenTech在github上面的文件 https://github.</description>
    </item>
    
    <item>
      <title>Redis 筆記</title>
      <link>http://example.org/posts/2015/01/redis-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Wed, 14 Jan 2015 11:11:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E7%AD%86%E8%A8%98/</guid>
      <description>1. Redis 安裝 2. Redis 設定檔 3. Redis C# Client - StackExchange.Redis 4. Redis Key 5. Redis String 6. Redis Hash 7. Redis List 8. Redis Set 9. Redis StoredSet 10. Redis 持久化 11. Redis SessionStateProvider 12. Redis RedisOutputCacheProvider
參考資料
Redis 命令參考
ServiceStack.Redis</description>
    </item>
    
    <item>
      <title>設定負載測試</title>
      <link>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9A%E8%B2%A0%E8%BC%89%E6%B8%AC%E8%A9%A6/</link>
      <pubDate>Mon, 05 Jan 2015 17:53:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9A%E8%B2%A0%E8%BC%89%E6%B8%AC%E8%A9%A6/</guid>
      <description>新增負載測試
[![](http://1.bp.blogspot.com/-dcs_lZz5lcc/VKpergmBveI/AAAAAAAACHo/Ul10P_dDjqI/s1600/01.%E5%8A%A0%E5%85%A5%E8%B2%A0%E8%BC%89%E6%B8%AC%E8%A9%A6.png)](http://1.bp.blogspot.com/-dcs_lZz5lcc/VKpergmBveI/AAAAAAAACHo/Ul10P_dDjqI/s1600/01.%E5%8A%A0%E5%85%A5%E8%B2%A0%E8%BC%89%E6%B8%AC%E8%A9%A6.png) 建立新負載測試精靈歡迎畫面 [![](http://4.bp.blogspot.com/-Yt1HIwMAADw/VKpercJjGSI/AAAAAAAACHI/kAUw1imLZQI/s1600/02.%E6%AD%A1%E8%BF%8E%E7%B2%BE%E9%9D%88.png)](http://4.bp.blogspot.com/-Yt1HIwMAADw/VKpercJjGSI/AAAAAAAACHI/kAUw1imLZQI/s1600/02.%E6%AD%A1%E8%BF%8E%E7%B2%BE%E9%9D%88.png) 輸入這個負載測試的名稱 考慮時間特性，指的是每個動作之間考慮時間的方式 使用記錄的考慮時間，會是設定好的固定時間 使用常態分佈，會動態加減時間，比較符合真實的使用者習慣 [![](http://3.bp.blogspot.com/-cLk8Bv1qOmU/VKpersGjaqI/AAAAAAAACHM/ryNW75MhXEs/s1600/03.%E8%80%83%E6%85%AE%E6%99%82%E9%96%93%E7%89%B9%E6%80%A7.png)](http://3.bp.blogspot.com/-cLk8Bv1qOmU/VKpersGjaqI/AAAAAAAACHM/ryNW75MhXEs/s1600/03.%E8%80%83%E6%85%AE%E6%99%82%E9%96%93%E7%89%B9%E6%80%A7.png) 負載模式是用來設定連線的使用者數 常數負載是固定人數 逐步執行負載是設定初始人數在再幾秒內持續增加人數至最高人數 [![](http://1.bp.blogspot.com/-TcTnkuMf-yA/VKpesJ0alKI/AAAAAAAACHQ/WeK7HBX403Q/s1600/04.%E8%B2%A0%E8%BC%89%E4%BA%BA%E6%95%B8.png)](http://1.bp.blogspot.com/-TcTnkuMf-yA/VKpesJ0alKI/AAAAAAAACHQ/WeK7HBX403Q/s1600/04.%E8%B2%A0%E8%BC%89%E4%BA%BA%E6%95%B8.png) 測試混合模型 [![](http://4.bp.blogspot.com/-abXFwS34kEc/VKpesn6Y99I/AAAAAAAACHk/E4XrhgIBQoc/s1600/05.%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B.png)](http://4.bp.blogspot.com/-abXFwS34kEc/VKpesn6Y99I/AAAAAAAACHk/E4XrhgIBQoc/s1600/05.%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B.png) 測試混合是設定多個測試和各自的比例 [![](http://4.bp.blogspot.com/-y0MydR8f5HI/VKpes2vyE1I/AAAAAAAACHg/eltUfz2CWs4/s1600/06.%E6%B8%AC%E8%A9%A6%E6%B7%B7%E5%90%88.png)](http://4.bp.blogspot.com/-y0MydR8f5HI/VKpes2vyE1I/AAAAAAAACHg/eltUfz2CWs4/s1600/06.%E6%B8%AC%E8%A9%A6%E6%B7%B7%E5%90%88.png) 混路混合是設定多個網路類型和各自的比例 [![](http://4.bp.blogspot.com/-vTch6nvGWm0/VKpet2TbIwI/AAAAAAAACHs/SeDApjDilJ4/s1600/07.%E7%B6%B2%E8%B7%AF%E6%B7%B7%E5%90%88.png)](http://4.bp.blogspot.com/-vTch6nvGWm0/VKpet2TbIwI/AAAAAAAACHs/SeDApjDilJ4/s1600/07.%E7%B6%B2%E8%B7%AF%E6%B7%B7%E5%90%88.png) 瀏覽器混合是設定多個瀏覽器和各自的比例 [![](http://1.bp.blogspot.com/-c3nXSGjnvGE/VKpeuPqy2xI/AAAAAAAACIE/x1vpU2Fi0ew/s1600/08.%E7%80%8F%E8%A6%BD%E5%99%A8%E6%B7%B7%E5%90%88.png)](http://1.bp.blogspot.com/-c3nXSGjnvGE/VKpeuPqy2xI/AAAAAAAACIE/x1vpU2Fi0ew/s1600/08.%E7%80%8F%E8%A6%BD%E5%99%A8%E6%B7%B7%E5%90%88.png) 計數器集合 [![](http://1.bp.blogspot.com/-Ryh75YFfhKc/VKpeuZ4WWGI/AAAAAAAACH0/i99LA56jLoc/s1600/09.%E8%A8%88%E6%95%B8%E5%99%A8%E9%9B%86%E5%90%88.png)](http://1.bp.blogspot.com/-Ryh75YFfhKc/VKpeuZ4WWGI/AAAAAAAACH0/i99LA56jLoc/s1600/09.%E8%A8%88%E6%95%B8%E5%99%A8%E9%9B%86%E5%90%88.png) 回合設定是設定執行次數或是持續時間 [!</description>
    </item>
    
    <item>
      <title>設定Web效能測試</title>
      <link>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9Aweb%E6%95%88%E8%83%BD%E6%B8%AC%E8%A9%A6/</link>
      <pubDate>Mon, 05 Jan 2015 16:58:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9Aweb%E6%95%88%E8%83%BD%E6%B8%AC%E8%A9%A6/</guid>
      <description>加入Web效能測試
[![](http://3.bp.blogspot.com/-99mTrr1aW0E/VKpRqk4NanI/AAAAAAAACFU/jtUa3AD_VSI/s1600/01.%E5%8A%A0%E5%85%A5Web%E6%95%88%E8%83%BD%E6%B8%AC%E8%A9%A6.png)](http://3.bp.blogspot.com/-99mTrr1aW0E/VKpRqk4NanI/AAAAAAAACFU/jtUa3AD_VSI/s1600/01.%E5%8A%A0%E5%85%A5Web%E6%95%88%E8%83%BD%E6%B8%AC%E8%A9%A6.png) 如果看到這個錯誤訊息，是IE瀏覽器的安全性設定造成的 [![](http://1.bp.blogspot.com/-84QcGZADseI/VKpRqofSrwI/AAAAAAAACFQ/JB1bFtf5hY8/s1600/02.%E9%8C%AF%E8%AA%A4%E8%A8%8A%E6%81%AF.png)](http://1.bp.blogspot.com/-84QcGZADseI/VKpRqofSrwI/AAAAAAAACFQ/JB1bFtf5hY8/s1600/02.%E9%8C%AF%E8%AA%A4%E8%A8%8A%E6%81%AF.png) 在伺服器管理員中，點擊設定IE ESC [![](http://1.bp.blogspot.com/-MZfXDAqyvBc/VKpRqs8nfgI/AAAAAAAACG0/tjBlcvf3Hjo/s1600/03.%E8%A8%AD%E5%AE%9AIPSEC.png)](http://1.bp.blogspot.com/-MZfXDAqyvBc/VKpRqs8nfgI/AAAAAAAACG0/tjBlcvf3Hjo/s1600/03.%E8%A8%AD%E5%AE%9AIPSEC.png) 把管理員關閉就行了 [![](http://1.bp.blogspot.com/-ZhlQ7fy2yiw/VKpRre9ss7I/AAAAAAAACFY/XkUO18Sq1uQ/s1600/04.%E9%97%9C%E9%96%89IEESC.png)](http://1.bp.blogspot.com/-ZhlQ7fy2yiw/VKpRre9ss7I/AAAAAAAACFY/XkUO18Sq1uQ/s1600/04.%E9%97%9C%E9%96%89IEESC.png) 在瀏覽器中就會看到錄製工具列 [![](http://1.bp.blogspot.com/-tzqsSLuwYJk/VKpRr5q0GRI/AAAAAAAACFo/W_mY-yuBNyw/s1600/05.%E5%95%9F%E5%8B%95%E9%8C%84%E8%A3%BD.png)](http://1.bp.blogspot.com/-tzqsSLuwYJk/VKpRr5q0GRI/AAAAAAAACFo/W_mY-yuBNyw/s1600/05.%E5%95%9F%E5%8B%95%E9%8C%84%E8%A3%BD.png) 在網址列隨便輸入網址，就會看到自動錄製操作 [![](http://3.bp.blogspot.com/-1EOx8cWF8GU/VKpRsNU-DRI/AAAAAAAACFk/rxeL1Zw64-A/s1600/06.%E9%8C%84%E8%A3%BD%E7%B6%B2%E7%AB%99.png)](http://3.bp.blogspot.com/-1EOx8cWF8GU/VKpRsNU-DRI/AAAAAAAACFk/rxeL1Zw64-A/s1600/06.%E9%8C%84%E8%A3%BD%E7%B6%B2%E7%AB%99.png) 按下停止錄制後，會把錄製的結果帶回Visual Studio 可以在已錄制的項目上按屬性來修改，也可以手動插入要求 [![](http://2.bp.blogspot.com/-PK4J7p0omYg/VKpRs3_SppI/AAAAAAAACFw/FGnJmsjXaYY/s1600/07.%E5%AE%8C%E6%88%90%E9%8C%84%E8%A3%BD.png)](http://2.bp.blogspot.com/-PK4J7p0omYg/VKpRs3_SppI/AAAAAAAACFw/FGnJmsjXaYY/s1600/07.%E5%AE%8C%E6%88%90%E9%8C%84%E8%A3%BD.png) 接下來介紹如果繫結資料，先準備一個XML檔案 [![](http://1.bp.blogspot.com/-0MH-lgCwCEY/VKpRtGpLDgI/AAAAAAAACF0/AFxHizxeqAg/s1600/09.%E5%8A%A0%E5%85%A5XML%E6%AA%94%E6%A1%88.png)](http://1.bp.blogspot.com/-0MH-lgCwCEY/VKpRtGpLDgI/AAAAAAAACF0/AFxHizxeqAg/s1600/09.%E5%8A%A0%E5%85%A5XML%E6%AA%94%E6%A1%88.png) 隨便輸入一些資料 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;customers&amp;gt; &amp;lt;customer account=&#34;aa&#34; /&amp;gt; &amp;lt;customer account=&#34;bb&#34; /&amp;gt; &amp;lt;customer account=&#34;cc&#34; /&amp;gt; &amp;lt;/customers&amp;gt;  點擊新增資料來源 [![](http://4.bp.blogspot.com/-QVj9WMnCJxI/VKpRtoT1jLI/AAAAAAAACF8/KoMtf1AGp6I/s1600/10.%E5%8A%A0%E5%85%A5%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90.png)](http://4.bp.blogspot.com/-QVj9WMnCJxI/VKpRtoT1jLI/AAAAAAAACF8/KoMtf1AGp6I/s1600/10.%E5%8A%A0%E5%85%A5%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90.png) 選擇剛準備的XML檔案，可以看到解析出來的資料 [![](http://1.bp.blogspot.com/-R9xhLdiaeNc/VKpRuL1mIMI/AAAAAAAACGA/709r1p509Rs/s1600/11.%E5%B0%8D%E6%87%89xml%E6%AA%94%E6%A1%88.png)](http://1.bp.blogspot.com/-R9xhLdiaeNc/VKpRuL1mIMI/AAAAAAAACGA/709r1p509Rs/s1600/11.%E5%B0%8D%E6%87%89xml%E6%AA%94%E6%A1%88.png) 選擇資料來源的資料表 [![](http://1.bp.blogspot.com/-LRgNR0Iac18/VKpRuk2t4mI/AAAAAAAACGI/E2q_aZ3mvk0/s1600/12.%E9%81%B8%E6%93%87%E8%B3%87%E6%96%99%E9%9B%86.png)](http://1.bp.blogspot.com/-LRgNR0Iac18/VKpRuk2t4mI/AAAAAAAACGI/E2q_aZ3mvk0/s1600/12.%E9%81%B8%E6%93%87%E8%B3%87%E6%96%99%E9%9B%86.png) 資料來源就新增成功了，另外可以設定資料來源的讀取方式 [![](http://1.bp.blogspot.com/-dI5zYtWc3ek/VKpRu4kXJzI/AAAAAAAACGQ/o1w-jfPVudY/s1600/13.%E6%AA%94%E6%A1%88%E8%AE%80%E5%8F%96%E6%96%B9%E5%BC%8F.png)](http://1.bp.blogspot.com/-dI5zYtWc3ek/VKpRu4kXJzI/AAAAAAAACGQ/o1w-jfPVudY/s1600/13.%E6%AA%94%E6%A1%88%E8%AE%80%E5%8F%96%E6%96%B9%E5%BC%8F.png) 在要繫結的項目上，直接選擇到要繫結的欄位就行了 [![](http://2.bp.blogspot.com/-BhdUQ0pU1t0/VKpRvdVVaHI/AAAAAAAACGU/SA1NC1Mn5wg/s1600/14.%E7%B9%AB%E7%B5%90%E8%B3%87%E6%96%99.png)](http://2.bp.blogspot.com/-BhdUQ0pU1t0/VKpRvdVVaHI/AAAAAAAACGU/SA1NC1Mn5wg/s1600/14.%E7%B9%AB%E7%B5%90%E8%B3%87%E6%96%99.png) 開始執行測試 [![](http://1.bp.blogspot.com/-n_xmXtdHKMw/VKpRv_19ZVI/AAAAAAAACGk/VdVv76xipmE/s1600/15.%E5%9F%B7%E8%A1%8C%E6%B8%AC%E8%A9%A6.png)](http://1.bp.blogspot.com/-n_xmXtdHKMw/VKpRv_19ZVI/AAAAAAAACGk/VdVv76xipmE/s1600/15.%E5%9F%B7%E8%A1%8C%E6%B8%AC%E8%A9%A6.png) 測試結果</description>
    </item>
    
    <item>
      <title>設定測試代理環境</title>
      <link>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9A%E6%B8%AC%E8%A9%A6%E4%BB%A3%E7%90%86%E7%92%B0%E5%A2%83/</link>
      <pubDate>Mon, 05 Jan 2015 16:14:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/%E8%A8%AD%E5%AE%9A%E6%B8%AC%E8%A9%A6%E4%BB%A3%E7%90%86%E7%92%B0%E5%A2%83/</guid>
      <description>先到官網下載安裝程式
[![](http://4.bp.blogspot.com/-ARtUNpImvZo/VKpEaChkYpI/AAAAAAAACDY/QVnvhoJNx6k/s1600/01.%E4%B8%8B%E8%BC%89Agent.png)](http://4.bp.blogspot.com/-ARtUNpImvZo/VKpEaChkYpI/AAAAAAAACDY/QVnvhoJNx6k/s1600/01.%E4%B8%8B%E8%BC%89Agent.png) 影像檔中包含Controller和Agent兩部份 [![](http://4.bp.blogspot.com/-Su7wbyt6LSA/VKpEZz3QNrI/AAAAAAAACDc/soomqXCK7Z4/s1600/02.%E5%85%89%E7%A2%9F%E5%85%A7%E5%AE%B9.png)](http://4.bp.blogspot.com/-Su7wbyt6LSA/VKpEZz3QNrI/AAAAAAAACDc/soomqXCK7Z4/s1600/02.%E5%85%89%E7%A2%9F%E5%85%A7%E5%AE%B9.png) 先安裝Controller [![](http://2.bp.blogspot.com/-u6McZDKKKBM/VKpEZ-dsQuI/AAAAAAAACDU/c1UI6D9MUIY/s1600/03.Ctl%E6%8E%88%E6%AC%8A%E6%A2%9D%E6%AC%BE.png)](http://2.bp.blogspot.com/-u6McZDKKKBM/VKpEZ-dsQuI/AAAAAAAACDU/c1UI6D9MUIY/s1600/03.Ctl%E6%8E%88%E6%AC%8A%E6%A2%9D%E6%AC%BE.png) 這裡的執行帳號需要有管理員權限，如果沒有網域的話，那可以在其他電腦上建立一組相同的帳號密碼並加入管理群組 [![](http://2.bp.blogspot.com/-mmPnjLYELDQ/VKpEbMxR0WI/AAAAAAAACDk/qZuLB5cfIzA/s1600/04.%E8%A8%AD%E5%AE%9ACtrl.png)](http://2.bp.blogspot.com/-mmPnjLYELDQ/VKpEbMxR0WI/AAAAAAAACDk/qZuLB5cfIzA/s1600/04.%E8%A8%AD%E5%AE%9ACtrl.png) Controller設定成功 [![](http://4.bp.blogspot.com/-KOiM_ZoQMrA/VKpEbXp3xHI/AAAAAAAACDw/hzsd6v1bfhw/s1600/05.%E8%A8%AD%E5%AE%9A%E7%B5%90%E6%9E%9C.png)](http://4.bp.blogspot.com/-KOiM_ZoQMrA/VKpEbXp3xHI/AAAAAAAACDw/hzsd6v1bfhw/s1600/05.%E8%A8%AD%E5%AE%9A%E7%B5%90%E6%9E%9C.png) 接下來安裝Agent [![](http://3.bp.blogspot.com/-IVJ_2cc7CkQ/VKpEbvOBOBI/AAAAAAAACDs/Xetiqv6gBgU/s1600/06.%E5%AE%89%E8%A3%9DAgent.png)](http://3.bp.blogspot.com/-IVJ_2cc7CkQ/VKpEbvOBOBI/AAAAAAAACDs/Xetiqv6gBgU/s1600/06.%E5%AE%89%E8%A3%9DAgent.png) 以服務啟動Agent [![](http://2.bp.blogspot.com/-7q4qudSTVwc/VKpEb9o_2ZI/AAAAAAAACD0/9XO5becMa7Q/s1600/07.%E4%BB%A3%E7%90%86%E8%A8%AD%E5%AE%9A.png)](http://2.bp.blogspot.com/-7q4qudSTVwc/VKpEb9o_2ZI/AAAAAAAACD0/9XO5becMa7Q/s1600/07.%E4%BB%A3%E7%90%86%E8%A8%AD%E5%AE%9A.png) Agent的帳號需可以連接到Controller的管理員權限 [![](http://2.bp.blogspot.com/-PnFGMsCsIqc/VKpEcS0HlWI/AAAAAAAACEM/rSNy48CCGIU/s1600/08.%E4%BB%A3%E7%90%86%E9%80%A3%E6%8E%A5%E8%A8%AD%E5%AE%9A.png)](http://2.bp.blogspot.com/-PnFGMsCsIqc/VKpEcS0HlWI/AAAAAAAACEM/rSNy48CCGIU/s1600/08.%E4%BB%A3%E7%90%86%E9%80%A3%E6%8E%A5%E8%A8%AD%E5%AE%9A.png) Agent設定成功 [![](http://2.bp.blogspot.com/-SkHjyoeMv6I/VKpEcvxOjiI/AAAAAAAACD8/6qgetFnFEAk/s1600/09.%E8%A8%AD%E5%AE%9A%E5%AE%8C%E6%88%90.png)](http://2.bp.blogspot.com/-SkHjyoeMv6I/VKpEcvxOjiI/AAAAAAAACD8/6qgetFnFEAk/s1600/09.%E8%A8%AD%E5%AE%9A%E5%AE%8C%E6%88%90.png) 建立一個Web效能和負載測試專案 [![](http://4.bp.blogspot.com/-8TJJYQX1-R8/VKpHfldditI/AAAAAAAACEg/vZckpPuMjBo/s1600/10.%E5%BB%BA%E7%AB%8B%E6%B8%AC%E8%A9%A6%E5%B0%88%E6%A1%88.png)](http://4.bp.blogspot.com/-8TJJYQX1-R8/VKpHfldditI/AAAAAAAACEg/vZckpPuMjBo/s1600/10.%E5%BB%BA%E7%AB%8B%E6%B8%AC%E8%A9%A6%E5%B0%88%E6%A1%88.png) 調整測試設定 [![](http://3.bp.blogspot.com/-lhy1jkciqMg/VKpHjps1UBI/AAAAAAAACEo/YdfYxTItywA/s1600/11.%E8%A8%AD%E5%AE%9A.png)](http://3.bp.blogspot.com/-lhy1jkciqMg/VKpHjps1UBI/AAAAAAAACEo/YdfYxTItywA/s1600/11.%E8%A8%AD%E5%AE%9A.png) 採用本機電腦或測試控器執行測試 [![](http://1.bp.blogspot.com/-z4gJ32JFxnE/VKpHmshfa5I/AAAAAAAACEw/ZFAPmgYGs-A/s1600/12.%E6%9C%AC%E6%A9%9F%E6%B8%AC%E8%A9%A6.png)](http://1.bp.blogspot.com/-z4gJ32JFxnE/VKpHmshfa5I/AAAAAAAACEw/ZFAPmgYGs-A/s1600/12.%E6%9C%AC%E6%A9%9F%E6%B8%AC%E8%A9%A6.png) 測試執行方法改用遠端執行，再管理測試控制器 [![](http://4.bp.blogspot.com/-XEADtblISeM/VKpHp6hLmsI/AAAAAAAACE4/lZykOHVPv38/s1600/13.%E8%A8%AD%E5%AE%9A%E6%8E%A7%E5%88%B6%E5%99%A8.png)](http://4.bp.blogspot.com/-XEADtblISeM/VKpHp6hLmsI/AAAAAAAACE4/lZykOHVPv38/s1600/13.%E8%A8%AD%E5%AE%9A%E6%8E%A7%E5%88%B6%E5%99%A8.png) 輸入控制器的位址，就可以看到所有Agent的狀態了 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 加入組建定義</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9/</link>
      <pubDate>Wed, 31 Dec 2014 19:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9/</guid>
      <description>打開Team Explorer，點擊組建
[![](http://2.bp.blogspot.com/-5pCfNH8CTkU/VKPYCjBRWoI/AAAAAAAACBc/7O1dWcBkRUw/s1600/01.%E5%8A%A0%E5%85%A5%E7%B5%84%E5%BB%BA.png)](http://2.bp.blogspot.com/-5pCfNH8CTkU/VKPYCjBRWoI/AAAAAAAACBc/7O1dWcBkRUw/s1600/01.%E5%8A%A0%E5%85%A5%E7%B5%84%E5%BB%BA.png) 新增組建定義 [![](http://4.bp.blogspot.com/-6xrdwLtukgg/VKPYCukG-sI/AAAAAAAACBY/SpsW1Y3Q-Ok/s1600/02.%E6%96%B0%E5%A2%9E%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9.png)](http://4.bp.blogspot.com/-6xrdwLtukgg/VKPYCukG-sI/AAAAAAAACBY/SpsW1Y3Q-Ok/s1600/02.%E6%96%B0%E5%A2%9E%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9.png) 組建定義名稱 [![](http://2.bp.blogspot.com/-Bllqjy9lwNs/VKPYKJN42sI/AAAAAAAACCw/92afSzDahf4/s1600/03.%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9%E5%90%8D%E7%A8%B1.png)](http://2.bp.blogspot.com/-Bllqjy9lwNs/VKPYKJN42sI/AAAAAAAACCw/92afSzDahf4/s1600/03.%E7%B5%84%E5%BB%BA%E5%AE%9A%E7%BE%A9%E5%90%8D%E7%A8%B1.png) 觸發程序用來設定何時執行這個建置 連續整合是每當程式碼簽入時就會觸發 累積簽入是設定至少多少時間才執行一次建置，用來避免頻繁簽入所造成的效能影響 閘道簽入是只有通過建置，才讓原始碼簽入，用來做建置條件的檢查 排程可以設定固定時間啟動建置 [![](http://1.bp.blogspot.com/-H5_6gnigVUU/VKPYDnW7MiI/AAAAAAAACBg/uRzajdqu5HI/s1600/04.%E8%A7%B8%E7%99%BC%E7%A8%8B%E5%BA%8F.png)](http://1.bp.blogspot.com/-H5_6gnigVUU/VKPYDnW7MiI/AAAAAAAACBg/uRzajdqu5HI/s1600/04.%E8%A7%B8%E7%99%BC%E7%A8%8B%E5%BA%8F.png) 來源設定用來設定原始碼從何而來 [![](http://4.bp.blogspot.com/-JwHAof2PoZY/VKPYEfu1L9I/AAAAAAAACBk/8qwgBZ5COJg/s1600/05.%E4%BE%86%E6%BA%90%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-JwHAof2PoZY/VKPYEfu1L9I/AAAAAAAACBk/8qwgBZ5COJg/s1600/05.%E4%BE%86%E6%BA%90%E8%A8%AD%E5%AE%9A.png) 組建預設值用來設定建置成功後的產品要輸出到什麼地方 [![](http://1.bp.blogspot.com/-tcu5d7h4QKc/VKPYEzSB7uI/AAAAAAAACBo/EADMiKvNxVs/s1600/06.%E7%B5%84%E5%BB%BA%E9%A0%90%E8%A8%AD%E5%80%BC.png)](http://1.bp.blogspot.com/-tcu5d7h4QKc/VKPYEzSB7uI/AAAAAAAACBo/EADMiKvNxVs/s1600/06.%E7%B5%84%E5%BB%BA%E9%A0%90%E8%A8%AD%E5%80%BC.png) 流程是用來設定建置的動作和細部的設定 [![](http://4.bp.blogspot.com/-QFoV7prmOIQ/VKPYFU7ZCBI/AAAAAAAACBs/xlRpNrBS9Yk/s1600/07.%E6%B5%81%E7%A8%8B.png)](http://4.bp.blogspot.com/-QFoV7prmOIQ/VKPYFU7ZCBI/AAAAAAAACBs/xlRpNrBS9Yk/s1600/07.%E6%B5%81%E7%A8%8B.png) 保留原則用來設定不同建置結果下是否要保留建置出來的產品 [![](http://4.bp.blogspot.com/-2OhX8zi3otQ/VKPYGMcgY1I/AAAAAAAACB0/UfuRSYk-VHs/s1600/08.%E4%BF%9D%E7%95%99%E5%8E%9F%E5%89%87.png)](http://4.bp.blogspot.com/-2OhX8zi3otQ/VKPYGMcgY1I/AAAAAAAACB0/UfuRSYk-VHs/s1600/08.%E4%BF%9D%E7%95%99%E5%8E%9F%E5%89%87.png) 設定好後按存檔就行了，在組建定義中就可以看到剛建立的組建定義 在上面按右鍵，選擇佇列新組建，就可以手動執行這個組建定義 [![](http://3.bp.blogspot.com/-9eXfenIcV3s/VKPYGYsKPSI/AAAAAAAACB4/Y_peIkvWLOQ/s1600/09.%E4%BD%87%E5%88%97%E6%96%B0%E7%B5%84%E5%BB%BA.png)](http://3.bp.blogspot.com/-9eXfenIcV3s/VKPYGYsKPSI/AAAAAAAACB4/Y_peIkvWLOQ/s1600/09.%E4%BD%87%E5%88%97%E6%96%B0%E7%B5%84%E5%BB%BA.png) 手動執行之前，可以設定一下這一次的組建的控制器和代理 [![](http://3.bp.blogspot.com/-gI0RbdwJnrI/VKPYG9_9PCI/AAAAAAAACB8/YyrgxRatotw/s1600/10.%E4%BD%87%E5%88%97%E8%A8%AD%E5%AE%9A.png)](http://3.bp.blogspot.com/-gI0RbdwJnrI/VKPYG9_9PCI/AAAAAAAACB8/YyrgxRatotw/s1600/10.%E4%BD%87%E5%88%97%E8%A8%AD%E5%AE%9A.png) 雙擊組建定義，可以叫出組建記錄 [![](http://2.bp.blogspot.com/-KGGDERK0x_A/VKPYHUmTOiI/AAAAAAAACCE/7rYyXdOsQ-I/s1600/11.%E4%BD%87%E5%88%97%E9%A0%85%E7%9B%AE.png)](http://2.bp.blogspot.com/-KGGDERK0x_A/VKPYHUmTOiI/AAAAAAAACCE/7rYyXdOsQ-I/s1600/11.%E4%BD%87%E5%88%97%E9%A0%85%E7%9B%AE.png) 雙擊組建記錄，可以看該次組建的結果 這次組建失敗，原因是少了Microsoft.WebApplication.targets [![](http://1.bp.blogspot.com/-7sYEMorvllg/VKPYH1TqzQI/AAAAAAAACCM/OveXOPeJ93w/s1600/12.%2B%E5%BB%BA%E7%BD%AE%E8%A8%8A%E6%81%AF.png)](http://1.bp.blogspot.com/-7sYEMorvllg/VKPYH1TqzQI/AAAAAAAACCM/OveXOPeJ93w/s1600/12.%2B%E5%BB%BA%E7%BD%AE%E8%A8%8A%E6%81%AF.png) 可以手動複製這個資料夾到組建伺服器上相同的位置 比較簡單的方式是安裝Visual Studio Shell轉散發套件 [![](http://4.bp.blogspot.com/-lOBgzNLC6Os/VKPYIbMM94I/AAAAAAAACCU/vYBfxTzTUhE/s1600/13.%E5%8A%A0%E5%85%A5Shell.png)](http://4.bp.blogspot.com/-lOBgzNLC6Os/VKPYIbMM94I/AAAAAAAACCU/vYBfxTzTUhE/s1600/13.%E5%8A%A0%E5%85%A5Shell.png) 就會有相關的檔案了 [![](http://3.bp.blogspot.com/-pzNYLUS1G9E/VKPYImLuIaI/AAAAAAAACCY/XbnEeEJgXak/s1600/14.%E5%8A%A0%E5%85%A5target.png)](http://3.bp.blogspot.com/-pzNYLUS1G9E/VKPYImLuIaI/AAAAAAAACCY/XbnEeEJgXak/s1600/14.%E5%8A%A0%E5%85%A5target.png) 再執行一次就建置成功了 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 加入Build Service</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5build-service/</link>
      <pubDate>Wed, 31 Dec 2014 18:01:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5build-service/</guid>
      <description>開啟Team Foundation Server 管理主控台，選擇組建組態
[![](http://2.bp.blogspot.com/-bn_xJJbIX0o/VKPI-TH9Y9I/AAAAAAAAB_s/VRanOZS4e2I/s1600/01.%E9%81%B8%E6%93%87%E7%B5%84%E5%BB%BA%E7%B5%84%E6%85%8B.png)](http://2.bp.blogspot.com/-bn_xJJbIX0o/VKPI-TH9Y9I/AAAAAAAAB_s/VRanOZS4e2I/s1600/01.%E9%81%B8%E6%93%87%E7%B5%84%E5%BB%BA%E7%B5%84%E6%85%8B.png) 選擇設定Team Foundation Build Service [![](http://1.bp.blogspot.com/-5Jk7w3534t8/VKPI-caW41I/AAAAAAAAB_o/GzjU1TvaHcY/s1600/02.%E8%A8%AD%E5%AE%9ABuild%2BService.png)](http://1.bp.blogspot.com/-5Jk7w3534t8/VKPI-caW41I/AAAAAAAAB_o/GzjU1TvaHcY/s1600/02.%E8%A8%AD%E5%AE%9ABuild%2BService.png) 啟動組建服務組態精靈 [![](http://1.bp.blogspot.com/-ZLND94T2DIM/VKPI-Y9-DAI/AAAAAAAAB_w/WVTztx_TtK0/s1600/03.%E7%B5%84%E6%85%8B%E7%B2%BE%E9%9D%88.png)](http://1.bp.blogspot.com/-ZLND94T2DIM/VKPI-Y9-DAI/AAAAAAAAB_w/WVTztx_TtK0/s1600/03.%E7%B5%84%E6%85%8B%E7%B2%BE%E9%9D%88.png) 選擇專案集合 [![](http://1.bp.blogspot.com/-9_djwfA6j2o/VKPI_JBnPBI/AAAAAAAAB_0/AVizkdJRFvg/s1600/04.%E9%81%B8%E5%8F%96Team%E5%B0%88%E6%A1%88%E9%9B%86%E5%90%88.png)](http://1.bp.blogspot.com/-9_djwfA6j2o/VKPI_JBnPBI/AAAAAAAAB_0/AVizkdJRFvg/s1600/04.%E9%81%B8%E5%8F%96Team%E5%B0%88%E6%A1%88%E9%9B%86%E5%90%88.png) 設定組建服務，代理程式數目通常和CPU數量一樣 [![](http://3.bp.blogspot.com/-9Ys8UsgCF8s/VKPI_tjbzRI/AAAAAAAAB_8/-bJRA36ED0o/s1600/05.%E7%B5%84%E5%BB%BA%E6%9C%8D%E5%8B%99.png)](http://3.bp.blogspot.com/-9Ys8UsgCF8s/VKPI_tjbzRI/AAAAAAAAB_8/-bJRA36ED0o/s1600/05.%E7%B5%84%E5%BB%BA%E6%9C%8D%E5%8B%99.png) 設定要執行組態服務的帳號 [![](http://4.bp.blogspot.com/-T9jqRvc72aY/VKPI_1Yu8AI/AAAAAAAACBE/LsUpJY-u1_I/s1600/06.%E5%9F%B7%E8%A1%8C%E5%B8%B3%E8%99%9F.png)](http://4.bp.blogspot.com/-T9jqRvc72aY/VKPI_1Yu8AI/AAAAAAAACBE/LsUpJY-u1_I/s1600/06.%E5%9F%B7%E8%A1%8C%E5%B8%B3%E8%99%9F.png) 確認組態是否正確 [![](http://3.bp.blogspot.com/-xPq3XtvO1e4/VKPJADCKs0I/AAAAAAAACAA/fT9AixdrdLM/s1600/07.%E7%B5%84%E6%85%8B%E7%A2%BA%E8%AA%8D.png)](http://3.bp.blogspot.com/-xPq3XtvO1e4/VKPJADCKs0I/AAAAAAAACAA/fT9AixdrdLM/s1600/07.%E7%B5%84%E6%85%8B%E7%A2%BA%E8%AA%8D.png) 檢查組態是否正確 [![](http://2.bp.blogspot.com/-5dE7y0l529w/VKPJAo3H3mI/AAAAAAAACAI/RHeMks_WU20/s1600/08.%E6%AA%A2%E6%9F%A5%E7%B5%84%E6%85%8B.png)](http://2.bp.blogspot.com/-5dE7y0l529w/VKPJAo3H3mI/AAAAAAAACAI/RHeMks_WU20/s1600/08.%E6%AA%A2%E6%9F%A5%E7%B5%84%E6%85%8B.png) 組態設定成功 [![](http://1.bp.blogspot.com/-mhnvBntQNpw/VKPJA7rVIGI/AAAAAAAACAM/_n2oSjijuTs/s1600/09.%E8%A8%AD%E5%AE%9A%E5%AE%8C%E6%88%90.png)](http://1.bp.blogspot.com/-mhnvBntQNpw/VKPJA7rVIGI/AAAAAAAACAM/_n2oSjijuTs/s1600/09.%E8%A8%AD%E5%AE%9A%E5%AE%8C%E6%88%90.png) 組態設定結果，加入防火牆例外 TCP 9191 [![](http://2.bp.blogspot.com/-dtm9evu7GcA/VKPJBka-GDI/AAAAAAAACAU/0QgwRZ4_Ufk/s1600/10.%E5%AE%8C%E6%88%90%E7%95%AB%E9%9D%A2.png)](http://2.bp.blogspot.com/-dtm9evu7GcA/VKPJBka-GDI/AAAAAAAACAU/0QgwRZ4_Ufk/s1600/10.%E5%AE%8C%E6%88%90%E7%95%AB%E9%9D%A2.png) 設定代理程式的屬性 [![](http://4.bp.blogspot.com/-7MHdrKb88uA/VKPJBy4iXoI/AAAAAAAACAY/HFhNjJcuMeo/s1600/11.%E7%B5%84%E5%BB%BA%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-7MHdrKb88uA/VKPJBy4iXoI/AAAAAAAACAY/HFhNjJcuMeo/s1600/11.%E7%B5%84%E5%BB%BA%E8%A8%AD%E5%AE%9A.png) 自訂工作目錄 [![](http://1.bp.blogspot.com/-yqwpIB8tGoA/VKPJCUZNcbI/AAAAAAAACAg/Tm5Or60Y1Kg/s1600/12.%E8%AE%8A%E6%9B%B4%E8%B7%AF%E5%BE%91.png)](http://1.bp.blogspot.com/-yqwpIB8tGoA/VKPJCUZNcbI/AAAAAAAACAg/Tm5Or60Y1Kg/s1600/12.%E8%AE%8A%E6%9B%B4%E8%B7%AF%E5%BE%91.png) 執行組態的時後，就會在指定的工作目錄作業 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 加入工作項目</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5%E5%B7%A5%E4%BD%9C%E9%A0%85%E7%9B%AE/</link>
      <pubDate>Wed, 31 Dec 2014 16:59:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E5%8A%A0%E5%85%A5%E5%B7%A5%E4%BD%9C%E9%A0%85%E7%9B%AE/</guid>
      <description>先登入Team Foundation Server Web入口網站
[![](http://2.bp.blogspot.com/-nANf2wD-WVk/VKO6IxaI5bI/AAAAAAAAB8w/eEx6DOfC4tQ/s1600/01.%E5%85%A5%E5%8F%A3%E7%B6%B2%E7%AB%99.png)](http://2.bp.blogspot.com/-nANf2wD-WVk/VKO6IxaI5bI/AAAAAAAAB8w/eEx6DOfC4tQ/s1600/01.%E5%85%A5%E5%8F%A3%E7%B6%B2%E7%AB%99.png) 輸入帳號密碼 [![](http://2.bp.blogspot.com/--0xmFMjQpNM/VKO6I3BuMkI/AAAAAAAAB8o/civ9RfVlL4I/s1600/02.%E8%BC%B8%E5%85%A5%E5%B8%B3%E5%AF%86.png)](http://2.bp.blogspot.com/--0xmFMjQpNM/VKO6I3BuMkI/AAAAAAAAB8o/civ9RfVlL4I/s1600/02.%E8%BC%B8%E5%85%A5%E5%B8%B3%E5%AF%86.png) 首頁可以看到所有專案的訊息，如果沒看到的話，可以點擊瀏覽來尋找 [![](http://3.bp.blogspot.com/-Gkwbc522ki8/VKO6I9cc8LI/AAAAAAAAB8s/fNNRErPjFGk/s1600/03.%E7%B6%B2%E7%AB%99%E9%A6%96%E9%A0%81.png)](http://3.bp.blogspot.com/-Gkwbc522ki8/VKO6I9cc8LI/AAAAAAAAB8s/fNNRErPjFGk/s1600/03.%E7%B6%B2%E7%AB%99%E9%A6%96%E9%A0%81.png) 選擇剛建立用來練習的專案 [![](http://3.bp.blogspot.com/-S8yCBrhUO8Q/VKO6RUWbeWI/AAAAAAAAB-Y/Ps5PbWSCA3w/s1600/04.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-S8yCBrhUO8Q/VKO6RUWbeWI/AAAAAAAAB-Y/Ps5PbWSCA3w/s1600/04.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88.png) 切換到專案的首頁會發現有一個警示訊息，那是存取層級不夠的原因，點右上角的齒輪到專案的設定頁 [![](http://2.bp.blogspot.com/-Mk4oBdsIa-Q/VKO6KFlV3XI/AAAAAAAAB80/KK8WbxRF5cg/s1600/05.%E5%B0%88%E6%A1%88%E9%A6%96%E9%A0%81.png)](http://2.bp.blogspot.com/-Mk4oBdsIa-Q/VKO6KFlV3XI/AAAAAAAAB80/KK8WbxRF5cg/s1600/05.%E5%B0%88%E6%A1%88%E9%A6%96%E9%A0%81.png) 如果專案有要分小組別的話，可以在這裡新增，會對應到區域中的子群組 [![](http://1.bp.blogspot.com/-TxLCyXQjaf4/VKO6KpQQoHI/AAAAAAAAB9A/-pV4buqrgZg/s1600/06.%E5%B0%88%E6%A1%88%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E9%A6%96%E9%A0%81.png)](http://1.bp.blogspot.com/-TxLCyXQjaf4/VKO6KpQQoHI/AAAAAAAAB9A/-pV4buqrgZg/s1600/06.%E5%B0%88%E6%A1%88%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%E9%A6%96%E9%A0%81.png) 先來設定Sprint的週期 [![](http://1.bp.blogspot.com/-RpN8r0isUUI/VKO6LDms9MI/AAAAAAAAB9E/2QUJz2FkBow/s1600/07.Sprint%E6%97%A5%E6%9C%9F.png)](http://1.bp.blogspot.com/-RpN8r0isUUI/VKO6LDms9MI/AAAAAAAAB9E/2QUJz2FkBow/s1600/07.Sprint%E6%97%A5%E6%9C%9F.png) 接下來點左上方的控制項面版，切換到系統的設定頁 [![](http://3.bp.blogspot.com/-IpM5YAnlCt0/VKO6LvU3UaI/AAAAAAAAB9I/k4MikF0L-Ec/s1600/08.Sprint.png)](http://3.bp.blogspot.com/-IpM5YAnlCt0/VKO6LvU3UaI/AAAAAAAAB9I/k4MikF0L-Ec/s1600/08.Sprint.png) 在存取層級項目中的進階，加入帳號 [![](http://2.bp.blogspot.com/-xzd9sg85rSU/VKO6MMvHQsI/AAAAAAAAB9Q/Am5cbyGNL8E/s1600/09.%E5%8A%A0%E5%85%A5%E9%80%B2%E9%9A%8E%E6%8E%A7%E5%88%B6.png)](http://2.bp.blogspot.com/-xzd9sg85rSU/VKO6MMvHQsI/AAAAAAAAB9Q/Am5cbyGNL8E/s1600/09.%E5%8A%A0%E5%85%A5%E9%80%B2%E9%9A%8E%E6%8E%A7%E5%88%B6.png) 回到專案的首頁，就不會有警示訊息了，接下來點工作開始新增工作項目 [![](http://3.bp.blogspot.com/-5J4bHzdVxJE/VKO6MWSEv6I/AAAAAAAAB9U/kCF68cvtOE0/s1600/10.%E5%B0%88%E6%A1%88%E9%A6%96%E9%A0%81.png)](http://3.bp.blogspot.com/-5J4bHzdVxJE/VKO6MWSEv6I/AAAAAAAAB9U/kCF68cvtOE0/s1600/10.%E5%B0%88%E6%A1%88%E9%A6%96%E9%A0%81.png) 先新增功能，直接輸入後按Enter就行了 [![](http://2.bp.blogspot.com/-z0NmDgcOSw4/VKO6M61zmXI/AAAAAAAAB9c/aTV8b0tOJRA/s1600/11.%E5%8A%A0%E5%85%A5%E5%8A%9F%E8%83%BD.png)](http://2.bp.blogspot.com/-z0NmDgcOSw4/VKO6M61zmXI/AAAAAAAAB9c/aTV8b0tOJRA/s1600/11.%E5%8A%A0%E5%85%A5%E5%8A%9F%E8%83%BD.png) 如果要修改詳細內容的話，在項目上點兩下就行了 [![](http://4.bp.blogspot.com/-Ub88qBL9WuQ/VKO6Nbl2sgI/AAAAAAAAB9g/EgVvuBTHBDA/s1600/12.%E5%8A%9F%E8%83%BD%E8%A9%B3%E7%B4%B0%E8%B3%87%E6%96%99.png)](http://4.bp.blogspot.com/-Ub88qBL9WuQ/VKO6Nbl2sgI/AAAAAAAAB9g/EgVvuBTHBDA/s1600/12.%E5%8A%9F%E8%83%BD%E8%A9%B3%E7%B4%B0%E8%B3%87%E6%96%99.png) 接下來新增待處理項目，右上方有一個對應，目前是關閉狀態，點一下就會切換到開始狀態 [![](http://4.bp.blogspot.com/-r5PAsf9KDzk/VKO6N7XnjPI/AAAAAAAAB9s/3S5-LU8NBRU/s1600/13.Backlog%E9%A0%85%E7%9B%AE.png)](http://4.bp.blogspot.com/-r5PAsf9KDzk/VKO6N7XnjPI/AAAAAAAAB9s/3S5-LU8NBRU/s1600/13.Backlog%E9%A0%85%E7%9B%AE.png) 右方就會出現剛輸入的功能，用滑鼠把待處理項目拖曳上去就對應好了 [![](http://2.bp.blogspot.com/-mzPumMA2z3Q/VKO6OG9j4vI/AAAAAAAAB9w/Hu0dZpa-XVA/s1600/14.%E5%B0%8D%E6%87%89%E5%8A%9F%E8%83%BD.png)](http://2.bp.blogspot.com/-mzPumMA2z3Q/VKO6OG9j4vI/AAAAAAAAB9w/Hu0dZpa-XVA/s1600/14.%E5%B0%8D%E6%87%89%E5%8A%9F%E8%83%BD.png) 也可以把待處理項目拖曳到左方的Sprint上 [![](http://1.bp.blogspot.com/-SwhX0iHizU4/VKO6Oq6NXNI/AAAAAAAAB90/bpuoZtS4pl0/s1600/15.%E5%8A%9F%E8%83%BD%E5%B0%8D%E6%87%89%E5%88%B0Sprint.png)](http://1.bp.blogspot.com/-SwhX0iHizU4/VKO6Oq6NXNI/AAAAAAAAB90/bpuoZtS4pl0/s1600/15.%E5%8A%9F%E8%83%BD%E5%B0%8D%E6%87%89%E5%88%B0Sprint.png) 在面板中可以用滑鼠拖曳切換待處理項目的狀態 [![](http://3.bp.blogspot.com/-QsLEBLxOf7w/VKO6PIDfq9I/AAAAAAAAB94/fEdqCSF2jhU/s1600/16.%E5%8A%9F%E8%83%BD%E9%9D%A2%E7%89%88.png)](http://3.bp.blogspot.com/-QsLEBLxOf7w/VKO6PIDfq9I/AAAAAAAAB94/fEdqCSF2jhU/s1600/16.%E5%8A%9F%E8%83%BD%E9%9D%A2%E7%89%88.png) 切換到Sprint上，可以新增該處理項目的工作 [![](http://3.bp.blogspot.com/-GHOPWL4-AWc/VKO6P51Eq-I/AAAAAAAAB-A/aGHsRQ242gM/s1600/17.Sprint%E9%9D%A2%E7%89%88.png)](http://3.bp.blogspot.com/-GHOPWL4-AWc/VKO6P51Eq-I/AAAAAAAAB-A/aGHsRQ242gM/s1600/17.Sprint%E9%9D%A2%E7%89%88.png) 新增工作的時後，可以指派給某人，和輸入預計的工時 [![](http://3.bp.blogspot.com/-yzejSSMjKfU/VKO6QEaVjUI/AAAAAAAAB-E/OaFh7YOhLww/s1600/18.Task%E8%A9%B3%E7%B4%B0%E8%B3%87%E6%96%99.png)](http://3.bp.blogspot.com/-yzejSSMjKfU/VKO6QEaVjUI/AAAAAAAAB-E/OaFh7YOhLww/s1600/18.Task%E8%A9%B3%E7%B4%B0%E8%B3%87%E6%96%99.png) 工作面板一樣可以拖曳來改變工作的狀態 [![](http://4.bp.blogspot.com/-bHS4imm7tVo/VKO6Qk0sHOI/AAAAAAAAB-I/u3ZAowHkkkQ/s1600/19.Task%E9%9D%A2%E7%89%88.png)](http://4.bp.blogspot.com/-bHS4imm7tVo/VKO6Qk0sHOI/AAAAAAAAB-I/u3ZAowHkkkQ/s1600/19.Task%E9%9D%A2%E7%89%88.png) 在產能面板中，可以設定小組成員的工作時數和休息日 [![](http://1.bp.blogspot.com/-QdCB0zVJOOA/VKPA5CN57TI/AAAAAAAAB_M/tmzGkn5Fvyw/s1600/20.%E7%94%A2%E8%83%BD.png)](http://1.bp.blogspot.com/-QdCB0zVJOOA/VKPA5CN57TI/AAAAAAAAB_M/tmzGkn5Fvyw/s1600/20.%E7%94%A2%E8%83%BD.png) 更新之後在待處理項目中，開啟工作詳細資料，可以用滑鼠拖曳的方式，把工作對應給指定的小組成員 [![](http://1.bp.blogspot.com/-ncQP9p_-Kg0/VKPA5HJbo4I/AAAAAAAAB_Q/uwOiHknIF_Y/s1600/21.%E5%B7%A5%E4%BD%9C%E5%88%86%E9%85%8D.png)](http://1.bp.blogspot.com/-ncQP9p_-Kg0/VKPA5HJbo4I/AAAAAAAAB_Q/uwOiHknIF_Y/s1600/21.%E5%B7%A5%E4%BD%9C%E5%88%86%E9%85%8D.png) 在工作面版中，也可以用小組成員來分群組顯示狀態 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 刪除專案</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E5%88%AA%E9%99%A4%E5%B0%88%E6%A1%88/</link>
      <pubDate>Wed, 31 Dec 2014 15:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E5%88%AA%E9%99%A4%E5%B0%88%E6%A1%88/</guid>
      <description>刪除專案要到Team Foundation Server管理主控台 選擇要刪除的專案後按下刪除
[![](http://2.bp.blogspot.com/-UeVwcshAiD4/VKOqlrYU43I/AAAAAAAAB8U/479h7nVvjeY/s1600/01.%E7%AE%A1%E7%90%86%E4%B8%BB%E6%8E%A7%E5%8F%B0.png)](http://2.bp.blogspot.com/-UeVwcshAiD4/VKOqlrYU43I/AAAAAAAAB8U/479h7nVvjeY/s1600/01.%E7%AE%A1%E7%90%86%E4%B8%BB%E6%8E%A7%E5%8F%B0.png) 確認刪除選項後按下刪除即可 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 連接專案</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E9%80%A3%E6%8E%A5%E5%B0%88%E6%A1%88/</link>
      <pubDate>Wed, 31 Dec 2014 15:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E9%80%A3%E6%8E%A5%E5%B0%88%E6%A1%88/</guid>
      <description>專案建立好後，接下要來連接專案 一樣打開Team Explorer，在要連接的專案上點兩下，或是右鍵選連接
[![](http://1.bp.blogspot.com/-a9vJ76C25Ns/VKOn9_LUnTI/AAAAAAAAB6E/V_LZni0WmnA/s1600/14.%E9%80%A3%E6%8E%A5%E5%B0%88%E6%A1%88.png)](http://1.bp.blogspot.com/-a9vJ76C25Ns/VKOn9_LUnTI/AAAAAAAAB6E/V_LZni0WmnA/s1600/14.%E9%80%A3%E6%8E%A5%E5%B0%88%E6%A1%88.png) 接下來會提示Clone專案回本機 [![](http://4.bp.blogspot.com/-800L6rV2ZWY/VKOn-GwySMI/AAAAAAAAB6A/0PlrAbs82hc/s1600/15.%E8%A4%87%E8%A3%BD%E5%B0%88%E6%A1%88.png)](http://4.bp.blogspot.com/-800L6rV2ZWY/VKOn-GwySMI/AAAAAAAAB6A/0PlrAbs82hc/s1600/15.%E8%A4%87%E8%A3%BD%E5%B0%88%E6%A1%88.png) 選擇本機的位置 [![](http://2.bp.blogspot.com/-07X9j-Y0WVc/VKOn99X2JJI/AAAAAAAAB58/fwHR-Ob9iKw/s1600/16.%E9%81%B8%E6%93%87%E8%B7%AF%E5%BE%91.png)](http://2.bp.blogspot.com/-07X9j-Y0WVc/VKOn99X2JJI/AAAAAAAAB58/fwHR-Ob9iKw/s1600/16.%E9%81%B8%E6%93%87%E8%B7%AF%E5%BE%91.png) 成功把專案的原始碼Clone到本機，接下來設定一下專案的忽略列表，按一下設定 [![](http://1.bp.blogspot.com/-yJ_vsQryzCU/VKOn-yikLDI/AAAAAAAAB6M/UrA1gWfaPHQ/s1600/17.%E6%88%90%E5%8A%9F%E8%A4%87%E8%A3%BD.png)](http://1.bp.blogspot.com/-yJ_vsQryzCU/VKOn-yikLDI/AAAAAAAAB6M/UrA1gWfaPHQ/s1600/17.%E6%88%90%E5%8A%9F%E8%A4%87%E8%A3%BD.png) 點擊Git選項下的儲存機制設定 [![](http://3.bp.blogspot.com/-sVkH3gwpuL8/VKOoGQ0Z4JI/AAAAAAAAB7w/7Bniy6UZ1AI/s1600/18.%E6%8C%89%E4%B8%8B%E8%A8%AD%E5%AE%9A.png)](http://3.bp.blogspot.com/-sVkH3gwpuL8/VKOoGQ0Z4JI/AAAAAAAAB7w/7Bniy6UZ1AI/s1600/18.%E6%8C%89%E4%B8%8B%E8%A8%AD%E5%AE%9A.png) 加入.gitignore和.gitattributes [![](http://3.bp.blogspot.com/-6amZuKFW_ew/VKOn_SVIWmI/AAAAAAAAB6Q/-9uhxfNBeGk/s1600/19.%E5%8A%A0%E5%85%A5ignore.png)](http://3.bp.blogspot.com/-6amZuKFW_ew/VKOn_SVIWmI/AAAAAAAAB6Q/-9uhxfNBeGk/s1600/19.%E5%8A%A0%E5%85%A5ignore.png) 回到專案首頁，按一下變更 [![](http://1.bp.blogspot.com/-y0FGncrJ2rQ/VKOn_43UmgI/AAAAAAAAB6k/kj9ft9bCGj8/s1600/20.%E8%AE%8A%E6%9B%B4.png)](http://1.bp.blogspot.com/-y0FGncrJ2rQ/VKOn_43UmgI/AAAAAAAAB6k/kj9ft9bCGj8/s1600/20.%E8%AE%8A%E6%9B%B4.png) 輸入送交的訊息後按認可 [![](http://3.bp.blogspot.com/-OTARWR1_VOg/VKOoABni8uI/AAAAAAAAB6g/nJtCeDvMxUU/s1600/21.%E8%AE%8A%E6%9B%B4%E8%A8%8A%E6%81%AF.png)](http://3.bp.blogspot.com/-OTARWR1_VOg/VKOoABni8uI/AAAAAAAAB6g/nJtCeDvMxUU/s1600/21.%E8%AE%8A%E6%9B%B4%E8%A8%8A%E6%81%AF.png) 送交成功，按一下首頁回到專案首頁 [![](http://1.bp.blogspot.com/-NGI_HV-4GJk/VKOoBtDXGUI/AAAAAAAAB6o/O3prJ5cZTPw/s1600/22.%E9%80%81%E4%BA%A4%E6%88%90%E5%8A%9F.png)](http://1.bp.blogspot.com/-NGI_HV-4GJk/VKOoBtDXGUI/AAAAAAAAB6o/O3prJ5cZTPw/s1600/22.%E9%80%81%E4%BA%A4%E6%88%90%E5%8A%9F.png) 點擊方案下的新增 [![](http://4.bp.blogspot.com/-oes7DjaaRck/VKOoCGIQyDI/AAAAAAAAB6w/cbFzNVWLiWo/s1600/23.%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88.png)](http://4.bp.blogspot.com/-oes7DjaaRck/VKOoCGIQyDI/AAAAAAAAB6w/cbFzNVWLiWo/s1600/23.%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88.png) 簡單建立一個Web專案 [![](http://2.bp.blogspot.com/-coRe1JLk1AY/VKOoCSlWBJI/AAAAAAAAB64/rVBWXXDE8gg/s1600/24.%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-coRe1JLk1AY/VKOoCSlWBJI/AAAAAAAAB64/rVBWXXDE8gg/s1600/24.%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88.png) 選擇MVC專案 [![](http://4.bp.blogspot.com/-I2S0PaViJLM/VKOoC0Xti3I/AAAAAAAAB7A/_gl_QXQvcG0/s1600/25.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png)](http://4.bp.blogspot.com/-I2S0PaViJLM/VKOoC0Xti3I/AAAAAAAAB7A/_gl_QXQvcG0/s1600/25.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png) 新增成功後可以在專案的首頁看到新增的方案，點一下變更送交剛的異動 [![](http://4.bp.blogspot.com/-HPsH5n59aT4/VKOoDOcqqgI/AAAAAAAAB7E/g52D1YcJ3O4/s1600/26.%E9%81%B8%E6%93%87%E8%AE%8A%E6%9B%B4.png)](http://4.bp.blogspot.com/-HPsH5n59aT4/VKOoDOcqqgI/AAAAAAAAB7E/g52D1YcJ3O4/s1600/26.%E9%81%B8%E6%93%87%E8%AE%8A%E6%9B%B4.png) 檢查一下要送交的項目，輸入這次送交的訊息後按下認可 [![](http://4.bp.blogspot.com/-pCbSBSIL2E8/VKOoDvgdv8I/AAAAAAAAB7I/NykGBv85QCM/s1600/27.%E5%8A%A0%E5%85%A5%E6%96%B9%E6%A1%88.png)](http://4.bp.blogspot.com/-pCbSBSIL2E8/VKOoDvgdv8I/AAAAAAAAB7I/NykGBv85QCM/s1600/27.%E5%8A%A0%E5%85%A5%E6%96%B9%E6%A1%88.png) 送交成功，接下來要把剛送交的兩個異動，同步到伺服器去，按下同步處理 [![](http://1.bp.blogspot.com/-1Dt2CQ7eVjw/VKOoEMGq-2I/AAAAAAAAB7Q/YzOxHmPWyPk/s1600/28.%E9%80%81%E4%BA%A4%E6%88%90%E5%8A%9F%E9%BB%9E%E9%81%B8%E5%90%8C%E6%AD%A5%E4%BD%9C%E6%A5%AD.png)](http://1.bp.blogspot.com/-1Dt2CQ7eVjw/VKOoEMGq-2I/AAAAAAAAB7Q/YzOxHmPWyPk/s1600/28.%E9%80%81%E4%BA%A4%E6%88%90%E5%8A%9F%E9%BB%9E%E9%81%B8%E5%90%8C%E6%AD%A5%E4%BD%9C%E6%A5%AD.png) 可以看到尚未同步的伺服器的兩個認可，按下同步處理 [![](http://4.bp.blogspot.com/-bfk-FY7t7iA/VKOoETLr9DI/AAAAAAAAB7U/VfwRjQrmmeE/s1600/29.%E5%90%8C%E6%AD%A5%E8%99%95%E7%90%86.png)](http://4.bp.blogspot.com/-bfk-FY7t7iA/VKOoETLr9DI/AAAAAAAAB7U/VfwRjQrmmeE/s1600/29.%E5%90%8C%E6%AD%A5%E8%99%95%E7%90%86.png) 輸入帳號密碼 [![](http://1.bp.blogspot.com/-kpCjv7bTtT0/VKOoE0AmDZI/AAAAAAAAB7c/btI4aVSL6q0/s1600/30.%E8%BC%B8%E5%85%A5%E5%B8%B3%E5%AF%86.png)](http://1.bp.blogspot.com/-kpCjv7bTtT0/VKOoE0AmDZI/AAAAAAAAB7c/btI4aVSL6q0/s1600/30.%E8%BC%B8%E5%85%A5%E5%B8%B3%E5%AF%86.png) 同步處理成功 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 新增專案</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88/</link>
      <pubDate>Wed, 31 Dec 2014 15:17:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88/</guid>
      <description>建立好Team Foundation Server之後，接下來開始新增專案 打開Visual Studio的Team Explorer
[![](http://2.bp.blogspot.com/-dhMw2AzYVkI/VKOiTfejvjI/AAAAAAAAB4Q/VQfo1S8x8vk/s1600/01.TeamExplorer.png)](http://2.bp.blogspot.com/-dhMw2AzYVkI/VKOiTfejvjI/AAAAAAAAB4Q/VQfo1S8x8vk/s1600/01.TeamExplorer.png) 點擊「選取Team專案」 [![](http://2.bp.blogspot.com/-ixhipaMhyoA/VKOiTIgMOdI/AAAAAAAAB4M/B_yD2HlpVdU/s1600/02.%E9%81%B8%E5%8F%96%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-ixhipaMhyoA/VKOiTIgMOdI/AAAAAAAAB4M/B_yD2HlpVdU/s1600/02.%E9%81%B8%E5%8F%96%E5%B0%88%E6%A1%88.png) 先設定伺服器位置 [![](http://4.bp.blogspot.com/-x71B0jA5q58/VKOiapALfqI/AAAAAAAAB5s/6nEBW63HpdI/s1600/03.%E9%81%B8%E6%93%87%E4%BC%BA%E6%9C%8D%E5%99%A8.png)](http://4.bp.blogspot.com/-x71B0jA5q58/VKOiapALfqI/AAAAAAAAB5s/6nEBW63HpdI/s1600/03.%E9%81%B8%E6%93%87%E4%BC%BA%E6%9C%8D%E5%99%A8.png) 點擊加入 [![](http://2.bp.blogspot.com/-5n3B5Bom4cw/VKOiUNgeVVI/AAAAAAAAB4U/PXe5mvh7aps/s1600/04.%E5%8A%A0%E5%85%A5%E4%BC%BA%E6%9C%8D%E5%99%A8.png)](http://2.bp.blogspot.com/-5n3B5Bom4cw/VKOiUNgeVVI/AAAAAAAAB4U/PXe5mvh7aps/s1600/04.%E5%8A%A0%E5%85%A5%E4%BC%BA%E6%9C%8D%E5%99%A8.png) 輸入伺服器位址 [![](http://2.bp.blogspot.com/-USV9-dtUuH4/VKOiU-sTxVI/AAAAAAAAB4c/-kjiUr6nrpA/s1600/05.%E8%BC%B8%E5%85%A5%E4%BC%BA%E6%9C%8D%E5%99%A8%E8%B3%87%E6%96%99.png)](http://2.bp.blogspot.com/-USV9-dtUuH4/VKOiU-sTxVI/AAAAAAAAB4c/-kjiUr6nrpA/s1600/05.%E8%BC%B8%E5%85%A5%E4%BC%BA%E6%9C%8D%E5%99%A8%E8%B3%87%E6%96%99.png) 選擇專案集合 [![](http://1.bp.blogspot.com/-pj7EkZujC2c/VKOiVBtI_7I/AAAAAAAAB4k/pfFbi7bQZtE/s1600/06.%E9%A0%90%E8%A8%AD%E9%9B%86%E5%90%88.png)](http://1.bp.blogspot.com/-pj7EkZujC2c/VKOiVBtI_7I/AAAAAAAAB4k/pfFbi7bQZtE/s1600/06.%E9%A0%90%E8%A8%AD%E9%9B%86%E5%90%88.png) 點擊「建立Team專案」 [![](http://1.bp.blogspot.com/-oV1HZmhY_LU/VKOiVR0TS_I/AAAAAAAAB4o/mzzfiSyKoBI/s1600/07.%E5%BB%BA%E7%AB%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://1.bp.blogspot.com/-oV1HZmhY_LU/VKOiVR0TS_I/AAAAAAAAB4o/mzzfiSyKoBI/s1600/07.%E5%BB%BA%E7%AB%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 輸入專案資訊 [![](http://1.bp.blogspot.com/-Od917GEBdGA/VKOiV7THuxI/AAAAAAAAB40/4rc-i877Ioc/s1600/08.%E8%BC%B8%E5%85%A5%E5%B0%88%E6%A1%88%E5%90%8D%E7%A8%B1.png)](http://1.bp.blogspot.com/-Od917GEBdGA/VKOiV7THuxI/AAAAAAAAB40/4rc-i877Ioc/s1600/08.%E8%BC%B8%E5%85%A5%E5%B0%88%E6%A1%88%E5%90%8D%E7%A8%B1.png) 選擇專案流程範本 [![](http://3.bp.blogspot.com/-DG69tQ-qnbM/VKOiWFAEIQI/AAAAAAAAB44/nbG7MbR9z_4/s1600/09.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88%E7%AF%84%E6%9C%AC.png)](http://3.bp.blogspot.com/-DG69tQ-qnbM/VKOiWFAEIQI/AAAAAAAAB44/nbG7MbR9z_4/s1600/09.%E9%81%B8%E6%93%87%E5%B0%88%E6%A1%88%E7%AF%84%E6%9C%AC.png) 選擇專案的版本控制系統 [![](http://1.bp.blogspot.com/-ftNq4WMovs8/VKOiW3V0iiI/AAAAAAAAB5I/O5z01TSQuGk/s1600/10.%E9%81%B8%E6%93%87%E5%8E%9F%E5%A7%8B%E7%A2%BC%E6%8E%A7%E5%88%B6.png)](http://1.bp.blogspot.com/-ftNq4WMovs8/VKOiW3V0iiI/AAAAAAAAB5I/O5z01TSQuGk/s1600/10.%E9%81%B8%E6%93%87%E5%8E%9F%E5%A7%8B%E7%A2%BC%E6%8E%A7%E5%88%B6.png) 確認專案設定 [![](http://3.bp.blogspot.com/-4yS4GUVzfvk/VKOiXOAlBKI/AAAAAAAAB5A/YkTG14_uev8/s1600/11.%E5%AE%8C%E6%88%90.png)](http://3.bp.blogspot.com/-4yS4GUVzfvk/VKOiXOAlBKI/AAAAAAAAB5A/YkTG14_uev8/s1600/11.%E5%AE%8C%E6%88%90.png) 開始建立專案 [![](http://4.bp.blogspot.com/-FtYnOxjgAEg/VKOiYa7zMBI/AAAAAAAAB5M/yiQPrHdVQzM/s1600/12.%E9%96%8B%E5%A7%8B%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-FtYnOxjgAEg/VKOiYa7zMBI/AAAAAAAAB5M/yiQPrHdVQzM/s1600/12.%E9%96%8B%E5%A7%8B%E8%A8%AD%E5%AE%9A.png) 專案建立完成 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 標準單一伺服器設定</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E6%A8%99%E6%BA%96%E5%96%AE%E4%B8%80%E4%BC%BA%E6%9C%8D%E5%99%A8%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 22 Dec 2014 18:57:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E6%A8%99%E6%BA%96%E5%96%AE%E4%B8%80%E4%BC%BA%E6%9C%8D%E5%99%A8%E8%A8%AD%E5%AE%9A/</guid>
      <description>Team Foundation Server的幾種設定中，基本設字使用的是本機的SQL 2012 Express，所以功能比較少一點 這邊用標準設定來當例子，在開始使用這個組態精靈之前，需要先準備好SQL Server 執行環境需要網域帳號，並選取需要的服務Reporint Service、Analysis Service和全文檢索
[![](http://4.bp.blogspot.com/-6_Z1vfAcISE/VJf3O7wq8_I/AAAAAAAAB2U/4re5mgi6iGI/s1600/01.SQL%E5%85%83%E4%BB%B6.png)](http://4.bp.blogspot.com/-6_Z1vfAcISE/VJf3O7wq8_I/AAAAAAAAB2U/4re5mgi6iGI/s1600/01.SQL%E5%85%83%E4%BB%B6.png) 在組態中心中選擇標準單一伺服器 [![](http://1.bp.blogspot.com/-R0seRNlWFd0/VJf3ah4KhtI/AAAAAAAAB2c/75dqoIxRaZk/s1600/02.%E7%B5%84%E6%85%8B%E4%B8%AD%E5%BF%83.png)](http://1.bp.blogspot.com/-R0seRNlWFd0/VJf3ah4KhtI/AAAAAAAAB2c/75dqoIxRaZk/s1600/02.%E7%B5%84%E6%85%8B%E4%B8%AD%E5%BF%83.png) 標準組態精靈的歡迎畫面 [![](http://1.bp.blogspot.com/-FXLDan8lgbw/VJf3eFi5puI/AAAAAAAAB2k/IPRd3ZsoCtA/s1600/03.%E6%AD%A1%E8%BF%8E%E7%95%AB%E9%9D%A2.png)](http://1.bp.blogspot.com/-FXLDan8lgbw/VJf3eFi5puI/AAAAAAAAB2k/IPRd3ZsoCtA/s1600/03.%E6%AD%A1%E8%BF%8E%E7%95%AB%E9%9D%A2.png) 輸入要用於SharePoint和SQL Server reporting Services的服務帳號 使用一個網域帳號，並且需要是這幾個服務機器上面的本機管理員群組 [![](http://4.bp.blogspot.com/-5KI5mPkqDN8/VJf3hmP2kiI/AAAAAAAAB2s/RS6ZgzXhJmE/s1600/04.%E7%B6%B2%E5%9F%9F%E5%B8%B3%E8%99%9F.png)](http://4.bp.blogspot.com/-5KI5mPkqDN8/VJf3hmP2kiI/AAAAAAAAB2s/RS6ZgzXhJmE/s1600/04.%E7%B6%B2%E5%9F%9F%E5%B8%B3%E8%99%9F.png) 這邊可以選擇是否要安裝SharePoint，如果安裝在同一台的話需要的硬體規格比較高，這邊先跳過去 [![](http://3.bp.blogspot.com/-sfWfclEOVZA/VJf3lMjEdfI/AAAAAAAAB20/VmYIYNEZ0uA/s1600/05.SharePoint.png)](http://3.bp.blogspot.com/-sfWfclEOVZA/VJf3lMjEdfI/AAAAAAAAB20/VmYIYNEZ0uA/s1600/05.SharePoint.png) 確認組態設定的畫面 [![](http://2.bp.blogspot.com/-2cSUVrdSmkE/VJf3xocSm6I/AAAAAAAAB28/8fEtiP1RFXY/s1600/06.%E9%A9%97%E8%AD%89.png)](http://2.bp.blogspot.com/-2cSUVrdSmkE/VJf3xocSm6I/AAAAAAAAB28/8fEtiP1RFXY/s1600/06.%E9%A9%97%E8%AD%89.png) 驗證成功的畫面，接下來按下設定就會開始把需要的功能都設定好 [![](http://4.bp.blogspot.com/-laqe8AMezMI/VJf31N1KURI/AAAAAAAAB3E/SuOKkukXWII/s1600/07.%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-laqe8AMezMI/VJf31N1KURI/AAAAAAAAB3E/SuOKkukXWII/s1600/07.%E8%A8%AD%E5%AE%9A.png) 設定中 [![](http://1.bp.blogspot.com/-R8j6Dj7YJTo/VJf35uPZ0SI/AAAAAAAAB3M/8ksf-XzMc4g/s1600/08.%E8%A8%AD%E5%AE%9A%E4%B8%AD.png)](http://1.bp.blogspot.com/-R8j6Dj7YJTo/VJf35uPZ0SI/AAAAAAAAB3M/8ksf-XzMc4g/s1600/08.%E8%A8%AD%E5%AE%9A%E4%B8%AD.png) 設定成功 [![](http://2.bp.blogspot.com/-KhM64UpoxFs/VJf39DcDyZI/AAAAAAAAB3U/w2rrwM2efpo/s1600/09.%E8%A8%AD%E5%AE%9A%E6%88%90%E5%8A%9F.png)](http://2.bp.blogspot.com/-KhM64UpoxFs/VJf39DcDyZI/AAAAAAAAB3U/w2rrwM2efpo/s1600/09.%E8%A8%AD%E5%AE%9A%E6%88%90%E5%8A%9F.png) 檢閱結果 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 安裝</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Mon, 22 Dec 2014 16:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E5%AE%89%E8%A3%9D/</guid>
      <description>首先到Visual Studio的官網下載Team Foundation Server 90天免費試用版
[![](http://4.bp.blogspot.com/-hxGsZCAur7w/VJfWVNxQwtI/AAAAAAAAB08/TzIPMCI2qps/s1600/01.png)](http://4.bp.blogspot.com/-hxGsZCAur7w/VJfWVNxQwtI/AAAAAAAAB08/TzIPMCI2qps/s1600/01.png) 要安裝的時後雙擊tfs_server.exe就行了 [![](http://2.bp.blogspot.com/-A7eVh247ul0/VJfWZ96-FUI/AAAAAAAAB1E/j_r_nc6Z8SY/s1600/02.png)](http://2.bp.blogspot.com/-A7eVh247ul0/VJfWZ96-FUI/AAAAAAAAB1E/j_r_nc6Z8SY/s1600/02.png) 勾選接受授權條款後，點擊立即安裝就行了 [![](http://2.bp.blogspot.com/-9z2sc1IX-Kg/VJfWdw4752I/AAAAAAAAB1M/OGwxMcC7-gk/s1600/03.png)](http://2.bp.blogspot.com/-9z2sc1IX-Kg/VJfWdw4752I/AAAAAAAAB1M/OGwxMcC7-gk/s1600/03.png) 接下來就會開始跑安裝流程 [![](http://1.bp.blogspot.com/-cqjSmTcP2ss/VJfXrtx3QNI/AAAAAAAAB1Y/HprxZDpDfeM/s1600/04.%E5%AE%89%E8%A3%9D%E4%B8%AD.png)](http://1.bp.blogspot.com/-cqjSmTcP2ss/VJfXrtx3QNI/AAAAAAAAB1Y/HprxZDpDfeM/s1600/04.%E5%AE%89%E8%A3%9D%E4%B8%AD.png) 安裝成功後會跳出授權畫面，安裝試用版授權會有90天的試用期 [![](http://3.bp.blogspot.com/-DD02x-xmYI0/VJfYbirgJJI/AAAAAAAAB1g/FlmFAefZysw/s1600/05.%E6%8E%88%E6%AC%8A.png)](http://3.bp.blogspot.com/-DD02x-xmYI0/VJfYbirgJJI/AAAAAAAAB1g/FlmFAefZysw/s1600/05.%E6%8E%88%E6%AC%8A.png) 接下來就是在組態中心選擇適合自已環境的設定 Team Foundation Application Server可以選擇幾種層級 基本：自動在本機安裝SQL 2012 Express版本並使用 [標準單一伺服器](http://msdn.microsoft.com/zh-tw/library/vstudio/dd631903.aspx)：需自行安裝SQL Server 2008 R2以上的版本，再透過這個精靈來設定 [進階](http://msdn.microsoft.com/zh-tw/library/vstudio/dd631919.aspx)：SQL Server裝到另外一台機器上面，再用這個精靈來設定 僅限應用程式層：做伺服器陣列的時後，再選這個精靈來設定 [![](http://2.bp.blogspot.com/-ETId2vPV8uM/VJfYx90Or7I/AAAAAAAAB1o/SJUzKalZ4Ok/s1600/06.%E7%B5%84%E6%85%8B%E4%B8%AD%E5%BF%83.png)](http://2.bp.blogspot.com/-ETId2vPV8uM/VJfYx90Or7I/AAAAAAAAB1o/SJUzKalZ4Ok/s1600/06.%E7%B5%84%E6%85%8B%E4%B8%AD%E5%BF%83.png) 管理主控台可以做更多的設定 [!</description>
    </item>
    
    <item>
      <title>Team Foundation Server 筆記</title>
      <link>http://example.org/posts/2014/12/team-foundation-server-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sun, 21 Dec 2014 17:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/team-foundation-server-%E7%AD%86%E8%A8%98/</guid>
      <description>1. Team Foundation Server 安裝 2. Team Foundation Server 標準單一伺服器設定 3. Team Foundation Server 新增專案 4. Team Foundation Server 連接專案 5. Team Foundation Server 刪除專案 6. Team Foundation Server 加入工作項目 8. Team Foundation Server 加入Build Service 9. Team Foundation Server 加入組建定義 10. 設定測試代理環境 11. 設定Web效能測試 12. 設定負載測試</description>
    </item>
    
    <item>
      <title>Entity Framework DbContext SqlQuery、ExecuteSqlCommand</title>
      <link>http://example.org/posts/2014/12/entity-framework-dbcontext-sqlqueryexecutesqlcommand/</link>
      <pubDate>Thu, 18 Dec 2014 16:17:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/entity-framework-dbcontext-sqlqueryexecutesqlcommand/</guid>
      <description>SqlQuery會回傳結果集，ExecuteSqlCommand會回傳受影響的筆數 傳遞參數的方式有以下幾種
namespace ConsoleApplication1 { using ConsoleApplication1.Models; using System.Data; using System.Data.Entity; using System.Data.SqlClient; class Program { static void Main(string[] args) { Database.SetInitializer(new DropCreateDatabaseAlways&amp;amp;lt;DemoContext&amp;amp;gt;()); using (DemoContext db = new DemoContext()) { db.Database.Initialize(false); int colA = 123; string colB = &amp;quot;abc&amp;quot;; // 使用佔位符號 db.Database.SqlQuery&amp;amp;lt;TableName&amp;amp;gt;(&amp;quot;SELECT * FROM TableName WHERE ColA={0} AND ColB={1}&amp;quot;, colA, colB); // 使用固定名稱的參數 db.Database.SqlQuery&amp;amp;lt;TableName&amp;amp;gt;(&amp;quot;SELECT * FROM TableName WHERE ColA=@P0 AND ColB=@P1&amp;quot;, colA, colB); // 使用SQL參數 db.Database.SqlQuery&amp;amp;lt;TableName&amp;amp;gt;( &amp;quot;SELECT * FROM TableName WHERE ColA=@ColA AND ColB=@ColB&amp;quot;, new SqlParameter(&amp;quot;ColA&amp;quot;, colA), new SqlParameter(&amp;quot;ColB&amp;quot;, colB)); // 使用SQL參數並明確指定資料形態 db.</description>
    </item>
    
    <item>
      <title>Entity Framework DbContext Validation API</title>
      <link>http://example.org/posts/2014/12/entity-framework-dbcontext-validation-api/</link>
      <pubDate>Thu, 18 Dec 2014 15:46:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/entity-framework-dbcontext-validation-api/</guid>
      <description>先建一張資料表，並加上幾個Attribute當例子
namespace ConsoleApplication1.Models { using System; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Table1&amp;quot;)] public class Table1 { [Key] public int Table1Id { get; set; } [Required] [StringLength(10, MinimumLength = 2)] public string C1 { get; set; } [Range(10, 20)] public int C2 { get; set; } public DateTime D1 { get; set; } public DateTime D2 { get; set; } }  }  針對屬性驗證
namespace ConsoleApplication1 { using ConsoleApplication1.Models; using System; using System.</description>
    </item>
    
    <item>
      <title>Entity Framework DbContext Change Tracker API</title>
      <link>http://example.org/posts/2014/12/entity-framework-dbcontext-change-tracker-api/</link>
      <pubDate>Wed, 17 Dec 2014 18:21:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/entity-framework-dbcontext-change-tracker-api/</guid>
      <description>DbSet有一個Local，是用來存放從資料庫中取得的資料
namespace ConsoleApplication1 { using ConsoleApplication1.Models; using System; using System.Data.Entity; class Program { static void Main(string[] args) { // 初始化資料庫 Database.SetInitializer(new MyInit()); using (DemoContext db = new DemoContext()) { db.Database.Initialize(false); Console.WriteLine(db.Topic.Local.Count); db.Topic.Load(); Console.WriteLine(db.Topic.Local.Count); } } }  } 
[![](http://2.bp.blogspot.com/-nFIf_sip55A/VJFaB_gYo0I/AAAAAAAABzs/FxfhAybwr8Q/s1600/01.png)](http://2.bp.blogspot.com/-nFIf_sip55A/VJFaB_gYo0I/AAAAAAAABzs/FxfhAybwr8Q/s1600/01.png) Local屬性是一個ObservableCollection，可以透過CollectionChanged事件來得到Local集合中發生變化的通知 namespace ConsoleApplication1 { using ConsoleApplication1.Models; using System; using System.Data.Entity; class Program { static void Main(string[] args) { // 初始化資料庫 Database.SetInitializer(new MyInit()); using (DemoContext db = new DemoContext()) { db.Database.Initialize(false); db.</description>
    </item>
    
    <item>
      <title>Entity Framework DbContext 延遲加載、貪婪加載、顯性加載</title>
      <link>http://example.org/posts/2014/12/entity-framework-dbcontext-%E5%BB%B6%E9%81%B2%E5%8A%A0%E8%BC%89%E8%B2%AA%E5%A9%AA%E5%8A%A0%E8%BC%89%E9%A1%AF%E6%80%A7%E5%8A%A0%E8%BC%89/</link>
      <pubDate>Wed, 17 Dec 2014 16:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/entity-framework-dbcontext-%E5%BB%B6%E9%81%B2%E5%8A%A0%E8%BC%89%E8%B2%AA%E5%A9%AA%E5%8A%A0%E8%BC%89%E9%A1%AF%E6%80%A7%E5%8A%A0%E8%BC%89/</guid>
      <description>用一個留言版的主表和明細表當例子，順便加入初始化資料來方便觀察資料載入方式的差異 DemoContext
namespace ConsoleApplication1.Models { using System.Data.Entity; public class DemoContext : DbContext { public DbSet&amp;amp;lt;Topic&amp;amp;gt; Topic { get; set; } public DbSet&amp;amp;lt;Reply&amp;amp;gt; Reply { get; set; } }  }  留言版主表
namespace ConsoleApplication1.Models { using System.Collections.Generic; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Topic&amp;quot;)] public class Topic { [Key] public int TopicId { get; set; } public string TopicTitle { get; set; } public virtual ICollection&amp;amp;lt;Reply&amp;amp;gt; Reply { get; set; } }  }</description>
    </item>
    
    <item>
      <title>Entity Framework DbContext 新增、修改、刪除、查詢</title>
      <link>http://example.org/posts/2014/12/entity-framework-dbcontext-%E6%96%B0%E5%A2%9E%E4%BF%AE%E6%94%B9%E5%88%AA%E9%99%A4%E6%9F%A5%E8%A9%A2/</link>
      <pubDate>Wed, 17 Dec 2014 15:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/12/entity-framework-dbcontext-%E6%96%B0%E5%A2%9E%E4%BF%AE%E6%94%B9%E5%88%AA%E9%99%A4%E6%9F%A5%E8%A9%A2/</guid>
      <description>首先建立一個留言版的資料庫來當例子
DemoContext
namespace ConsoleApplication1.Models { using System.Data.Entity; public class DemoContext : DbContext { public DbSet&amp;amp;lt;Topic&amp;amp;gt; Topic { get; set; } public DbSet&amp;amp;lt;Reply&amp;amp;gt; Reply { get; set; } }  }  留言版主表
namespace ConsoleApplication1.Models { using System.Collections.Generic; using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Topic&amp;quot;)] public class Topic { [Key] public int TopicId { get; set; } public string TopicTitle { get; set; } public virtual ICollection&amp;amp;lt;Reply&amp;amp;gt; Reply { get; set; } }  }</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 繼承對應設定</title>
      <link>http://example.org/posts/2014/11/entity-framework-code-first-%E7%B9%BC%E6%89%BF%E5%B0%8D%E6%87%89%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 26 Nov 2014 11:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/11/entity-framework-code-first-%E7%B9%BC%E6%89%BF%E5%B0%8D%E6%87%89%E8%A8%AD%E5%AE%9A/</guid>
      <description>TPH(Table Per Hierarchy) 基底類別和衍生類別都映射到同一張表中，通過一個鑒別欄位來識別資料是屬於基底或是衍生類別，這是預設的映射方法
Table1
namespace ConsoleApplication1.Models { using System.ComponentModel.DataAnnotations; public class Table1 { [Key] public int Table1Id { get; set; } public int C1 { get; set; } public int C2 { get; set; } }  }  Table2
namespace ConsoleApplication1.Models { public class Table2 : Table1 { public int C3 { get; set; }  public int C4 { get; set; } }  }  新增幾筆資料</description>
    </item>
    
    <item>
      <title>Entity Framework Code First Complex Type</title>
      <link>http://example.org/posts/2014/11/entity-framework-code-first-complex-type/</link>
      <pubDate>Tue, 25 Nov 2014 18:25:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/11/entity-framework-code-first-complex-type/</guid>
      <description>Complex Type是用來重覆使用的欄位，有幾個規定 1. 不能有主索引 2. 一個類別中只能有一個實體 3. 只能是引用屬性，不能是集合屬性
Table1
namespace ConsoleApplication1.Models { public class Table1 { public int Table1Id { get; set; } public Address Address { get; set; } } }  Table2 namespace ConsoleApplication1.Models { public class Table2 { public int Table2Id { get; set; } public Address Address { get; set; } } }  Address namespace ConsoleApplication1.Models { public class Address { public string Addr1 { get; set; }  public string Addr2 { get; set; } }  }  預設狀態資料表的樣子</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 多對多關聯設定</title>
      <link>http://example.org/posts/2014/11/entity-framework-code-first-%E5%A4%9A%E5%B0%8D%E5%A4%9A%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Tue, 25 Nov 2014 16:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/11/entity-framework-code-first-%E5%A4%9A%E5%B0%8D%E5%A4%9A%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</guid>
      <description>兩個類別之間，各自包含對應的集合導覽屬性，就會被當成多對多關系 在資料庫中的多對多關系，需要用三張表來表示，分別是一對多再多對一
一個使用者可以有多個群組
namespace ConsoleApplication1.Models { using System.Collections.Generic; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;User&amp;quot;)] public class User { public int UserId { get; set; } public string UserName { get; set; } public virtual ICollection&amp;amp;lt;Group&amp;amp;gt; Group { get; set; } }  }  一個群組可以有多個使用者
namespace ConsoleApplication1.Models { using System.Collections.Generic; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Group&amp;quot;)] public class Group { public int GroupId { get; set; } public string GroupName { get; set; } public virtual ICollection&amp;amp;lt;User&amp;amp;gt; User { get; set; } }  }  預設會自動生成第三張表</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 一對多關聯設定</title>
      <link>http://example.org/posts/2014/11/entity-framework-code-first-%E4%B8%80%E5%B0%8D%E5%A4%9A%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Tue, 25 Nov 2014 16:17:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/11/entity-framework-code-first-%E4%B8%80%E5%B0%8D%E5%A4%9A%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</guid>
      <description>兩個類別之間，一個包含集合導覽屬性，一個包含引用屬性，就會被當成一對多關系
主表
namespace ConsoleApplication1.Models { using System.Collections.Generic; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Topic&amp;quot;)] public class Topic { public int TopicId { get; set; } public string Title { get; set; } public virtual ICollection&amp;amp;lt;Reply&amp;amp;gt; Reply { get; set; } }  }  明細表 外鍵的命名只有符合預設的規則，就會建立關系，規則如下 1. 目標類型索引的名稱 2. 目標類型名稱+目標類型主索引名稱 3. 導覽屬性名稱+目標類型主索引名稱
namespace ConsoleApplication1.Models { using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Reply&amp;quot;)] public class Reply { public int ReplyId { get; set; } public int TopicId { get; set; } // public int TopicTopicId { get; set; } // public int TheTopicTopicId { get; set; } public string Title { get; set; } public virtual Topic TheTopic { get; set; } }  }  若不是用預設規則的命名方式，可以透過ForeignKey這個Attribute設定</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 一對一關聯設定</title>
      <link>http://example.org/posts/2014/11/entity-framework-code-first-%E4%B8%80%E5%B0%8D%E4%B8%80%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 24 Nov 2014 17:42:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/11/entity-framework-code-first-%E4%B8%80%E5%B0%8D%E4%B8%80%E9%97%9C%E8%81%AF%E8%A8%AD%E5%AE%9A/</guid>
      <description>在兩個類別之間，各自包含一個引用屬性，就會被當成一對一關系 只是那張是主資料表，需要利用Fluent API來設定
主資料表
using System.ComponentModel.DataAnnotations; public partial class TableA { [Key] public int TabId { get; set; }
public int C1 { get; set; } public virtual TableB TableB { get; set; }  } 對應的資料表
using System.ComponentModel.DataAnnotations; public partial class TableB { [Key] public int TabId { get; set; }
public int CC1 { get; set; } public virtual TableA TableA { get; set; }  } 設定關聯</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 資料庫初始化設定</title>
      <link>http://example.org/posts/2014/10/entity-framework-code-first-%E8%B3%87%E6%96%99%E5%BA%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Fri, 31 Oct 2014 17:32:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/entity-framework-code-first-%E8%B3%87%E6%96%99%E5%BA%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E8%A8%AD%E5%AE%9A/</guid>
      <description>在參考了entityFramework套件之後，設定檔中會自動增加一個EntityFramework的區域設定 其中的defaultConnectionFactory宣告了預設的資料庫位置 不同的版本預設的localdb實體名稱會有不同，這邊的例子是mssqllocaldb
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;configSections&amp;gt; &amp;lt;!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --&amp;gt; &amp;lt;section name=&#34;entityFramework&#34; type=&#34;System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#34; requirePermission=&#34;false&#34; /&amp;gt; &amp;lt;/configSections&amp;gt; &amp;lt;startup&amp;gt; &amp;lt;supportedRuntime version=&#34;v4.0&#34; sku=&#34;.NETFramework,Version=v4.5&#34; /&amp;gt; &amp;lt;/startup&amp;gt; &amp;lt;entityFramework&amp;gt; &amp;lt;defaultConnectionFactory type=&#34;System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework&#34;&amp;gt; &amp;lt;parameters&amp;gt; &amp;lt;parameter value=&#34;mssqllocaldb&#34; /&amp;gt; &amp;lt;/parameters&amp;gt; &amp;lt;/defaultConnectionFactory&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;provider invariantName=&#34;System.Data.SqlClient&#34; type=&#34;System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer&#34; /&amp;gt; &amp;lt;/providers&amp;gt; &amp;lt;/entityFramework&amp;gt; &amp;lt;/configuration&amp;gt;  就會自動建立一個包含完整Assembly名稱的資料庫 [![](http://3.bp.blogspot.com/-u6i3p3OnimM/VFNEtuySOlI/AAAAAAAABtk/lDxVN9zSfD8/s1600/db.png)](http://3.bp.blogspot.com/-u6i3p3OnimM/VFNEtuySOlI/AAAAAAAABtk/lDxVN9zSfD8/s1600/db.png) 如果在設定檔的連線區段中，有一個和DbContext同名的設定值，就會改用這邊的連線設定 建立的資料庫也會是連線字串中指定的名稱
&amp;lt;connectionStrings&amp;gt; &amp;lt;add name=&#34;DemoContext&#34; providerName=&#34;System.Data.SqlClient&#34; connectionString=&#34;Data Source=(localdb)\v11.0;Initial Catalog=Demo;Integrated Security=true;&#34;/&amp;gt; &amp;lt;/connectionStrings&amp;gt;[![](http://2.bp.blogspot.com/-B1iIDWV-srg/VFNGwAUTTXI/AAAAAAAABt4/eI2Gmbx2deY/s1600/02.%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2.png)](http://2.bp.blogspot.com/-B1iIDWV-srg/VFNGwAUTTXI/AAAAAAAABt4/eI2Gmbx2deY/s1600/02.%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2.png) 也可以透過預設建構式指定要使用設定檔中的那個值 &amp;lt;connectionStrings&amp;gt; &amp;lt;add name=&#34;</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 組織Fluent API 設定</title>
      <link>http://example.org/posts/2014/10/entity-framework-code-first-%E7%B5%84%E7%B9%94fluent-api-%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 27 Oct 2014 18:16:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/entity-framework-code-first-%E7%B5%84%E7%B9%94fluent-api-%E8%A8%AD%E5%AE%9A/</guid>
      <description>Fluent API可以設定的功能比較多，但每一個欄位就要寫一行，越大的專案設定就會越多
可以透過EntityTypeConfiguration&amp;lt;T&amp;gt;來分類 一般的設定方式public class DemoContext : DbContext { public DbSet&amp;lt;Table1&amp;gt; Table1 { get; set; } protected override void OnModelCreating(DbModelBuilder modelBuilder) { modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().ToTable(&amp;quot;Table1&amp;quot;).HasKey(x =&amp;amp;gt; x.id); modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().Property(x =&amp;amp;gt; x.id) .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity) .HasColumnName(&amp;quot;sid&amp;quot;) .HasColumnType(&amp;quot;bigint&amp;quot;); modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().Property(x =&amp;amp;gt; x.s1) .IsRequired() .HasMaxLength(10) .IsFixedLength() .IsUnicode(false); modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().Property(x =&amp;amp;gt; x.c1) .HasPrecision(18, 2); modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().Property(x =&amp;amp;gt; x.t1) .IsRowVersion(); }  }
分類後的設定方式public class DemoContext : DbContext { public DbSet&amp;lt;Table1&amp;gt; Table1 { get; set; } protected override void OnModelCreating(DbModelBuilder modelBuilder) { modelBuilder.Configurations.Add(new Table1Configuration()); } private class Table1Configuration : EntityTypeConfiguration&amp;amp;lt;Table1&amp;amp;gt; { public Table1Configuration() { this.</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 對應規則設定</title>
      <link>http://example.org/posts/2014/10/entity-framework-code-first-%E5%B0%8D%E6%87%89%E8%A6%8F%E5%89%87%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 27 Oct 2014 17:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/entity-framework-code-first-%E5%B0%8D%E6%87%89%E8%A6%8F%E5%89%87%E8%A8%AD%E5%AE%9A/</guid>
      <description>要改變預設對應規則，可以用兩種方式 一種是使用Attributes的方式，例如[key] 一種是覆寫DbContext的OnModelCreating，透過DbModelBuilder使用Fluent API方式來設定
資料表名稱和主索引
[Table(&#34;Table1&#34;)] public class Table1 { [Key] public int id { get; set; } } public class DemoContext : DbContext { public DbSet&amp;lt;Table1&amp;gt; Table1 { get; set; }
protected override void OnModelCreating(DbModelBuilder modelBuilder) { modelBuilder.Entity&amp;amp;lt;Table1&amp;amp;gt;().ToTable(&amp;quot;Table1&amp;quot;).HasKey(x =&amp;amp;gt; x.id); }  }  自動編號
[Table(&#34;Table1&#34;)] public class Table1 { [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int id { get; set; } } public class DemoContext : DbContext { public DbSet&amp;lt;Table1&amp;gt; Table1 { get; set; }</description>
    </item>
    
    <item>
      <title>Entity Framework Code First 預設對應規則</title>
      <link>http://example.org/posts/2014/10/entity-framework-code-first-%E9%A0%90%E8%A8%AD%E5%B0%8D%E6%87%89%E8%A6%8F%E5%89%87/</link>
      <pubDate>Mon, 20 Oct 2014 15:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/entity-framework-code-first-%E9%A0%90%E8%A8%AD%E5%B0%8D%E6%87%89%E8%A6%8F%E5%89%87/</guid>
      <description>資料庫 預設採用SQLEXPRESS，如果沒有SQLEXPRESS執行個體，會嘗試Localdb 如果有和DbContext同名的連線字串，就會直接使用 也可透過覆寫建構式的時後，傳入指定的連線字串名稱 或是透過DbConnection，在執行階段傳入連線物件
Table 資料表為類別名稱的複數形式，而且schema都為dbo 可以透過System.ComponentModel.DataAnnotations.Schema.Table 或是Fluent API的Entity&amp;lt;T&amp;gt;.ToTable來指定資料表的名稱 也可以覆寫OnModelCreating，移除複數資料表的約定 modelBuilder.Conventions.Remove&amp;lt;PluralizingTableNameConvention&amp;gt;();
主索引 預設為類別名稱加上Id結尾的屬性，如果資料形態是int，還會加上自動編號 可以透過System.ComponentModel.DataAnnotations.Key 或是Fluent API的Entity&amp;lt;T&amp;gt;.HasKey來指定 如果是複合索引，Attribute方式需再加上Column來指定欄位的順序 Fluent API則是傳入一個匿名型別
外部索引 如果類別之間有一對多的關系，會自動生成Foreign Key 欄位名稱是導覽屬性加上底線再加上對應主索引的欄位名稱 可以透過System.ComponentModel.DataAnnotations.Schema.ForeignKey來指定 或是透過Fluent API的Entity&amp;lt;T&amp;gt;.Hasxxx().Withxxx來指定 xxx可以是Optional(0或多個)、Required(1或多個)、Many(多個)
資料型態 實值型別會是not null 參考型別會是null nullable型別會是null 可以透過System.ComponentModel.DataAnnotations.Required來設定不可空值 或是透過Fluent API的Entity&amp;lt;T&amp;gt;().IsRequired()來指定不可空值，IsOptional指定可以空值
也可以透過System.ComponentModel.DataAnnotations.Schema.Column來明確指定對應的格式 或是透過Fluent API的Entity&amp;lt;T&amp;gt;().Property().HasColumnType來指定對應的格式 或是IsUnicode來指定是否為Unicode
C#SQL ServernullablebytetinyintNOT NULLshortsmallintNOT NULLintintNOT NULLlongbigintNOT NULLfloatrealNOT NULLdoublefloatNOT NULLdecimaldecimal(18,2)NOT NULLstringnvarchar(max)NULLbyte[]varbinary(max)NOT NULLboolbitNOT NULLdatetimedatetimeNOT NULL</description>
    </item>
    
    <item>
      <title>Entity Framework 筆記</title>
      <link>http://example.org/posts/2014/10/entity-framework-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 20 Oct 2014 10:53:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/entity-framework-%E7%AD%86%E8%A8%98/</guid>
      <description>[Code First]
1. Entity Framework Code First 預設對應規則
2. Entity Framework Code First 對應規則設定
3. Entity Framework Code First 組織Fluent API 設定
4. Entity Framework Code First 資料庫初始化設定
5. Entity Framework Code First 一對一關聯設定
6. Entity Framework Code First 一對多關聯設定
7. Entity Framework Code First 多對多關聯設定
8. Entity Framework Code First Complex Type
9. Entity Framework Code First 繼承對應設定
[DbContext]
1. Entity Framework DbContext 新增、修改、刪除、查詢
2. Entity Framework DbContext 延遲加載、貪婪加載、顯性加載</description>
    </item>
    
    <item>
      <title>ladda-bootstrap 套件</title>
      <link>http://example.org/posts/2014/10/ladda-bootstrap-%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Wed, 01 Oct 2014 14:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/ladda-bootstrap-%E5%A5%97%E4%BB%B6/</guid>
      <description>ladda-bootstrap用將spin.js整合bootstrap，並加強功能的一個套件 官網上有很詳細的使用範例 透過NuGet就可以安裝
[![](http://1.bp.blogspot.com/-IughOK48vhE/VCuejPlOPuI/AAAAAAAABtE/x5bf4Vtf7PY/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-IughOK48vhE/VCuejPlOPuI/AAAAAAAABtE/x5bf4Vtf7PY/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 可以看到套件相依於spin.js [![](http://2.bp.blogspot.com/-UqPTwSVmbmM/VCuenBELR-I/AAAAAAAABtM/iBFBfK9RyUo/s1600/02.%E5%A5%97%E4%BB%B6%E7%9B%B8%E4%BE%9D%E6%80%A7.png)](http://2.bp.blogspot.com/-UqPTwSVmbmM/VCuenBELR-I/AAAAAAAABtM/iBFBfK9RyUo/s1600/02.%E5%A5%97%E4%BB%B6%E7%9B%B8%E4%BE%9D%E6%80%A7.png) 使用方式是在button上，加上ladda-button的css類別，要顯示的文字加上ladda-label的css類別
&amp;lt;button id=&#34;btn1&#34; class=&#34;btn btn-primary ladda-button&#34; data-style=&#34;expand-left&#34;&amp;gt; &amp;lt;span class=&#34;ladda-label&#34;&amp;gt;button&amp;lt;/span&amp;gt; &amp;lt;/button&amp;gt;  另外透過data-style來指定動畫效果 data-style=&#34;expand-left&#34; data-style=&#34;expand-right&#34; data-style=&#34;expand-up&#34; data-style=&#34;expand-down&#34; data-style=&#34;zoom-in&#34; data-style=&#34;zoom-out&#34; data-style=&#34;slide-left&#34; data-style=&#34;slide-right&#34; data-style=&#34;slide-up&#34; data-style=&#34;slide-down&#34; data-style=&#34;contract&#34; 最後透過JavaScript來觸發，先用Ladda.create(element)來取得物件 呼叫物件的start來開始動畫 呼叫物件的stop來停止動畫
$(function () { $(&#34;#btn1&#34;).click(function () { var obj = Ladda.create(this); obj.start(); setTimeout(function () { obj.stop(); }, 1000); }); });  spin.js.2.0.1好像和ladda不太和，最好先降到spin.js 1.3版就好  相關資料 Bootstrap button loading text http://blog.developer.idv.tw/2014/10/bootstrap-button-loading-text.html
spin.js 套件 http://blog.developer.idv.tw/2014/10/spinjs.html</description>
    </item>
    
    <item>
      <title>spin.js 套件</title>
      <link>http://example.org/posts/2014/10/spin-js-%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Wed, 01 Oct 2014 14:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/spin-js-%E5%A5%97%E4%BB%B6/</guid>
      <description>spin.js是一個簡單使用的Loading的動畫，官網上有很清楚的使用範例 首先透過NuGet安裝spin.js套件
[![](http://1.bp.blogspot.com/-frBwZAmeVK8/VCuYw17LqtI/AAAAAAAABs0/fWYi4xH2j6M/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-frBwZAmeVK8/VCuYw17LqtI/AAAAAAAABs0/fWYi4xH2j6M/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 網頁中放一個div來轉圈圈，再用一個按鈕來觸發事件 &amp;lt;div id=&#34;div1&#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;input id=&#34;btn1&#34; type=&#34;button&#34; value=&#34;click&#34; /&amp;gt;  spin.js本身是無相依性的，這邊用JQuery只是用來綁定事件 呼叫Spinner物件的spin函式來啟用動畫，呼叫stop來停止動畫 $(function () { $(&#34;#btn1&#34;).click(function () { spinner = new Spinner().spin($(&#34;#div1&#34;)[0]); setTimeout(function () { spinner.stop(); }, 1000); }); });   相關資料 Bootstrap button loading text http://blog.developer.idv.tw/2014/10/bootstrap-button-loading-text.html
ladda-bootstrap 套件 http://blog.developer.idv.tw/2014/10/ladda-bootstrap.html</description>
    </item>
    
    <item>
      <title>Bootstrap button loading text</title>
      <link>http://example.org/posts/2014/10/bootstrap-button-loading-text/</link>
      <pubDate>Wed, 01 Oct 2014 13:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/10/bootstrap-button-loading-text/</guid>
      <description>Bootstrap的Button上，加上data-loading-text的屬性，可以很簡單地做到clickonce的功能 透過JQuery來設定button的狀態 btn.button(&amp;ldquo;loading&amp;rdquo;)會顯示data-loading-text設定的文字，並且把button設為disabled btn.button(&amp;ldquo;reset&amp;rdquo;)會恢復button的狀態
 相關資料 [spin.js 套件](http://blog.developer.idv.tw/2014/10/spinjs.html) [http://blog.developer.idv.tw/2014/10/spinjs.html](http://blog.developer.idv.tw/2014/10/spinjs.html) ladda-bootstrap 套件 http://blog.developer.idv.tw/2014/10/ladda-bootstrap.html</description>
    </item>
    
    <item>
      <title>TeamCity 發行 Octopus 部署套件</title>
      <link>http://example.org/posts/2014/09/teamcity-%E7%99%BC%E8%A1%8C-octopus-%E9%83%A8%E7%BD%B2%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Mon, 29 Sep 2014 17:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/teamcity-%E7%99%BC%E8%A1%8C-octopus-%E9%83%A8%E7%BD%B2%E5%A5%97%E4%BB%B6/</guid>
      <description>先到Octopus建立一個專案
[![](http://4.bp.blogspot.com/-FDLLsc4giU4/VCkiHt_yQyI/AAAAAAAABrU/gvNiJ8w3SsI/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://4.bp.blogspot.com/-FDLLsc4giU4/VCkiHt_yQyI/AAAAAAAABrU/gvNiJ8w3SsI/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 選擇發行套件 [![](http://2.bp.blogspot.com/-Z8lhnIjJIxE/VCkiHiZxCGI/AAAAAAAABrc/XF7oPi2g3Mk/s1600/02.%E6%96%B0%E5%A2%9E%E6%AD%A5%E7%BD%B2Step.png)](http://2.bp.blogspot.com/-Z8lhnIjJIxE/VCkiHiZxCGI/AAAAAAAABrc/XF7oPi2g3Mk/s1600/02.%E6%96%B0%E5%A2%9E%E6%AD%A5%E7%BD%B2Step.png) 就可以找到剛建置出來的套件 [![](http://4.bp.blogspot.com/-Cwnpf4xmYks/VCkiHjpMRdI/AAAAAAAABrY/IL4ip64ddY8/s1600/03.%E9%81%B8%E6%93%87%E5%A5%97%E4%BB%B6.png)](http://4.bp.blogspot.com/-Cwnpf4xmYks/VCkiHjpMRdI/AAAAAAAABrY/IL4ip64ddY8/s1600/03.%E9%81%B8%E6%93%87%E5%A5%97%E4%BB%B6.png) 回到TeamCity新增一個部署設定 [![](http://1.bp.blogspot.com/-2hVQBVI5FGg/VCkiIYd3vPI/AAAAAAAABrg/30Q4soZJvkU/s1600/04.%E6%96%B0%E5%A2%9E%E9%83%A8%E7%BD%B2%E5%B0%88%E6%A1%88.png)](http://1.bp.blogspot.com/-2hVQBVI5FGg/VCkiIYd3vPI/AAAAAAAABrg/30Q4soZJvkU/s1600/04.%E6%96%B0%E5%A2%9E%E9%83%A8%E7%BD%B2%E5%B0%88%E6%A1%88.png) 在Trigger中新增一個建置完成觸發事件，指定到對應的專案 [![](http://4.bp.blogspot.com/-ROmAs_Tl5qY/VCkiIi3CO_I/AAAAAAAABrk/iNQEOH-dwKY/s1600/05.%E5%BB%BA%E7%BD%AETrigger%E6%96%B0%E5%A2%9E.png)](http://4.bp.blogspot.com/-ROmAs_Tl5qY/VCkiIi3CO_I/AAAAAAAABrk/iNQEOH-dwKY/s1600/05.%E5%BB%BA%E7%BD%AETrigger%E6%96%B0%E5%A2%9E.png) 在關聯性設定中，也把這個專案指定進來 [![](http://4.bp.blogspot.com/-IaQZvFCbfA4/VCkiItMFcII/AAAAAAAABro/ppW2dwwNADI/s1600/06.%E6%96%B0%E5%A2%9E%E9%97%9C%E8%81%AF.png)](http://4.bp.blogspot.com/-IaQZvFCbfA4/VCkiItMFcII/AAAAAAAABro/ppW2dwwNADI/s1600/06.%E6%96%B0%E5%A2%9E%E9%97%9C%E8%81%AF.png) 在版號的地方才能用%dep開頭的設定，取得這個專案目前的版號 [![](http://3.bp.blogspot.com/-mJjKvkDGHnE/VCkiI-EY_EI/AAAAAAAABrs/EL5AkEmhWyg/s1600/07.%E8%A8%AD%E5%AE%9A%E7%89%88%E8%99%9F.png)](http://3.bp.blogspot.com/-mJjKvkDGHnE/VCkiI-EY_EI/AAAAAAAABrs/EL5AkEmhWyg/s1600/07.%E8%A8%AD%E5%AE%9A%E7%89%88%E8%99%9F.png) 建置步驟選擇OctopusDeploy: Create release [![](http://1.bp.blogspot.com/-N3IP4kF2I58/VCkiJNkJraI/AAAAAAAABrw/57LbhpwOkfs/s1600/08.%E9%81%B8%E6%93%87%E5%BB%BA%E7%BD%AE%E9%83%A8%E7%BD%B2.png)](http://1.bp.blogspot.com/-N3IP4kF2I58/VCkiJNkJraI/AAAAAAAABrw/57LbhpwOkfs/s1600/08.%E9%81%B8%E6%93%87%E5%BB%BA%E7%BD%AE%E9%83%A8%E7%BD%B2.png) 輸入Octopus URL和API Key 再輸入專案名稱和要連立版本的版號 如果要順便部署環境的話，就在Deploy To中輸入環境名稱 再把Wait for deployment to complete勾起來就行了 [![](http://1.bp.blogspot.com/-O_2Habk45Yo/VCkiJQdQ-EI/AAAAAAAABr0/11DQQ0IDrPQ/s1600/09.%E8%A8%AD%E5%AE%9A%E5%BB%BA%E7%BD%AE.png)](http://1.bp.blogspot.com/-O_2Habk45Yo/VCkiJQdQ-EI/AAAAAAAABr0/11DQQ0IDrPQ/s1600/09.%E8%A8%AD%E5%AE%9A%E5%BB%BA%E7%BD%AE.png) 建置成功 [![](http://1.bp.blogspot.com/-l4WiqDvB-9M/VCkiJqUgMiI/AAAAAAAABr4/tR0CZlH9JCA/s1600/10.%E5%BB%BA%E7%BD%AE%E6%88%90%E5%8A%9F.png)](http://1.bp.blogspot.com/-l4WiqDvB-9M/VCkiJqUgMiI/AAAAAAAABr4/tR0CZlH9JCA/s1600/10.%E5%BB%BA%E7%BD%AE%E6%88%90%E5%8A%9F.png) 自動新增一個部署版本了 [!</description>
    </item>
    
    <item>
      <title>TeamCity 打包 Octopus 部署套件</title>
      <link>http://example.org/posts/2014/09/teamcity-%E6%89%93%E5%8C%85-octopus-%E9%83%A8%E7%BD%B2%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Mon, 29 Sep 2014 16:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/teamcity-%E6%89%93%E5%8C%85-octopus-%E9%83%A8%E7%BD%B2%E5%A5%97%E4%BB%B6/</guid>
      <description>首先新建一個建置設定
[![](http://4.bp.blogspot.com/-1hnowCI7ZBM/VCkcK6DJ23I/AAAAAAAABpM/tcbGZTMFF7I/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://4.bp.blogspot.com/-1hnowCI7ZBM/VCkcK6DJ23I/AAAAAAAABpM/tcbGZTMFF7I/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 設定SVN路徑
[![](http://4.bp.blogspot.com/-MbNEf3JsBJo/VCkcPahMcqI/AAAAAAAABpU/zj_3Q7qtu74/s1600/02.%E8%A8%AD%E5%AE%9Asvn.png)](http://4.bp.blogspot.com/-MbNEf3JsBJo/VCkcPahMcqI/AAAAAAAABpU/zj_3Q7qtu74/s1600/02.%E8%A8%AD%E5%AE%9Asvn.png) SVN的細部設定
[![](http://4.bp.blogspot.com/-j2ZooaYc4jU/VCkcXM4-fRI/AAAAAAAABpc/y22W60orsug/s1600/04.%E7%B4%B0%E9%83%A8%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-j2ZooaYc4jU/VCkcXM4-fRI/AAAAAAAABpc/y22W60orsug/s1600/04.%E7%B4%B0%E9%83%A8%E8%A8%AD%E5%AE%9A.png) 取用trunk為根目錄
[![](http://1.bp.blogspot.com/-SNggN_J2dx4/VCkcbDRKANI/AAAAAAAABpk/CnjPPxJyhcs/s1600/03.%E6%8C%87%E5%AE%9Atrunk.png)](http://1.bp.blogspot.com/-SNggN_J2dx4/VCkcbDRKANI/AAAAAAAABpk/CnjPPxJyhcs/s1600/03.%E6%8C%87%E5%AE%9Atrunk.png) 設定版號 [![](http://4.bp.blogspot.com/-58uT3yqTydA/VCkcfSDV4JI/AAAAAAAABps/BATMEcHU7zM/s1600/07.%E7%89%88%E8%99%9F.png)](http://4.bp.blogspot.com/-58uT3yqTydA/VCkcfSDV4JI/AAAAAAAABps/BATMEcHU7zM/s1600/07.%E7%89%88%E8%99%9F.png) 第一個建置步驟是NuGet Installer，選擇方案檔即可 如果有自訂的NuGet來源，要記得輸入 [![](http://2.bp.blogspot.com/-ysXS6Jmxytc/VCkckW2udOI/AAAAAAAABp0/xOI5ZJgOsjM/s1600/05.%E5%A5%97%E4%BB%B6%E9%82%84%E5%8E%9F.png)](http://2.bp.blogspot.com/-ysXS6Jmxytc/VCkckW2udOI/AAAAAAAABp0/xOI5ZJgOsjM/s1600/05.%E5%A5%97%E4%BB%B6%E9%82%84%E5%8E%9F.png) 接下來可以建置專案了，勾選方案檔即可 在Run OctoPack這邊也勾選起來，輸入建置版號即可
[![](http://2.bp.blogspot.com/-umKldtIhOao/VCkcpdq-FAI/AAAAAAAABp8/k7DVLFr6_Yo/s1600/06.VS%E5%BB%BA%E7%BD%AE.png)](http://2.bp.blogspot.com/-umKldtIhOao/VCkcpdq-FAI/AAAAAAAABp8/k7DVLFr6_Yo/s1600/06.VS%E5%BB%BA%E7%BD%AE.png) 建置成功就會得到打包好的套件 [![](http://2.bp.blogspot.com/-nz0WK09gIac/VCkcuMFYPtI/AAAAAAAABqE/Sg17Ph4-jqs/s1600/08.%E5%BB%BA%E7%BD%AE%E6%88%90%E5%8A%9F.png)](http://2.bp.blogspot.com/-nz0WK09gIac/VCkcuMFYPtI/AAAAAAAABqE/Sg17Ph4-jqs/s1600/08.%E5%BB%BA%E7%BD%AE%E6%88%90%E5%8A%9F.png) </description>
    </item>
    
    <item>
      <title>利用OctoPack套件打包Web專案</title>
      <link>http://example.org/posts/2014/09/%E5%88%A9%E7%94%A8octopack%E5%A5%97%E4%BB%B6%E6%89%93%E5%8C%85web%E5%B0%88%E6%A1%88/</link>
      <pubDate>Mon, 29 Sep 2014 16:18:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/%E5%88%A9%E7%94%A8octopack%E5%A5%97%E4%BB%B6%E6%89%93%E5%8C%85web%E5%B0%88%E6%A1%88/</guid>
      <description>首先開一個簡單的Web專案
[![](http://2.bp.blogspot.com/-At9zBC-g8H0/VCkVVV_qIlI/AAAAAAAABnc/FKQpNmjj5Pk/s1600/00.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-At9zBC-g8H0/VCkVVV_qIlI/AAAAAAAABnc/FKQpNmjj5Pk/s1600/00.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 透過NuGet安裝OctoPack套件
[![](http://4.bp.blogspot.com/-erYo_cgDq9M/VCkVaTdlNSI/AAAAAAAABnk/f9gARapVpLQ/s1600/01.%E5%AE%89%E8%A3%9DOctopack.png)](http://4.bp.blogspot.com/-erYo_cgDq9M/VCkVaTdlNSI/AAAAAAAABnk/f9gARapVpLQ/s1600/01.%E5%AE%89%E8%A3%9DOctopack.png) 簡單寫一個批次檔來測試
@echo off set MSBUILD=&#34;C:\Program Files (x86)\MSBuild\12.0\bin\amd64\msbuild.exe&#34; if not exist %MSBUILD% ( echo MSBuild not found exit ) %MSBUILD% WebApplication1.sln /p:Configuration=Release /p:RunOctoPack=true /m pause  編譯成功
[![](http://3.bp.blogspot.com/-JH4KBAfY3SI/VCkVj5U8T4I/AAAAAAAABns/xBUyl-VfTOI/s1600/02.%E7%B7%A8%E8%AD%AF%E6%88%90%E5%8A%9F.png)](http://3.bp.blogspot.com/-JH4KBAfY3SI/VCkVj5U8T4I/AAAAAAAABns/xBUyl-VfTOI/s1600/02.%E7%B7%A8%E8%AD%AF%E6%88%90%E5%8A%9F.png) bin資料夾下就會多了一個打包好的套件 [!</description>
    </item>
    
    <item>
      <title>TeamCity 安裝 Octopus Deploy Integration 套件</title>
      <link>http://example.org/posts/2014/09/teamcity-%E5%AE%89%E8%A3%9D-octopus-deploy-integration-%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Mon, 29 Sep 2014 14:46:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/teamcity-%E5%AE%89%E8%A3%9D-octopus-deploy-integration-%E5%A5%97%E4%BB%B6/</guid>
      <description>首先到官網下載TeamCity Plugin http://octopusdeploy.com/downloads
[![](http://3.bp.blogspot.com/-XNxjbgrc77Q/VCj_gC3rSjI/AAAAAAAABms/w1bLqfUxOcs/s1600/01.%E5%AE%98%E7%B6%B2%E4%B8%8B%E8%BC%89.png)](http://3.bp.blogspot.com/-XNxjbgrc77Q/VCj_gC3rSjI/AAAAAAAABms/w1bLqfUxOcs/s1600/01.%E5%AE%98%E7%B6%B2%E4%B8%8B%E8%BC%89.png) 把下載的zip檔，丟到TeamCity的Plugins資料夾下面
[![](http://4.bp.blogspot.com/-xoW5bvFoc8w/VCj_keKfYlI/AAAAAAAABm0/gMG9MFtcUbU/s1600/03.Plugins%E8%B3%87%E6%96%99%E5%A4%BE.png)](http://4.bp.blogspot.com/-xoW5bvFoc8w/VCj_keKfYlI/AAAAAAAABm0/gMG9MFtcUbU/s1600/03.Plugins%E8%B3%87%E6%96%99%E5%A4%BE.png) 重新啟動TeamCity後，就可以在Plugin列表中看到Octopus Deploy Integration套件
[![](http://3.bp.blogspot.com/-c9eevtd_CIA/VCj_tFiOC2I/AAAAAAAABm8/Hqca2hI8jyk/s1600/04.Plugin%E5%88%97%E8%A1%A8.png)](http://3.bp.blogspot.com/-c9eevtd_CIA/VCj_tFiOC2I/AAAAAAAABm8/Hqca2hI8jyk/s1600/04.Plugin%E5%88%97%E8%A1%A8.png) 在TeamCity的建置步驟中，會多出三個Runner Create release是新增發行版本，也可以順便部署的指定的環境 Deploy release是部署指定版本 Promote是把現有的版本從指定的環境部署到其他環境
[![](http://4.bp.blogspot.com/-8sf6WLcQtJ0/VCkBHJGU0rI/AAAAAAAABnE/j8I-2xap158/s1600/06.TeamCity%E5%BB%BA%E7%BD%AE%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE.png)](http://4.bp.blogspot.com/-8sf6WLcQtJ0/VCkBHJGU0rI/AAAAAAAABnE/j8I-2xap158/s1600/06.TeamCity%E5%BB%BA%E7%BD%AE%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE.png) 在VS建置Runner中，也會多出一個OctoPack的設定項目 勾選後會在建置參數中加入/p:RunOctoPack=true
[![](http://2.bp.blogspot.com/-ugwpKzT9x9Y/VCkBRaltmnI/AAAAAAAABnM/1uDWOhBxUKE/s1600/05.VS%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE.png)](http://2.bp.blogspot.com/-ugwpKzT9x9Y/VCkBRaltmnI/AAAAAAAABnM/1uDWOhBxUKE/s1600/05.VS%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE.png) 參考資料 官網的說明和影片 http://docs.octopusdeploy.com/display/OD/TeamCity</description>
    </item>
    
    <item>
      <title>NLog.Elmah</title>
      <link>http://example.org/posts/2014/09/nlog-elmah/</link>
      <pubDate>Thu, 18 Sep 2014 17:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/nlog-elmah/</guid>
      <description>NLog.Elmah套件，是用來擴充NLog的Target，可以寫到Elmah去 Elmah的用法可以參考之前的筆記 在設定好Elmah之後，開始來安裝NLog.Elmah 首先透過NuGet來安裝套件
[![](http://3.bp.blogspot.com/-7-Ra6YAOsCg/VBqk41izCYI/AAAAAAAABmI/cfGfIw-fulU/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://3.bp.blogspot.com/-7-Ra6YAOsCg/VBqk41izCYI/AAAAAAAABmI/cfGfIw-fulU/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 再來設定NLog來套用Elmah 主要是透過extensions來引用NLog.Elmah這個Assembly 就可以透過Elmah這個Target，把Log寫到Elmah去
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt; &amp;amp;lt;extensions&amp;amp;gt; &amp;amp;lt;add assembly=&amp;quot;NLog.Elmah&amp;quot;/&amp;amp;gt; &amp;amp;lt;/extensions&amp;amp;gt; &amp;amp;lt;targets&amp;amp;gt; &amp;amp;lt;target xsi:type=&amp;quot;Elmah&amp;quot; name=&amp;quot;elmah&amp;quot; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}&amp;quot;/&amp;amp;gt; &amp;amp;lt;/targets&amp;amp;gt; &amp;amp;lt;rules&amp;amp;gt; &amp;amp;lt;logger name=&amp;quot;*&amp;quot; minlevel=&amp;quot;Trace&amp;quot; writeTo=&amp;quot;elmah&amp;quot; /&amp;amp;gt; &amp;amp;lt;/rules&amp;amp;gt;  &amp;lt;/nlog&amp;gt; 
就可以在elmah中看到寫出的記錄，只是沒有Type，HttpStatusCode也都是0
[![](http://2.bp.blogspot.com/-IlyVebdJVBw/VBqmnO3VBJI/AAAAAAAABmU/MfcOlbctXZQ/s1600/02.%E5%AF%AB%E5%87%BA.png)](http://2.bp.blogspot.com/-IlyVebdJVBw/VBqmnO3VBJI/AAAAAAAABmU/MfcOlbctXZQ/s1600/02.%E5%AF%AB%E5%87%BA.png) 如果加上LogLevelAsType=&amp;quot;true&amp;quot;這個屬性
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; autoReload=&#34;true&#34;&amp;gt; &amp;amp;lt;extensions&amp;amp;gt; &amp;amp;lt;add assembly=&amp;quot;NLog.Elmah&amp;quot;/&amp;amp;gt; &amp;amp;lt;/extensions&amp;amp;gt; &amp;amp;lt;targets&amp;amp;gt; &amp;amp;lt;target xsi:type=&amp;quot;Elmah&amp;quot; name=&amp;quot;elmah&amp;quot; LogLevelAsType=&amp;quot;true&amp;quot; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}&amp;quot;/&amp;amp;gt; &amp;amp;lt;/targets&amp;amp;gt; &amp;amp;lt;rules&amp;amp;gt; &amp;amp;lt;logger name=&amp;quot;*&amp;quot; minlevel=&amp;quot;Trace&amp;quot; writeTo=&amp;quot;elmah&amp;quot; /&amp;amp;gt; &amp;amp;lt;/rules&amp;amp;gt;  &amp;lt;/nlog&amp;gt;</description>
    </item>
    
    <item>
      <title>NLog Database Target</title>
      <link>http://example.org/posts/2014/09/nlog-database-target/</link>
      <pubDate>Thu, 18 Sep 2014 13:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/nlog-database-target/</guid>
      <description>NLog要把Log存到資料庫的話，可以透過Database這個taget
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; autoReload=&#34;true&#34;&amp;gt; &amp;lt;targets&amp;gt; &amp;lt;target xsi:type=&#34;Database&#34; name=&#34;db&#34; connectionString=&#34;data source=(localdb)\v11.0;database=LogDB; trusted_connection=true;&#34; commandText=&#34;INSERT INTO NLog_Error(ThreadId, MachineName, LogName, LogLevel, LogMessage, CallSite, Exception, Stacktrace) VALUES (@ThreadId, @MachineName, @LogName, @LogLevel, @LogMessage, @CallSite, @Exception, @Stacktrace);&#34;&amp;gt; &amp;lt;parameter name=&#34;@ThreadId&#34; layout=&#34;${threadid}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@MachineName&#34; layout=&#34;${machinename}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@LogName&#34; layout=&#34;${logger}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@LogLevel&#34; layout=&#34;${level}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@LogMessage&#34; layout=&#34;${message}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@CallSite&#34; layout=&#34;${callsite:filename=true}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@Exception&#34; layout=&#34;${exception}&#34;/&amp;gt; &amp;lt;parameter name=&#34;@stacktrace&#34; layout=&#34;${stacktrace}&#34;/&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;/targets&amp;gt; &amp;lt;rules&amp;gt; &amp;lt;logger name=&#34;*&#34; minlevel=&#34;Trace&#34; writeTo=&#34;db&#34; /&amp;gt; &amp;lt;/rules&amp;gt; &amp;lt;/nlog&amp;gt; 資料庫的Table Schema</description>
    </item>
    
    <item>
      <title>Elmah (Error Logging Modules and Handlers)</title>
      <link>http://example.org/posts/2014/09/elmah-error-logging-modules-and-handlers/</link>
      <pubDate>Tue, 16 Sep 2014 17:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/09/elmah-error-logging-modules-and-handlers/</guid>
      <description>Elmah - Error Logging Modules and Handlers 是一個將未處理的Error記錄起來的模組，和包含一個顯示Log的處理常式 先開一個簡單的Web專案
[![](http://2.bp.blogspot.com/-TyswIpyTOZA/VBgAA5BWvHI/AAAAAAAABlE/NWJLVmrVZFc/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://2.bp.blogspot.com/-TyswIpyTOZA/VBgAA5BWvHI/AAAAAAAABlE/NWJLVmrVZFc/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 透過NuGet安裝Elmah套件 [![](http://2.bp.blogspot.com/-RWj6U08DY2Q/VBgAAxYwTpI/AAAAAAAABlA/S2JQbGbvSk0/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://2.bp.blogspot.com/-RWj6U08DY2Q/VBgAAxYwTpI/AAAAAAAABlA/S2JQbGbvSk0/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 從設定檔上可以看到包含四個模組 &amp;lt;configSections&amp;gt; &amp;lt;sectionGroup name=&#34;elmah&#34;&amp;gt; &amp;lt;section name=&#34;security&#34; requirePermission=&#34;false&#34; type=&#34;Elmah.SecuritySectionHandler, Elmah&#34; /&amp;gt; &amp;lt;section name=&#34;errorLog&#34; requirePermission=&#34;false&#34; type=&#34;Elmah.ErrorLogSectionHandler, Elmah&#34; /&amp;gt; &amp;lt;section name=&#34;errorMail&#34; requirePermission=&#34;false&#34; type=&#34;Elmah.ErrorMailSectionHandler, Elmah&#34; /&amp;gt; &amp;lt;section name=&#34;errorFilter&#34; requirePermission=&#34;false&#34; type=&#34;Elmah.ErrorFilterSectionHandler, Elmah&#34; /&amp;gt; &amp;lt;/sectionGroup&amp;gt; &amp;lt;/configSections&amp;gt;  security，用來設定是否允許遠端讀取elmah.axd， errorLog，用來設定Log要存在什麼地方，例如XML或DB，預設是Memory errorMail，用來把Log送出EMail通知 errorFilter，用來過濾Log elmah.axd是用來顯示Log的處理常式，如果允許遠端存取的時後，在安全性上要特別注意
[![](http://4.bp.blogspot.com/-_Ps8vplqOuY/VBgBnFqEfmI/AAAAAAAABlQ/MDIVTYN3ufQ/s1600/03.Elmah.axd.png)](http://4.bp.blogspot.com/-_Ps8vplqOuY/VBgBnFqEfmI/AAAAAAAABlQ/MDIVTYN3ufQ/s1600/03.Elmah.axd.png) 如果要把記錄存在資料庫的話，以下用SQL Server為例子 首先到官網取得資料表結構 或是透過NuGet安裝Elmah.SqlServer套件
[![](http://1.bp.blogspot.com/-sb1kLHepB98/VBgCV60F_-I/AAAAAAAABlY/wAbY9vnHuwc/s1600/04.elmah.sqlserver.png)](http://1.bp.blogspot.com/-sb1kLHepB98/VBgCV60F_-I/AAAAAAAABlY/wAbY9vnHuwc/s1600/04.elmah.sqlserver.png) 就可以在App_Readme資料夾下找到SQL檔案 [![](http://1.bp.blogspot.com/-_jDh4hF8WcM/VBgCeqV0q5I/AAAAAAAABlg/VbW97vrHEQo/s1600/05.sql%E6%AA%94.png)](http://1.bp.blogspot.com/-_jDh4hF8WcM/VBgCeqV0q5I/AAAAAAAABlg/VbW97vrHEQo/s1600/05.sql%E6%AA%94.png) 不過最好把NTEXT形態，改成NVARCHAR(MAX)比較好 [![](http://1.bp.blogspot.com/-vde3bv6V62U/VBgCm2s-pKI/AAAAAAAABlo/FQNfBqMyUpQ/s1600/06.%E6%94%B9%E6%AC%84%E4%BD%8D.png)](http://1.bp.blogspot.com/-vde3bv6V62U/VBgCm2s-pKI/AAAAAAAABlo/FQNfBqMyUpQ/s1600/06.%E6%94%B9%E6%AC%84%E4%BD%8D.png) 準備好資料庫，包含ELMAH_Error資料表和三隻預儲程序 [![](http://3.bp.blogspot.com/-n9HDn_3aLM0/VBgDwExhESI/AAAAAAAABlw/-P7RYpLoBXA/s1600/07.%E6%BA%96%E5%82%99%E8%B3%87%E6%96%99%E5%BA%AB.png)](http://3.bp.blogspot.com/-n9HDn_3aLM0/VBgDwExhESI/AAAAAAAABlw/-P7RYpLoBXA/s1600/07.%E6%BA%96%E5%82%99%E8%B3%87%E6%96%99%E5%BA%AB.png)透過errorLog設定Log寫到SQL Server &amp;lt;elmah&amp;gt; &amp;lt;security allowRemoteAccess=&#34;false&#34; /&amp;gt; &amp;lt;errorLog type=&#34;Elmah.SqlErrorLog, Elmah&#34; connectionString=&#34;data source=(localdb)\v11.0; database=ElmahDB; trusted_connection=true&#34;</description>
    </item>
    
    <item>
      <title>個人常用Log格式筆記</title>
      <link>http://example.org/posts/2014/08/%E5%80%8B%E4%BA%BA%E5%B8%B8%E7%94%A8log%E6%A0%BC%E5%BC%8F%E7%AD%86%E8%A8%98/</link>
      <pubDate>Thu, 28 Aug 2014 18:35:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/%E5%80%8B%E4%BA%BA%E5%B8%B8%E7%94%A8log%E6%A0%BC%E5%BC%8F%E7%AD%86%E8%A8%98/</guid>
      <description>個人常用的Log格式，在此記錄一下
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; autoReload=&#34;true&#34;&amp;gt; &amp;amp;lt;!--  See https://github.com/nlog/nlog/wiki/Configuration-file for information on customizing logging rules and outputs. &amp;ndash;&amp;gt; &amp;lt;targets async=&amp;quot;true&amp;rdquo;&amp;gt; &amp;lt;default-wrapper xsi:type=&amp;quot;BufferingWrapper&amp;rdquo; bufferSize=&amp;quot;500&amp;rdquo; flushTimeout=&amp;quot;3000&amp;rdquo; /&amp;gt;
 &amp;amp;lt;target xsi:type=&amp;quot;Chainsaw&amp;quot; name=&amp;quot;console&amp;quot; address=&amp;quot;udp4://127.0.0.1:7071&amp;quot; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}&amp;quot; /&amp;amp;gt; &amp;amp;lt;target xsi:type=&amp;quot;File&amp;quot; name=&amp;quot;file&amp;quot; fileName=&amp;quot;D:\LogFiles\Proj_Log\${shortdate}\${date:format=yyyy-MM-dd-HH}.log&amp;quot; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}${newline}${onexception:inner=${newline}Exception:${newline}${exception:format=ToString}${newline}}STACKTRACE:${newline}${stacktrace:format=DetailedFlat}&amp;quot; /&amp;amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;pre class=&amp;quot;brush:xml&amp;quot;&amp;gt; &amp;amp;lt;/targets&amp;amp;gt; &amp;amp;lt;rules&amp;amp;gt; &amp;amp;lt;logger name=&amp;quot;*&amp;quot; minlevel=&amp;quot;Trace&amp;quot; writeTo=&amp;quot;console,file&amp;quot; /&amp;amp;gt; &amp;amp;lt;/rules&amp;amp;gt;  &amp;lt;/nlog&amp;gt;</description>
    </item>
    
    <item>
      <title>Select2套件搭配MVC專案</title>
      <link>http://example.org/posts/2014/08/select2%E5%A5%97%E4%BB%B6%E6%90%AD%E9%85%8Dmvc%E5%B0%88%E6%A1%88/</link>
      <pubDate>Tue, 26 Aug 2014 14:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/select2%E5%A5%97%E4%BB%B6%E6%90%AD%E9%85%8Dmvc%E5%B0%88%E6%A1%88/</guid>
      <description>首先開一個MVC專案
[![](http://1.bp.blogspot.com/-S1UzcfC0Y1o/U_wrT7TrJtI/AAAAAAAABj8/lbIoB2J113k/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://1.bp.blogspot.com/-S1UzcfC0Y1o/U_wrT7TrJtI/AAAAAAAABj8/lbIoB2J113k/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 透過NuGet引用Select2.js套件 [![](http://3.bp.blogspot.com/-r0BD97ZmLPs/U_wrT5xcPTI/AAAAAAAABkE/LM86LOjUes0/s1600/02.%E5%BC%95%E7%94%A8%E5%8F%83%E8%80%83.png)](http://3.bp.blogspot.com/-r0BD97ZmLPs/U_wrT5xcPTI/AAAAAAAABkE/LM86LOjUes0/s1600/02.%E5%BC%95%E7%94%A8%E5%8F%83%E8%80%83.png) 因為MVC使用Bootstrap框架，所以需要搭配[select2-bootstrap.css](http://zh-tw.cdnjs.com/libraries/select2)來修正畫面的輸出 [![](http://1.bp.blogspot.com/-D8ZI1EUPzcI/U_wrTxzEHOI/AAAAAAAABkA/rzGEPLiMOzw/s1600/03.SelectBootstrap.png)](http://1.bp.blogspot.com/-D8ZI1EUPzcI/U_wrTxzEHOI/AAAAAAAABkA/rzGEPLiMOzw/s1600/03.SelectBootstrap.png) 新增一個HomeModel用來傳遞資料 public class HomeModel { public IEnumerable&amp;lt;int&amp;gt; DataList { get; set; } }  在Controler中透過ViewBag，傳入一個MultiSelectList public ActionResult Index() { this.ViewBag.DataList = new MultiSelectList( new List&amp;lt;SelectListItem&amp;gt;() { new SelectListItem{ Text=&#34;aaa&#34;, Value=&#34;1&#34;}, new SelectListItem{ Text=&#34;bbb&#34;, Value=&#34;2&#34;}, new SelectListItem{ Text=&#34;ccc&#34;, Value=&#34;3&#34;}, }, &#34;Value&#34;, &#34;Text&#34;); return View();  }  在View中透過@Html.ListBoxFor輸出下拉選單
@using WebApplication1.ViewModels @model HomeModel @{ ViewBag.Title = &#34;Index&#34;; } &amp;lt;h2&amp;gt;Index&amp;lt;/h2&amp;gt;
&amp;lt;div class=&amp;quot;form-horizontal&amp;rdquo;&amp;gt; &amp;lt;div class=&amp;quot;form-group&amp;rdquo;&amp;gt; @Html.LabelFor(x =&amp;gt; x.DataList, new { @class = &amp;ldquo;col-md-2 label-control&amp;rdquo; }) &amp;lt;div class=&amp;quot;col-md-10&amp;rdquo;&amp;gt; @Html.</description>
    </item>
    
    <item>
      <title>Select2 套件基本用法</title>
      <link>http://example.org/posts/2014/08/select2-%E5%A5%97%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 22 Aug 2014 14:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/select2-%E5%A5%97%E4%BB%B6%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>Select2 套件是一個加強下拉選單的套件，官網提供了許多詳細的示範 這裡用一個簡單的例子來介紹這個套件 首先開一個Web專案
[![](http://3.bp.blogspot.com/--1rBcMtW1Y0/U_bkynIQwNI/AAAAAAAABic/OlnDplvnK8I/s1600/01.%E9%96%8B%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/--1rBcMtW1Y0/U_bkynIQwNI/AAAAAAAABic/OlnDplvnK8I/s1600/01.%E9%96%8B%E5%B0%88%E6%A1%88.png) 用一個html頁面來練習 [![](http://2.bp.blogspot.com/-ToVRuf067nQ/U_bk416LpLI/AAAAAAAABik/Nsn2uLwtv3E/s1600/02.%E6%96%B0%E5%A2%9E%E9%A0%81%E9%9D%A2.png)](http://2.bp.blogspot.com/-ToVRuf067nQ/U_bk416LpLI/AAAAAAAABik/Nsn2uLwtv3E/s1600/02.%E6%96%B0%E5%A2%9E%E9%A0%81%E9%9D%A2.png) 透過NuGet新增select2.js套件 [![](http://1.bp.blogspot.com/-LsOCKW5DqQc/U_bk_S6qg0I/AAAAAAAABis/y5G7T6NOi9U/s1600/03.select2%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-LsOCKW5DqQc/U_bk_S6qg0I/AAAAAAAABis/y5G7T6NOi9U/s1600/03.select2%E5%A5%97%E4%BB%B6.png) select2.js套件包含了CSS和JavaScript和語系 [![](http://4.bp.blogspot.com/-Hy2TdLfmd7s/U_blD22Tm9I/AAAAAAAABi0/vvZC8707Vl4/s1600/04.%E6%AA%94%E6%A1%88%E7%B5%90%E6%A7%8B.png)](http://4.bp.blogspot.com/-Hy2TdLfmd7s/U_blD22Tm9I/AAAAAAAABi0/vvZC8707Vl4/s1600/04.%E6%AA%94%E6%A1%88%E7%B5%90%E6%A7%8B.png) 在html裡面引用CSS和JavaScript，該套件相依於JQuery，最低版本1.7以上 [![](http://4.bp.blogspot.com/-lKdMrr5EHxA/U_blHcBAGQI/AAAAAAAABi8/9EF63xjvhCc/s1600/05.%E5%BC%95%E5%85%A5%E6%AA%94%E6%A1%88.png)](http://4.bp.blogspot.com/-lKdMrr5EHxA/U_blHcBAGQI/AAAAAAAABi8/9EF63xjvhCc/s1600/05.%E5%BC%95%E5%85%A5%E6%AA%94%E6%A1%88.png) 手動輸入一個下拉選單 [![](http://1.bp.blogspot.com/-pz9TUisEjcc/U_blLbXR6jI/AAAAAAAABjE/4VypAffM6h8/s1600/06.%E5%8A%A0%E5%85%A5%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE.png)](http://1.bp.blogspot.com/-pz9TUisEjcc/U_blLbXR6jI/AAAAAAAABjE/4VypAffM6h8/s1600/06.%E5%8A%A0%E5%85%A5%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE.png) 一般的下拉選單看起來像這個樣子 [![](http://3.bp.blogspot.com/-rXD3i6ufPks/U_blO9ka_eI/AAAAAAAABjM/WNgZSkYrBF4/s1600/07.%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE%E7%9A%84%E6%A8%A3%E5%AD%90.png)](http://3.bp.blogspot.com/-rXD3i6ufPks/U_blO9ka_eI/AAAAAAAABjM/WNgZSkYrBF4/s1600/07.%E4%B8%8B%E6%8B%89%E9%81%B8%E5%96%AE%E7%9A%84%E6%A8%A3%E5%AD%90.png) 透過JQuery啟用select2 [![](http://4.bp.blogspot.com/-GBLzgQcd89M/U_blSWWuvlI/AAAAAAAABjU/KBZSwC8Jd2o/s1600/08.%E5%8A%A0%E5%85%A5JQuery.png)](http://4.bp.blogspot.com/-GBLzgQcd89M/U_blSWWuvlI/AAAAAAAABjU/KBZSwC8Jd2o/s1600/08.%E5%8A%A0%E5%85%A5JQuery.png) 看起來漂亮多了，而已還有查詢過濾的功能 [![](http://1.bp.blogspot.com/-EoqcBDY_4Ho/U_blWRJoSyI/AAAAAAAABjc/xnp3Qs6hpmg/s1600/09.%E5%A5%97%E4%BB%B6select2%E7%9A%84%E6%A8%A3%E5%AD%90.png)](http://1.bp.blogspot.com/-EoqcBDY_4Ho/U_blWRJoSyI/AAAAAAAABjc/xnp3Qs6hpmg/s1600/09.%E5%A5%97%E4%BB%B6select2%E7%9A%84%E6%A8%A3%E5%AD%90.png) 加入多選屬性 [![](http://3.bp.blogspot.com/-BRgdJ_TQ1lI/U_blaO3szHI/AAAAAAAABjk/reLmSAgoFe0/s1600/10.%E5%8A%A0%E5%85%A5%E5%A4%9A%E9%81%B8.png)](http://3.bp.blogspot.com/-BRgdJ_TQ1lI/U_blaO3szHI/AAAAAAAABjk/reLmSAgoFe0/s1600/10.%E5%8A%A0%E5%85%A5%E5%A4%9A%E9%81%B8.png) Select2套件的多選功能 [![](http://1.bp.blogspot.com/-5tm6ArFLpfI/U_bld8UpKyI/AAAAAAAABjs/Nha7t2csK6M/s1600/11.%E5%A4%9A%E9%81%B8%E7%9A%84%E6%A8%A3%E5%AD%90.png)](http://1.bp.blogspot.com/-5tm6ArFLpfI/U_bld8UpKyI/AAAAAAAABjs/Nha7t2csK6M/s1600/11.%E5%A4%9A%E9%81%B8%E7%9A%84%E6%A8%A3%E5%AD%90.png) 參考資料 Select2 官網
Select 2 CDN
Select2 Bootstrap 3 CSS</description>
    </item>
    
    <item>
      <title>密碼複雜度</title>
      <link>http://example.org/posts/2014/08/%E5%AF%86%E7%A2%BC%E8%A4%87%E9%9B%9C%E5%BA%A6/</link>
      <pubDate>Tue, 19 Aug 2014 16:57:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/%E5%AF%86%E7%A2%BC%E8%A4%87%E9%9B%9C%E5%BA%A6/</guid>
      <description>密碼複雜度利用Regular Expression可以簡單地完成 先用一個簡單的例子，6~12個英數字混合的規則&amp;lt;div&amp;gt; &amp;lt;asp:TextBox ID=&#34;Tbx_Password&#34; runat=&#34;server&#34; /&amp;gt; &amp;lt;asp:Button ID=&#34;Btn_Save&#34; Text=&#34;Save&#34; OnClick=&#34;Btn_Save_Click&#34; runat=&#34;server&#34; /&amp;gt; &amp;lt;asp:RequiredFieldValidator ID=&#34;Rfv_Password&#34; ControlToValidate=&#34;Tbx_Password&#34; ErrorMessage=&#34;密碼不可空白&#34; SetFocusOnError=&#34;true&#34; Text=&#34;密碼不可空白&#34; ForeColor=&#34;Red&#34; Display=&#34;Dynamic&#34; runat=&#34;server&#34; /&amp;gt; &amp;lt;asp:RegularExpressionValidator ID=&#34;Reg_Password&#34; ControlToValidate=&#34;Tbx_Password&#34; ValidationExpression=&#34;^(?!.*[oO0])(?=.*[a-zA-Z])(?=.*[\d])(?!.*[\d][\d][\d]).{6,12}$&#34; ErrorMessage=&#34;密碼長度6~12英數混合&#34; Text=&#34;密碼長度6~12英數混合&#34; SetFocusOnError=&#34;true&#34; ForeColor=&#34;Red&#34; Display=&#34;Dynamic&#34; runat=&#34;server&#34; /&amp;gt; &amp;lt;/div&amp;gt;  ^開頭符號(?=.*[a-zA-Z])最少一個英文字(?=.*[\d])最少一個數字.{6,12}6~12長度$結尾符號 利用群組的功能還可以組合出更多的規則 (?=.*[!@#$%^&amp;amp;*])最少一個符號(?=.*[\d][\d])連續兩個數字(?=.*[a-z][a-z])連續兩個小寫英文(?!.*[\d][\d][\d])禁止連續三個數字(?!.*[oO0])禁止小寫的o和大寫的O和數字的0 如果不是WebForm專案，也可以透過System.Text.RegularExpressions空間下的Regex物件來使用 protected void Btn_Save_Click(object sender, EventArgs e) { Regex reg = new Regex(@&#34;^(?!.*[oO0])(?=.*[a-zA-Z])(?=.*[\d])(?!.*[\d][\d][\d]).{6,12}$&#34;); if (reg.IsMatch(Tbx_Password.Text)) { Response.Write(&#34;Match&#34;); } else { Response.Write(&#34;Not Match&#34;); } } </description>
    </item>
    
    <item>
      <title>AutoMapper 全域設定</title>
      <link>http://example.org/posts/2014/08/automapper-%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 06 Aug 2014 13:32:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/automapper-%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A/</guid>
      <description>AutoMapper可以把物件的對應設定集中在一個設定檔裡面，然後用Profile來做群組分類 用一個簡單的MVC網站來做例子 首先是HomeModel物件public class HomeModel { public int ModelId { get; set; } public string ModelName { get; set; } }  再來是HomeViewModel物件public class HomeViewModel { public int ViewModelId { get; set; } public string ViewModelName { get; set; } }  接下來在App_Start裡面新增一個AutoMapperConfig檔案public class AutoMapperConfig { public static void Configure() { Mapper.Initialize(x =&amp;gt; { x.AddProfile&amp;lt;HomeProfile&amp;gt;(); }); } private class HomeProfile : Profile { protected override void Configure() { Mapper.CreateMap&amp;amp;lt;HomeModel, HomeViewModel&amp;amp;gt;() .</description>
    </item>
    
    <item>
      <title>AutoMapper 自訂對應關系</title>
      <link>http://example.org/posts/2014/08/automapper-%E8%87%AA%E8%A8%82%E5%B0%8D%E6%87%89%E9%97%9C%E7%B3%BB/</link>
      <pubDate>Tue, 05 Aug 2014 18:18:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/automapper-%E8%87%AA%E8%A8%82%E5%B0%8D%E6%87%89%E9%97%9C%E7%B3%BB/</guid>
      <description>在來源和目的物件中，如果屬性名稱和型態都相同的話，AutoMapper會自動轉換 但通常事情不會這麼單純，很多時後我們會需要指定轉換的方式，用一個簡單的例子來說明 首先是來源的Model物件public class DemoModel { public int CustId { get; set; } public string CustName { get; set; } public bool CustGender { get; set; } }  再來是要轉換的ViewModel物件public class DemoViewModel { public int Id { get; set; } public string Name { get; set; } public string FullName { get; set; } public string Gender { get; set; } public DateTime Date { get; set; } }  轉換的設定方式 Ignore是用來略過對應，不給值 MapFrom是用來指定對應的屬性名稱，或是組合多個屬性值 ResolveUsing是指定自訂的型別轉換方式 UseValue是在轉換的過程中直接給值 NullSubstitute是在原始值為空的時後才給值 Condition傳入一個條件為true才給值public class Class1 { public void GetViewModel() { Mapper.</description>
    </item>
    
    <item>
      <title>AutoMapper 筆記</title>
      <link>http://example.org/posts/2014/08/automapper-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 05 Aug 2014 17:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/automapper-%E7%AD%86%E8%A8%98/</guid>
      <description>1. AutoMapper 簡單用法 http://blog.developer.idv.tw/2014/08/automapper_5.html
2. AutoMapper 自訂對應關系 http://blog.developer.idv.tw/2014/08/automapper_60.html
3. AutoMapper 全域設定 http://blog.developer.idv.tw/2014/08/automapper_6.html
參考資源
AutoMapper 官方文件</description>
    </item>
    
    <item>
      <title>AutoMapper 簡單用法</title>
      <link>http://example.org/posts/2014/08/automapper-%E7%B0%A1%E5%96%AE%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 05 Aug 2014 17:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/08/automapper-%E7%B0%A1%E5%96%AE%E7%94%A8%E6%B3%95/</guid>
      <description>AutoMapper是一個用來處理類別之間轉換的套件，以下用個Model和ViewModel的轉換當例子 首先是一個簡單的Modelpublic class DemoModel { public int Id { get; set; } public string Name { get; set; } }  再來是對應的ViewModelpublic class DemoViewModel { public int Id { get; set; } public string Name { get; set; } }  兩個類別要轉換的一般寫法private static void V1() { DemoModel c1 = new DemoModel() { Id = 123, Name = &amp;ldquo;abc&amp;rdquo; };
DemoViewModel c2 = new DemoViewModel { Id = c1.Id, Name = c1.</description>
    </item>
    
    <item>
      <title>Server2008R2 System佔用80Port的問題</title>
      <link>http://example.org/posts/2014/07/server2008r2-system%E4%BD%94%E7%94%A880port%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Mon, 07 Jul 2014 17:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/07/server2008r2-system%E4%BD%94%E7%94%A880port%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>最近常碰到80Port被作業系統佔用的問題，原因大部份都是不正常關機引起來 每隔一段時間要找解法，總是忘了一些關鍵字，所以在此備忘一下
首先打開命令字元，透過netstat的-o選項，可以顯示出佔用的PID 小技巧是透過管線用findstr過濾80 port，資料會更清楚一些 netstat -nao | findstr 80
[![](http://4.bp.blogspot.com/-SSuCyUSsSnw/U7pgnq53qPI/AAAAAAAABho/hg6SklZ9agY/s1600/01.pid.png)](http://4.bp.blogspot.com/-SSuCyUSsSnw/U7pgnq53qPI/AAAAAAAABho/hg6SklZ9agY/s1600/01.pid.png) 打開工作管理員，可以看到PID4是SYSTEM [![](http://2.bp.blogspot.com/-9GhaTmuwWkI/U7phN98gW7I/AAAAAAAABhw/5m-VC4rZZAA/s1600/04.task.png)](http://2.bp.blogspot.com/-9GhaTmuwWkI/U7phN98gW7I/AAAAAAAABhw/5m-VC4rZZAA/s1600/04.task.png) 先用net stop http關閉http服務 [![](http://2.bp.blogspot.com/-AIUUtYYITAY/U7phTeHe4tI/AAAAAAAABh4/A0yys6zFSa4/s1600/02.stop.png)](http://2.bp.blogspot.com/-AIUUtYYITAY/U7phTeHe4tI/AAAAAAAABh4/A0yys6zFSa4/s1600/02.stop.png) 再用sc config http start= disabled就行了 注意等號和值之間必須空一格 然後重開機就解決囉</description>
    </item>
    
    <item>
      <title>StyleCop 中文環境設定</title>
      <link>http://example.org/posts/2014/07/stylecop-%E4%B8%AD%E6%96%87%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 07 Jul 2014 16:51:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/07/stylecop-%E4%B8%AD%E6%96%87%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</guid>
      <description>Stylecop使用一段時間後，感覺有兩個預設規則不太適合中文環境，所以個人會在專案中取消這兩條規則
首先在專案上按右鍵，選擇StyleCop Settings
[![](http://3.bp.blogspot.com/-34eXH7WWiD0/U7pdzXekbgI/AAAAAAAABgs/bnrXu5C4jkk/s1600/01.%E8%A8%AD%E5%AE%9A.png)](http://3.bp.blogspot.com/-34eXH7WWiD0/U7pdzXekbgI/AAAAAAAABgs/bnrXu5C4jkk/s1600/01.%E8%A8%AD%E5%AE%9A.png) 在Rules中的Documentation Rules中，再打開Element Documentation [![](http://1.bp.blogspot.com/-cs3042c1How/U7pdzXgvvJI/AAAAAAAABhI/_83uHNC8X2A/s1600/02.%25E9%25A0%2585%25E7%259B%25AE.png)](http://1.bp.blogspot.com/-cs3042c1How/U7pdzXgvvJI/AAAAAAAABhI/_83uHNC8X2A/s1600/02.%25E9%25A0%2585%25E7%259B%25AE.png) 取消SA1630 DocumentationTextMustContainWhitespace [![](http://3.bp.blogspot.com/-81-MVHrilwI/U7pehwbCa6I/AAAAAAAABhM/CqJfG8KK2nk/s1600/03.SA1630.png)](http://3.bp.blogspot.com/-81-MVHrilwI/U7pehwbCa6I/AAAAAAAABhM/CqJfG8KK2nk/s1600/03.SA1630.png) 取消SA1650 ElementDocumentationMustBeSpelledCorrectly [![](http://1.bp.blogspot.com/-MqmnKPxdPvI/U7peqPbdq_I/AAAAAAAABhU/K6hrfHfMCs0/s1600/04.SA1650.png)](http://1.bp.blogspot.com/-MqmnKPxdPvI/U7peqPbdq_I/AAAAAAAABhU/K6hrfHfMCs0/s1600/04.SA1650.png) 設定好按OK後，專案下面就會多出一個隱藏檔，檔名為Settings.StyleCop [![](http://2.bp.blogspot.com/-FdbCL8bUzX8/U7pe2nDlO-I/AAAAAAAABhc/rvkpRQFm3Ls/s1600/05.%E9%9A%B1%E8%97%8F%E6%AA%94.png)](http://2.bp.blogspot.com/-FdbCL8bUzX8/U7pe2nDlO-I/AAAAAAAABhc/rvkpRQFm3Ls/s1600/05.%E9%9A%B1%E8%97%8F%E6%AA%94.png) 內容是XML格式的文件，可以看的出來，就是把那兩條規則關閉而已 &amp;lt;StyleCopSettings Version=&#34;105&#34;&amp;gt; &amp;lt;Analyzers&amp;gt; &amp;lt;Analyzer AnalyzerId=&#34;StyleCop.CSharp.DocumentationRules&#34;&amp;gt; &amp;lt;Rules&amp;gt; &amp;lt;Rule Name=&#34;DocumentationTextMustContainWhitespace&#34;&amp;gt; &amp;lt;RuleSettings&amp;gt; &amp;lt;BooleanProperty Name=&#34;Enabled&#34;&amp;gt;False&amp;lt;/BooleanProperty&amp;gt; &amp;lt;/RuleSettings&amp;gt; &amp;lt;/Rule&amp;gt; &amp;lt;Rule Name=&#34;ElementDocumentationMustBeSpelledCorrectly&#34;&amp;gt; &amp;lt;RuleSettings&amp;gt; &amp;lt;BooleanProperty Name=&#34;Enabled&#34;&amp;gt;False&amp;lt;/BooleanProperty&amp;gt; &amp;lt;/RuleSettings&amp;gt; &amp;lt;/Rule&amp;gt; &amp;lt;/Rules&amp;gt; &amp;lt;AnalyzerSettings /&amp;gt; &amp;lt;/Analyzer&amp;gt; &amp;lt;/Analyzers&amp;gt; &amp;lt;/StyleCopSettings&amp;gt; </description>
    </item>
    
    <item>
      <title>Visual Studio 資料庫專案</title>
      <link>http://example.org/posts/2014/06/visual-studio-%E8%B3%87%E6%96%99%E5%BA%AB%E5%B0%88%E6%A1%88/</link>
      <pubDate>Tue, 17 Jun 2014 18:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/visual-studio-%E8%B3%87%E6%96%99%E5%BA%AB%E5%B0%88%E6%A1%88/</guid>
      <description>首先開一個新專案，選擇SQL Server資料庫專案
[![](http://2.bp.blogspot.com/-TqYagomYUG0/U6APChmvlvI/AAAAAAAABes/SYUg_DQmxyo/s1600/01.%25E9%2596%258B%25E6%2596%25B0%25E5%25B0%2588%25E6%25A1%2588.png)](http://2.bp.blogspot.com/-TqYagomYUG0/U6APChmvlvI/AAAAAAAABes/SYUg_DQmxyo/s1600/01.%25E9%2596%258B%25E6%2596%25B0%25E5%25B0%2588%25E6%25A1%2588.png) 匯入的方式有三種，這邊用現有的資料庫當例子 [![](http://4.bp.blogspot.com/-vzW-ukm2OxE/U6APVp7OrNI/AAAAAAAABfQ/k4iepZU_0wA/s1600/02.%25E5%258C%25AF%25E5%2585%25A5.png)](http://4.bp.blogspot.com/-vzW-ukm2OxE/U6APVp7OrNI/AAAAAAAABfQ/k4iepZU_0wA/s1600/02.%25E5%258C%25AF%25E5%2585%25A5.png) 輸入要匯入的資料庫連線資料 [![](http://3.bp.blogspot.com/-hOsS_RXJajE/U6APVdfAZmI/AAAAAAAABfY/oO2HQNcDcUM/s1600/03.%25E8%25A8%25AD%25E5%25AE%259A%25E8%25B3%2587%25E6%2596%2599%25E5%25BA%25AB%25E9%2580%25A3%25E7%25B7%259A.png)](http://3.bp.blogspot.com/-hOsS_RXJajE/U6APVdfAZmI/AAAAAAAABfY/oO2HQNcDcUM/s1600/03.%25E8%25A8%25AD%25E5%25AE%259A%25E8%25B3%2587%25E6%2596%2599%25E5%25BA%25AB%25E9%2580%25A3%25E7%25B7%259A.png) 接下來需要一點時間來把資料庫物件轉成對應的檔案 [![](http://2.bp.blogspot.com/--FHHY35xyxo/U6APVKJMJtI/AAAAAAAABe4/co7hQ7vvirM/s1600/04.%25E5%258C%25AF%25E5%2585%25A5%25E5%25AE%258C%25E6%2588%2590.png)](http://2.bp.blogspot.com/--FHHY35xyxo/U6APVKJMJtI/AAAAAAAABe4/co7hQ7vvirM/s1600/04.%25E5%258C%25AF%25E5%2585%25A5%25E5%25AE%258C%25E6%2588%2590.png) 匯入成功後會得到一堆物件定義的檔案 [![](http://1.bp.blogspot.com/-LRIOtxZZ1io/U6AQunB6iUI/AAAAAAAABgE/fwmTcRpphhY/s1600/05.1%E5%AE%8C%E6%88%90%E7%9A%84%E6%A8%A3%E5%AD%90.png)](http://1.bp.blogspot.com/-LRIOtxZZ1io/U6AQunB6iUI/AAAAAAAABgE/fwmTcRpphhY/s1600/05.1%E5%AE%8C%E6%88%90%E7%9A%84%E6%A8%A3%E5%AD%90.png) 接下來用新增一個資料表當例子 [![](http://2.bp.blogspot.com/-uthvGT3J7kE/U6APV0bF4II/AAAAAAAABfE/UbHIjLCztf0/s1600/05.%25E5%258A%25A0%25E5%2585%25A5%25E6%2596%25B0%25E9%25A0%2585%25E7%259B%25AE.png)](http://2.bp.blogspot.com/-uthvGT3J7kE/U6APV0bF4II/AAAAAAAABfE/UbHIjLCztf0/s1600/05.%25E5%258A%25A0%25E5%2585%25A5%25E6%2596%25B0%25E9%25A0%2585%25E7%259B%25AE.png) 輸入要新增的資料表的名稱 [![](http://3.bp.blogspot.com/-Pg61sJvN6Ko/U6APWOvui2I/AAAAAAAABfM/HdF5U5Fkf6c/s1600/06.%25E5%258A%25A0%25E5%2585%25A5%25E8%25B3%2587%25E6%2596%2599%25E8%25A1%25A8.png)](http://3.bp.blogspot.com/-Pg61sJvN6Ko/U6APWOvui2I/AAAAAAAABfM/HdF5U5Fkf6c/s1600/06.%25E5%258A%25A0%25E5%2585%25A5%25E8%25B3%2587%25E6%2596%2599%25E8%25A1%25A8.png) 簡單建立幾個欄位，完成後存檔 [![](http://4.bp.blogspot.com/-ZbQe18CtgaA/U6APXuQ8xVI/AAAAAAAABfo/BBqGe5A_qpE/s1600/07.%25E7%25B7%25A8%25E8%25BC%25AF%25E6%25A0%25BC%25E5%25BC%258F.png)](http://4.bp.blogspot.com/-ZbQe18CtgaA/U6APXuQ8xVI/AAAAAAAABfo/BBqGe5A_qpE/s1600/07.%25E7%25B7%25A8%25E8%25BC%25AF%25E6%25A0%25BC%25E5%25BC%258F.png) 編譯後可以得到一個dacpac檔案，就可以拿到目標伺服器上面去部署 這邊用直接發行的方式來部署 [![](http://2.bp.blogspot.com/-rw7LiyRoGBw/U6APXP14k2I/AAAAAAAABfs/0iGLFw2aaD0/s1600/08.%25E7%2599%25BC%25E8%25A1%258C.png)](http://2.bp.blogspot.com/-rw7LiyRoGBw/U6APXP14k2I/AAAAAAAABfs/0iGLFw2aaD0/s1600/08.%25E7%2599%25BC%25E8%25A1%258C.png) 輸入要部署的目標伺服器的連線字串後按下發行 [![](http://3.bp.blogspot.com/-1T2G9FZjoDg/U6APXYXEBsI/AAAAAAAABf4/rHo2_CktK-Q/s1600/09.%25E7%2599%25BC%25E8%25A1%258C%25E8%25A8%25AD%25E5%25AE%259A.png)](http://3.bp.blogspot.com/-1T2G9FZjoDg/U6APXYXEBsI/AAAAAAAABf4/rHo2_CktK-Q/s1600/09.%25E7%2599%25BC%25E8%25A1%258C%25E8%25A8%25AD%25E5%25AE%259A.png) 順利發行成功 [![](http://4.bp.blogspot.com/-N2DmfwTtiT4/U6APX4WCNXI/AAAAAAAABf0/0rkjS3envR0/s1600/10.%25E7%2599%25BC%25E8%25A1%258C%25E6%2588%2590%25E5%258A%259F.png)](http://4.bp.blogspot.com/-N2DmfwTtiT4/U6APX4WCNXI/AAAAAAAABf0/0rkjS3envR0/s1600/10.%25E7%2599%25BC%25E8%25A1%258C%25E6%2588%2590%25E5%258A%259F.png) 目標伺服器上就可以看到新增的資料表囉 [!</description>
    </item>
    
    <item>
      <title>SQL Server 資料層應用程式</title>
      <link>http://example.org/posts/2014/06/sql-server-%E8%B3%87%E6%96%99%E5%B1%A4%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</link>
      <pubDate>Tue, 17 Jun 2014 15:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/sql-server-%E8%B3%87%E6%96%99%E5%B1%A4%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</guid>
      <description>為了方便練習，所以透過SQL LocalDB建立兩個執行個體[![](http://1.bp.blogspot.com/-PYm-vP7F9SQ/U5_tXS5y79I/AAAAAAAABbY/QPu4WEiLHPY/s1600/01.%25E5%25BB%25BA%25E7%2592%25B0%25E5%25A2%2583.png)](http://1.bp.blogspot.com/-PYm-vP7F9SQ/U5_tXS5y79I/AAAAAAAABbY/QPu4WEiLHPY/s1600/01.%25E5%25BB%25BA%25E7%2592%25B0%25E5%25A2%2583.png) 再來建立一個練習用的資料庫，這裡用北風資料庫為例子[![](http://4.bp.blogspot.com/-QazOoP4b4vU/U5_tXe_J0JI/AAAAAAAABbk/pq6cEvQRC8w/s1600/02.%25E5%258C%2597%25E9%25A2%25A8%25E8%25B3%2587%25E6%2596%2599%25E5%25BA%25AB.png)](http://4.bp.blogspot.com/-QazOoP4b4vU/U5_tXe_J0JI/AAAAAAAABbk/pq6cEvQRC8w/s1600/02.%25E5%258C%2597%25E9%25A2%25A8%25E8%25B3%2587%25E6%2596%2599%25E5%25BA%25AB.png) 首先把資料庫註冊成資料層應用程式[![](http://1.bp.blogspot.com/-e0MTcSY8jTM/U5_tXfsjfyI/AAAAAAAABbw/Pufq3ukfQOQ/s1600/03.%25E8%25A8%25BB%25E5%2586%258A.png)](http://1.bp.blogspot.com/-e0MTcSY8jTM/U5_tXfsjfyI/AAAAAAAABbw/Pufq3ukfQOQ/s1600/03.%25E8%25A8%25BB%25E5%2586%258A.png) 設定屬性 [![](http://1.bp.blogspot.com/-Pl3r-mf7M_s/U5_tXxN09nI/AAAAAAAABbo/FdNbbjp1-P8/s1600/04.%25E8%25A8%25BB%25E5%2586%258A%25E5%25B1%25AC%25E6%2580%25A7.png)](http://1.bp.blogspot.com/-Pl3r-mf7M_s/U5_tXxN09nI/AAAAAAAABbo/FdNbbjp1-P8/s1600/04.%25E8%25A8%25BB%25E5%2586%258A%25E5%25B1%25AC%25E6%2580%25A7.png) 驗證與摘要 [![](http://4.bp.blogspot.com/-c4VmOP54fdc/U5_tYMrk4pI/AAAAAAAABeY/uCabHv_R9SA/s1600/05.%25E8%25A8%25BB%25E5%2586%258A%25E6%2591%2598%25E8%25A6%2581.png)](http://4.bp.blogspot.com/-c4VmOP54fdc/U5_tYMrk4pI/AAAAAAAABeY/uCabHv_R9SA/s1600/05.%25E8%25A8%25BB%25E5%2586%258A%25E6%2591%2598%25E8%25A6%2581.png) 註冊完成 [![](http://4.bp.blogspot.com/-VFcJVLC0KFU/U5_tYT_tj-I/AAAAAAAABb4/a8aRtT07uE4/s1600/06.%25E8%25A8%25BB%25E5%2586%258A%25E5%25AE%258C%25E6%2588%2590.png)](http://4.bp.blogspot.com/-VFcJVLC0KFU/U5_tYT_tj-I/AAAAAAAABb4/a8aRtT07uE4/s1600/06.%25E8%25A8%25BB%25E5%2586%258A%25E5%25AE%258C%25E6%2588%2590.png) 再來擷取資料層應用程式，不用註冊也可以直接擷取[![](http://1.bp.blogspot.com/-RSIBOQZNGCM/U5_tY546YjI/AAAAAAAABec/W0PK5ycOF_k/s1600/07.%25E6%2593%25B7%25E5%258F%2596.png)](http://1.bp.blogspot.com/-RSIBOQZNGCM/U5_tY546YjI/AAAAAAAABec/W0PK5ycOF_k/s1600/07.%25E6%2593%25B7%25E5%258F%2596.png) 選擇檔案輸出的路徑和檔名 [![](http://3.bp.blogspot.com/-LLMbv0HkHOE/U5_tZNY6SaI/AAAAAAAABcM/spVOVImkRGk/s1600/08.%25E6%2593%25B7%25E5%258F%2596%25E5%25B1%25AC%25E6%2580%25A7.png)](http://3.bp.blogspot.com/-LLMbv0HkHOE/U5_tZNY6SaI/AAAAAAAABcM/spVOVImkRGk/s1600/08.%25E6%2593%25B7%25E5%258F%2596%25E5%25B1%25AC%25E6%2580%25A7.png) 驗證與摘要 [![](http://4.bp.blogspot.com/-61wr623zbFM/U5_tZRMNqLI/AAAAAAAABcU/WeBsHrL7iwY/s1600/09.%25E6%2593%25B7%25E5%258F%2596%25E6%2591%2598%25E8%25A6%2581.png)](http://4.bp.blogspot.com/-61wr623zbFM/U5_tZRMNqLI/AAAAAAAABcU/WeBsHrL7iwY/s1600/09.%25E6%2593%25B7%25E5%258F%2596%25E6%2591%2598%25E8%25A6%2581.png) 封裝完成 [![](http://4.bp.blogspot.com/-cLyszCK0cvA/U5_tZ8t6XyI/AAAAAAAABck/OAtx5RDGruQ/s1600/10.%25E6%2593%25B7%25E5%258F%2596%25E5%25AE%258C%25E6%2588%2590.png)](http://4.bp.blogspot.com/-cLyszCK0cvA/U5_tZ8t6XyI/AAAAAAAABck/OAtx5RDGruQ/s1600/10.%25E6%2593%25B7%25E5%258F%2596%25E5%25AE%258C%25E6%2588%2590.png) 再來把擷取出來的檔案部署到第二個環境[![](http://4.bp.blogspot.com/-HW0bgK0INAE/U5_taIk8hfI/AAAAAAAABeI/MdQ6LrTAvcc/s1600/11.%25E9%2583%25A8%25E7%25BD%25B2.png)](http://4.bp.blogspot.com/-HW0bgK0INAE/U5_taIk8hfI/AAAAAAAABeI/MdQ6LrTAvcc/s1600/11.%25E9%2583%25A8%25E7%25BD%25B2.png) 選擇剛輸出的檔案 [![](http://4.bp.blogspot.com/-hD5cEqITLcM/U5_taFULOqI/AAAAAAAABcg/mxhSAzjH0wA/s1600/12.%25E9%2583%25A8%25E6%259A%2591%25E9%2581%25B8%25E6%25AA%2594.png)](http://4.bp.blogspot.com/-hD5cEqITLcM/U5_taFULOqI/AAAAAAAABcg/mxhSAzjH0wA/s1600/12.%25E9%2583%25A8%25E6%259A%2591%25E9%2581%25B8%25E6%25AA%2594.png) 設定要部署的資料庫名稱 [![](http://3.bp.blogspot.com/--HEJU57mtNU/U5_taRjuiiI/AAAAAAAABc0/u6ZaFtAdBiA/s1600/13.%25E9%2583%25A8%25E7%25BD%25B2%25E5%2590%258D%25E7%25A8%25B1.png)](http://3.bp.blogspot.com/--HEJU57mtNU/U5_taRjuiiI/AAAAAAAABc0/u6ZaFtAdBiA/s1600/13.%25E9%2583%25A8%25E7%25BD%25B2%25E5%2590%258D%25E7%25A8%25B1.png) 部署摘要 [![](http://3.bp.blogspot.com/-kAAdV8Uf_WE/U5_tazOwtdI/AAAAAAAABco/st3V2Dhj1zk/s1600/14.%25E9%2583%25A8%25E7%25BD%25B2%25E6%2591%2598%25E8%25A6%2581.png)](http://3.bp.blogspot.com/-kAAdV8Uf_WE/U5_tazOwtdI/AAAAAAAABco/st3V2Dhj1zk/s1600/14.%25E9%2583%25A8%25E7%25BD%25B2%25E6%2591%2598%25E8%25A6%2581.png) 部署完成 [![](http://4.bp.blogspot.com/-h_FTGXGLzVA/U5_tbOrYbXI/AAAAAAAABc8/0bFQzE8Av30/s1600/15.%25E9%2583%25A8%25E7%25BD%25B2%25E5%25AE%258C%25E6%2588%2590.png)](http://4.bp.blogspot.com/-h_FTGXGLzVA/U5_tbOrYbXI/AAAAAAAABc8/0bFQzE8Av30/s1600/15.%25E9%2583%25A8%25E7%25BD%25B2%25E5%25AE%258C%25E6%2588%2590.png) 第二個環境也有北風資料庫了 [![](http://2.bp.blogspot.com/-KhTDtavtW30/U5_tbfNVwCI/AAAAAAAABeQ/RIxgYNMd3z8/s1600/16.%25E9%2583%25A8%25E7%25BD%25B2%25E5%25BE%258C%25E7%259A%2584%25E6%25A8%25A3%25E5%25AD%2590.png)](http://2.bp.blogspot.com/-KhTDtavtW30/U5_tbfNVwCI/AAAAAAAABeQ/RIxgYNMd3z8/s1600/16.%25E9%2583%25A8%25E7%25BD%25B2%25E5%25BE%258C%25E7%259A%2584%25E6%25A8%25A3%25E5%25AD%2590.png) 再來異動第一個環境的資料庫的schema，這裡用新增一個資料表當例子 [![](http://4.bp.blogspot.com/-Z9Ah5th7ysI/U5_tcFWAAFI/AAAAAAAABdI/9CNike4If7w/s1600/17.%25E6%2596%25B0%25E5%25A2%259E%25E8%25B3%2587%25E6%2596%2599%25E8%25A1%25A8.png)](http://4.bp.blogspot.com/-Z9Ah5th7ysI/U5_tcFWAAFI/AAAAAAAABdI/9CNike4If7w/s1600/17.%25E6%2596%25B0%25E5%25A2%259E%25E8%25B3%2587%25E6%2596%2599%25E8%25A1%25A8.png) 再擷取一次資料層應用程式 [![](http://2.bp.blogspot.com/-aefoQHvcJwA/U5_tcsH9hwI/AAAAAAAABdc/kYcdxZRIwEg/s1600/18-1.%25E5%2586%258D%25E6%2593%25B7%25E5%258F%2596%25E4%25B8%2580%25E6%25AC%25A1.png)](http://2.bp.blogspot.com/-aefoQHvcJwA/U5_tcsH9hwI/AAAAAAAABdc/kYcdxZRIwEg/s1600/18-1.%25E5%2586%258D%25E6%2593%25B7%25E5%258F%2596%25E4%25B8%2580%25E6%25AC%25A1.png) 在第二個環境上用升級的方式匯入 [![](http://3.bp.blogspot.com/-fmVxwKzU1Zk/U5_tcqyqHTI/AAAAAAAABdU/xYCAJbOrZVw/s1600/18-2.%25E5%258D%2587%25E7%25B4%259A.png)](http://3.bp.blogspot.com/-fmVxwKzU1Zk/U5_tcqyqHTI/AAAAAAAABdU/xYCAJbOrZVw/s1600/18-2.%25E5%258D%2587%25E7%25B4%259A.png) 選擇剛匯出的檔案 [![](http://1.bp.blogspot.com/-0dr008Hag30/U5_tdDzNlDI/AAAAAAAABeU/QFWzbi0JWZY/s1600/19.%25E5%258D%2587%25E7%25B4%259A%25E9%2581%25B8%25E6%25AA%2594.png)](http://1.bp.blogspot.com/-0dr008Hag30/U5_tdDzNlDI/AAAAAAAABeU/QFWzbi0JWZY/s1600/19.%25E5%258D%2587%25E7%25B4%259A%25E9%2581%25B8%25E6%25AA%2594.png) 這邊的尚未變更指的是從上次建立資料層應用程式後都沒有變更Schema 而不是和要升級的檔案比對的結果 [![](http://3.bp.blogspot.com/-u0kKhoucR7Q/U5_tdQeE3MI/AAAAAAAABeA/IRpxqd8w-Z4/s1600/20.%25E5%258D%2587%25E7%25B4%259A%25E5%2581%25B5%25E6%25B8%25AC%25E7%25B5%2590%25E6%259E%259C.png)](http://3.bp.blogspot.com/-u0kKhoucR7Q/U5_tdQeE3MI/AAAAAAAABeA/IRpxqd8w-Z4/s1600/20.%25E5%258D%2587%25E7%25B4%259A%25E5%2581%25B5%25E6%25B8%25AC%25E7%25B5%2590%25E6%259E%259C.png) 升級選項 [![](http://1.bp.blogspot.com/-WZ8HUXKankM/U5_tdzT3F1I/AAAAAAAABdo/Vldgx3uqvPs/s1600/21.%25E5%258D%2587%25E7%25B4%259A%25E9%2581%25B8%25E9%25A0%2585.png)](http://1.bp.blogspot.com/-WZ8HUXKankM/U5_tdzT3F1I/AAAAAAAABdo/Vldgx3uqvPs/s1600/21.%25E5%258D%2587%25E7%25B4%259A%25E9%2581%25B8%25E9%25A0%2585.png) 升級計畫[![](http://4.bp.blogspot.com/-BDKkSYVWaHE/U5_td354TOI/AAAAAAAABd8/54GfkmMNWwU/s1600/22.%25E5%258D%2587%25E7%25B4%259A%25E8%25A8%2588%25E5%258A%2583.png)](http://4.bp.blogspot.com/-BDKkSYVWaHE/U5_td354TOI/AAAAAAAABd8/54GfkmMNWwU/s1600/22.%25E5%258D%2587%25E7%25B4%259A%25E8%25A8%2588%25E5%258A%2583.png) 升級摘要 [![](http://4.bp.blogspot.com/-Mw0clAb-f5Q/U5_teYqP2zI/AAAAAAAABd0/Gwo6zt5Tr2c/s1600/23.%25E5%258D%2587%25E7%25B4%259A%25E6%2591%2598%25E8%25A6%2581.png)](http://4.bp.blogspot.com/-Mw0clAb-f5Q/U5_teYqP2zI/AAAAAAAABd0/Gwo6zt5Tr2c/s1600/23.%25E5%258D%2587%25E7%25B4%259A%25E6%2591%2598%25E8%25A6%2581.png) 升級完成 [![](http://3.bp.blogspot.com/-IE5yhPETFqQ/U5_telmV4VI/AAAAAAAABd4/Lse01AvDSkQ/s1600/24.%25E5%258D%2587%25E7%25B4%259A%25E5%25AE%258C%25E6%2588%2590.png)](http://3.bp.blogspot.com/-IE5yhPETFqQ/U5_telmV4VI/AAAAAAAABd4/Lse01AvDSkQ/s1600/24.%25E5%258D%2587%25E7%25B4%259A%25E5%25AE%258C%25E6%2588%2590.png) 升級後可以看到新增的資料表 [![](http://4.bp.blogspot.com/-va77B4s-mHI/U5_te15PgUI/AAAAAAAABeM/Wp1USWOjwS4/s1600/25.%25E5%258D%2587%25E7%25B4%259A%25E5%25BE%258C%25E7%259A%2584%25E6%25A8%25A3%25E5%25AD%2590.png)](http://4.bp.blogspot.com/-va77B4s-mHI/U5_te15PgUI/AAAAAAAABeM/Wp1USWOjwS4/s1600/25.%25E5%258D%2587%25E7%25B4%259A%25E5%25BE%258C%25E7%259A%2584%25E6%25A8%25A3%25E5%25AD%2590.png) </description>
    </item>
    
    <item>
      <title>TeamCity 整合 StyleCop</title>
      <link>http://example.org/posts/2014/06/teamcity-%E6%95%B4%E5%90%88-stylecop/</link>
      <pubDate>Fri, 06 Jun 2014 14:10:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/teamcity-%E6%95%B4%E5%90%88-stylecop/</guid>
      <description>先打開管理頁面的Plugin List，選擇Available Plugin
[![](http://3.bp.blogspot.com/-oDy7ga_ahsU/U5FaL4uSbTI/AAAAAAAABbI/bTAKqhJ56MQ/s1600/00.AvailablePlugin.png)](http://3.bp.blogspot.com/-oDy7ga_ahsU/U5FaL4uSbTI/AAAAAAAABbI/bTAKqhJ56MQ/s1600/00.AvailablePlugin.png) 找到StyleCop Runner [![](http://4.bp.blogspot.com/-Y0Omog127jg/U5FUq4nBNBI/AAAAAAAABZU/zO4XKx93Lxs/s1600/01.Download.png)](http://4.bp.blogspot.com/-Y0Omog127jg/U5FUq4nBNBI/AAAAAAAABZU/zO4XKx93Lxs/s1600/01.Download.png) 下載最新版本的StyleCop Plugin [![](http://4.bp.blogspot.com/-ivWisnEKuWc/U5FUvySNMtI/AAAAAAAABZc/aQ4RiKU-5Bo/s1600/02.DW.png)](http://4.bp.blogspot.com/-ivWisnEKuWc/U5FUvySNMtI/AAAAAAAABZc/aQ4RiKU-5Bo/s1600/02.DW.png)  把檔案解壓縮後會得到不帶版本號的Stylecop.zip [![](http://4.bp.blogspot.com/-3HndiN2ipLY/U5FU5j_9pvI/AAAAAAAABZk/01PnJvAMqqc/s1600/03.%E8%A7%A3%E5%A3%93%E7%B8%AE.png)](http://4.bp.blogspot.com/-3HndiN2ipLY/U5FU5j_9pvI/AAAAAAAABZk/01PnJvAMqqc/s1600/03.%E8%A7%A3%E5%A3%93%E7%B8%AE.png)  打開管理頁面的PluginList，點擊Upload plugin zip連結[![](http://4.bp.blogspot.com/-ZjTZdgwWpyc/U5FVDXCQCwI/AAAAAAAABZs/oZOweJhsvoU/s1600/04.PluginList.png)](http://4.bp.blogspot.com/-ZjTZdgwWpyc/U5FVDXCQCwI/AAAAAAAABZs/oZOweJhsvoU/s1600/04.PluginList.png) 選擇剛解壓縮出來的Stylecop.zip 上傳到Plugins資料夾下面[![](http://2.bp.blogspot.com/-fMJo2RjNF1U/U5FVbVB5FEI/AAAAAAAABZ0/83_2pD59O64/s1600/05.Upload.png)](http://2.bp.blogspot.com/-fMJo2RjNF1U/U5FVbVB5FEI/AAAAAAAABZ0/83_2pD59O64/s1600/05.Upload.png) 重新啟動TeamCity服務[![](http://4.bp.blogspot.com/-3pEb8Sw8AXs/U5FVrYnQCEI/AAAAAAAABZ8/EY91_ySL0WI/s1600/06.Restart.png)](http://4.bp.blogspot.com/-3pEb8Sw8AXs/U5FVrYnQCEI/AAAAAAAABZ8/EY91_ySL0WI/s1600/06.Restart.png) Plugin列表中可以看到StyleCop套件的資訊[![](http://2.bp.blogspot.com/-4boCfNRDupM/U5FVwJcK6xI/AAAAAAAABaE/NBUmGkfZgeI/s1600/07.AvailablePlugin.png)](http://2.bp.blogspot.com/-4boCfNRDupM/U5FVwJcK6xI/AAAAAAAABaE/NBUmGkfZgeI/s1600/07.AvailablePlugin.png) Build Step中就可以選擇StyleCop這個Runner [![](http://1.bp.blogspot.com/-avk9twecrxM/U5FWpaYUPoI/AAAAAAAABaQ/88_LXNHQWGE/s1600/08.BuildStep.png)](http://1.bp.blogspot.com/-avk9twecrxM/U5FWpaYUPoI/AAAAAAAABaQ/88_LXNHQWGE/s1600/08.BuildStep.png)輸入選擇要檢查的檔案路徑和StyleCop.dll的路徑[![](http://3.bp.blogspot.com/-Ei7SIMcLMug/U5FXaI7eU0I/AAAAAAAABaY/ony7YCKBOg4/s1600/09.Setting.png)](http://3.bp.blogspot.com/-Ei7SIMcLMug/U5FXaI7eU0I/AAAAAAAABaY/ony7YCKBOg4/s1600/09.Setting.png) 預設會把找到的問題當做錯誤，造成建置失敗 [![](http://4.bp.blogspot.com/-Dt_BfUwJBrY/U5FYOQXn35I/AAAAAAAABak/sLzXeq4qBFc/s1600/10.Error.png)](http://4.bp.blogspot.com/-Dt_BfUwJBrY/U5FYOQXn35I/AAAAAAAABak/sLzXeq4qBFc/s1600/10.Error.png) 可以修改Max Viloations，這是最大問題數的數量，超過就失敗，負數為不限制 另一個方法是勾選Treat errors as warnings，把錯誤當成警告 [![](http://4.bp.blogspot.com/-kcKgpBM4Egw/U5FYUjd0VXI/AAAAAAAABas/REIcyjgbnoo/s1600/11.Warn.png)](http://4.bp.blogspot.com/-kcKgpBM4Egw/U5FYUjd0VXI/AAAAAAAABas/REIcyjgbnoo/s1600/11.Warn.png) 建置結果會順利通過，但有檢查到的數量顯示 [![](http://4.bp.blogspot.com/-pR918wQlwpo/U5FYc5uSooI/AAAAAAAABa0/fL2NrOd53uQ/s1600/12.Warb.png)](http://4.bp.blogspot.com/-pR918wQlwpo/U5FYc5uSooI/AAAAAAAABa0/fL2NrOd53uQ/s1600/12.Warb.png) 點選該筆建置內容，就會看到StyleCop的詳細資料 [![](http://2.bp.blogspot.com/-NyrSWvNkOE0/U5FYgh8O-hI/AAAAAAAABa8/tpdrcCrEjww/s1600/13.Detail.png)](http://2.bp.blogspot.com/-NyrSWvNkOE0/U5FYgh8O-hI/AAAAAAAABa8/tpdrcCrEjww/s1600/13.Detail.png)  </description>
    </item>
    
    <item>
      <title>AngularJS 筆記</title>
      <link>http://example.org/posts/2014/06/angularjs-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Thu, 05 Jun 2014 14:16:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/angularjs-%E7%AD%86%E8%A8%98/</guid>
      <description>學習資源 AngularJS Guide 官方文件 egghead.io 有很多教學影片 AngularJS 學習資源</description>
    </item>
    
    <item>
      <title>SVN Global Ignore</title>
      <link>http://example.org/posts/2014/06/svn-global-ignore/</link>
      <pubDate>Wed, 04 Jun 2014 15:16:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/svn-global-ignore/</guid>
      <description>首先是全域設定檔，位置在%AppData%\Subversion\config
[![](http://2.bp.blogspot.com/-FM871yMVeAk/U47GlEqY72I/AAAAAAAABYU/64h9gk3UKdA/s1600/01.AppData.png)](http://2.bp.blogspot.com/-FM871yMVeAk/U47GlEqY72I/AAAAAAAABYU/64h9gk3UKdA/s1600/01.AppData.png) 搜尋global-ignores可以找到用空白做分隔符號的定義，把前面的註解拿掉就啟用了 [![](http://3.bp.blogspot.com/-pFLsgz-iI1g/U47Gp5yQy-I/AAAAAAAABYc/oXGRy_TdFlU/s1600/02.%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A%E6%AA%94.png)](http://3.bp.blogspot.com/-pFLsgz-iI1g/U47Gp5yQy-I/AAAAAAAABYc/oXGRy_TdFlU/s1600/02.%E5%85%A8%E5%9F%9F%E8%A8%AD%E5%AE%9A%E6%AA%94.png) 第二個地方是TortoiseSVN的設定 [![](http://4.bp.blogspot.com/-EAFVkbWuhgc/U47G0IU_feI/AAAAAAAABYk/KqVOEaHncNw/s1600/03.%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-EAFVkbWuhgc/U47G0IU_feI/AAAAAAAABYk/KqVOEaHncNw/s1600/03.%E8%A8%AD%E5%AE%9A.png) 一樣是用空白做分隔符號的定義，如果全域設定檔啟用，將會覆蓋掉這裡的功能 [![](http://4.bp.blogspot.com/-6sryhUbg0_s/U47G339iAhI/AAAAAAAABYs/HyHpafPFSqs/s1600/04.%E8%A8%AD%E5%AE%9A%E5%AE%9A%E7%BE%A9.png)](http://4.bp.blogspot.com/-6sryhUbg0_s/U47G339iAhI/AAAAAAAABYs/HyHpafPFSqs/s1600/04.%E8%A8%AD%E5%AE%9A%E5%AE%9A%E7%BE%A9.png) 第三個地方在專案上，透過TortoiseSVN的屬性來設定比較簡單 [![](http://3.bp.blogspot.com/-lnqmV1M5DBA/U47HF3bufYI/AAAAAAAABY0/6zOSvVNAkpI/s1600/05.%E5%B1%AC%E6%80%A7.png)](http://3.bp.blogspot.com/-lnqmV1M5DBA/U47HF3bufYI/AAAAAAAABY0/6zOSvVNAkpI/s1600/05.%E5%B1%AC%E6%80%A7.png) 如果沒設定過的話，需要手動新增一個設定
[![](http://4.bp.blogspot.com/-LElnfs052J8/U47HLdv-_vI/AAAAAAAABY8/2GVqjqwcQSc/s1600/06.%E6%96%B0%E5%A2%9E%E5%B1%AC%E6%80%A7.png)](http://4.bp.blogspot.com/-LElnfs052J8/U47HLdv-_vI/AAAAAAAABY8/2GVqjqwcQSc/s1600/06.%E6%96%B0%E5%A2%9E%E5%B1%AC%E6%80%A7.png) 有svn:global-ignores的屬性可以設定，每一行代表一個設定 [![](http://3.bp.blogspot.com/-YXgcpmrROFs/U47HVQpk0TI/AAAAAAAABZE/Z97mqy1K5tY/s1600/07.GlobalIgnore.png)](http://3.bp.blogspot.com/-YXgcpmrROFs/U47HVQpk0TI/AAAAAAAABZE/Z97mqy1K5tY/s1600/07.GlobalIgnore.png) C#常用的忽略列表有
#OS junk files [Tt]humbs.db #Visual Studio files [Bb]in [Oo]bj *.user *.suo *.[Cc]ache
#NuGet packages *.nupkg
SQL Server files *.mdf *.ldf</description>
    </item>
    
    <item>
      <title>Controller加入單元測試</title>
      <link>http://example.org/posts/2014/06/controller%E5%8A%A0%E5%85%A5%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/</link>
      <pubDate>Wed, 04 Jun 2014 11:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/controller%E5%8A%A0%E5%85%A5%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/</guid>
      <description>前言 前面介紹過Repository Pattern用來隔離資料庫，和Autoface注入介面，接下來可以在Controller中寫一些測試項目來驗證流程正確與否
首先加入一個測試專案，名稱為要測試的專案名稱後面加.Tests 依照MVC的習慣，加入一個Controllers資料夾 在資料夾下新增一個單元測試檔案，名稱為要測試的控制器名稱後面加Test 首先初始化一些要共用的變數 private Mock&amp;lt;IGuestbookRepository&amp;gt; repository; private GuestbookController ctrl; [TestInitialize] public void GuestbookControllerTestInitialize() { this.repository = new Mock&amp;lt;IGuestbookRepository&amp;gt;(); this.repository .Setup(x =&amp;gt; x.Find(It.IsIn&amp;lt;int&amp;gt;(1))) .Returns(new Guestbook()); this.ctrl = new GuestbookController(this.repository.Object); } Index相關測試 [TestMethod] public void Index_GET_Return_ViewResult() { var view = this.ctrl.Index() as ViewResult; Assert.IsNotNull(view); } Create相關測試 [TestMethod] public void Create_GET_Return_ViewResult() { var view = this.ctrl.Create() as ViewResult; Assert.IsNotNull(view); } [TestMethod] public void Create_POST_Success_Return_RedirectToRouteResult() { var model = new Guestbook(); var view = this.</description>
    </item>
    
    <item>
      <title>Autofac 一種IOC容器</title>
      <link>http://example.org/posts/2014/06/autofac-%E4%B8%80%E7%A8%AEioc%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Wed, 04 Jun 2014 10:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/autofac-%E4%B8%80%E7%A8%AEioc%E5%AE%B9%E5%99%A8/</guid>
      <description>前言 接續之前提到的IOC 控制反轉 &amp;amp; DI 依賴注入和Repostitory Pattern，在Controller中提供了Repository介面的建構式，接下來就來介紹如何在網站啟動的時後，利用IOC容器把介面注入
首先透過NuGet安裝Autofac套件 ](http://1.bp.blogspot.com/-ntFr0enXaqk/U46KMynHIaI/AAAAAAAABXk/B81ttCgQGnQ/s1600/01.NuGet.png)
因為是MVC專案，所以還要再裝一個MVC整合套件 ](http://2.bp.blogspot.com/-7rOCvs9AgLQ/U46KQfEB8II/AAAAAAAABXs/P4WQJ1sUg5E/s1600/02.MVCPAckage.png)
依照慣例在App_Start資料夾下新增一個AutofacConfig namespace WebApplication1 { using Autofac; using Autofac.Integration.Mvc; using System.Reflection; using System.Web.Mvc; public class AutofacConfig { public static void RegisterDependies() { ContainerBuilder builder = new ContainerBuilder(); builder.RegisterControllers(Assembly.GetExecutingAssembly()); builder.RegisterAssemblyTypes(Assembly.GetExecutingAssembly()) .Where(x =&amp;amp;gt; x.Namespace.EndsWith(&amp;#34;Repositories&amp;#34;)) .AsImplementedInterfaces(); IContainer container = builder.Build(); DependencyResolver.SetResolver(new AutofacDependencyResolver(container)); } } } 在Global的Application_Start事件中啟用Autofac namespace WebApplication1 { using System.Web.Mvc; using System.Web.Routing; public class MvcApplication : System.Web.HttpApplication { protected void Application_Start() { AreaRegistration.</description>
    </item>
    
    <item>
      <title>Moq 一個用來模擬物件的類別庫</title>
      <link>http://example.org/posts/2014/06/moq-%E4%B8%80%E5%80%8B%E7%94%A8%E4%BE%86%E6%A8%A1%E6%93%AC%E7%89%A9%E4%BB%B6%E7%9A%84%E9%A1%9E%E5%88%A5%E5%BA%AB/</link>
      <pubDate>Tue, 03 Jun 2014 15:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/06/moq-%E4%B8%80%E5%80%8B%E7%94%A8%E4%BE%86%E6%A8%A1%E6%93%AC%E7%89%A9%E4%BB%B6%E7%9A%84%E9%A1%9E%E5%88%A5%E5%BA%AB/</guid>
      <description>前言 當系統利用介面完成物件來隔離外部物件之後，為了方便測試通常會寫一些假的物件來抽換 但功能越來越多之後，測試的假類別也越多，檔案不好管理 這時後可以讓Moq利用反射的方式讓我們很容易地新增假物件 Moq只能模擬公開的介面，如果是繼承的類別則需要Virtual才能模擬
要使用Moq很簡單，利用NuGet安裝套件就行了
](http://1.bp.blogspot.com/-cwTzcXKv6l0/U408MjPlOYI/AAAAAAAABXU/yxksMr1XfO8/s1600/01.Moq.png)
用一個簡單的IFoo介面來當例子 public interface IFoo { void F1(); int F2(); int F3(int x); event EventHandler&amp;amp;lt;object&amp;amp;gt; MyEvent; } 首先建立一個IFoo型別的Mock物件 在建構式中可以指定MockBehavior來設定模擬物件的程度 Strict是限制需要完整模擬物件，Loose則不需要 預設為Default，也就是Loose
private Mock&amp;amp;lt;IFoo&amp;amp;gt; mock; [TestInitialize] public void MyTestInitialize() { this.mock = new Mock&amp;amp;lt;IFoo&amp;amp;gt;(); } 一開始先用沒有回傳值的函式當例子，就先不做更多的設定 直接使用Mock物件的Object屬性取得模擬的假物件就可以使用了 這裡用Verify和Times來檢查該函式的呼叫次數
[TestMethod] public void TestMethod1() { Mock&amp;amp;lt;IFoo&amp;amp;gt; foo = new Mock&amp;amp;lt;IFoo&amp;amp;gt;(); foo.Object.F1(); foo.Verify(x =&amp;amp;gt; x.F1(), Times.Once()); } 再來用一個有回傳值的函式當例子，所以再加上回傳值的設定 這裡的意思是呼叫F2函式的時後，總是回傳123的值回來
[TestMethod] public void TestMethod2() { Mock&amp;amp;lt;IFoo&amp;amp;gt; foo = new Mock&amp;amp;lt;IFoo&amp;amp;gt;(); foo.</description>
    </item>
    
    <item>
      <title>Repostitory Pattern</title>
      <link>http://example.org/posts/2014/05/repostitory-pattern/</link>
      <pubDate>Wed, 28 May 2014 18:12:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/05/repostitory-pattern/</guid>
      <description>Repository Pattern 是一個用來切割資料存取層和商業邏輯層的模式 針對資料的存取提供了基本的新增、修改、刪除、查詢等操作 返回的對象應該為IQueryable以供商業邏輯做更進一步的處理 這樣的好處是商業邏輯不直接處理資料的存取，方便之後抽換資料存取層，也方便單元測試 以下用一個簡單的留言版當例子透過ADO.NET和Entity Framework來存取資料 首先準備好留言版的資料庫，資料表就簡單的用GuestbookId和Message就好
[![](http://3.bp.blogspot.com/-NkgUfftgZso/U4Wx3J8w7QI/AAAAAAAABW0/3iDzzqb62zA/s1600/01.DB.png)](http://3.bp.blogspot.com/-NkgUfftgZso/U4Wx3J8w7QI/AAAAAAAABW0/3iDzzqb62zA/s1600/01.DB.png) 定義一個Guestbook的Entity namespace WebApplication1.Models { using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; [Table(&amp;quot;Guestbook&amp;quot;)] public class Guestbook { [Key] public int GuestbookId { get; set; } public string Message { get; set; } }  }  順便定義一個DbContext
namespace WebApplication1.Models { using System.Data.Entity; public class GuestbookContext : DbContext { public DbSet&amp;lt;Guestbook&amp;gt; Guestbook { get; set; } } }  定義一個IGuestbookRepository介面
namespace WebApplication1.Repositories { using System; using System.</description>
    </item>
    
    <item>
      <title>Markdown 輕量級的標記語言</title>
      <link>http://example.org/posts/2014/05/markdown-%E8%BC%95%E9%87%8F%E7%B4%9A%E7%9A%84%E6%A8%99%E8%A8%98%E8%AA%9E%E8%A8%80/</link>
      <pubDate>Wed, 28 May 2014 14:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/05/markdown-%E8%BC%95%E9%87%8F%E7%B4%9A%E7%9A%84%E6%A8%99%E8%A8%98%E8%AA%9E%E8%A8%80/</guid>
      <description>Markdown是一種輕量級的標記語言，用來讓人們簡單地編寫易讀易懂的純文字檔案，然後轉換成有效的XHTML或HTML格式
Visual Studio中的Web Essentials擴充套件，已支援Markdown格式的預覽和編輯，只要副檔名為md的文字檔就行了
[![](http://3.bp.blogspot.com/-aR6ZJA7wwns/U4VejzBJkyI/AAAAAAAABVU/YgExBpMryjY/s1600/01.+WebEssentials.png)](http://3.bp.blogspot.com/-aR6ZJA7wwns/U4VejzBJkyI/AAAAAAAABVU/YgExBpMryjY/s1600/01.+WebEssentials.png) # 標題 標題符號：#，1~6數目的#符號對應H1~H6 H1符號：= H2符號：- 範例： # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 H1 H2 [![](http://4.bp.blogspot.com/-OPiMGwQ7nlY/U4Ven-1cioI/AAAAAAAABVc/1tVYoEotAng/s1600/02.%E6%A8%99%E9%A1%8C.png)](http://4.bp.blogspot.com/-OPiMGwQ7nlY/U4Ven-1cioI/AAAAAAAABVc/1tVYoEotAng/s1600/02.%E6%A8%99%E9%A1%8C.png) # 換行 段落 連續兩個空白字元會轉成換行&amp;lt;br /&amp;gt; 連續兩個換行字元會轉成段落&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; 範例： 第一行 第二行 第三行 第二段
[![](http://3.bp.blogspot.com/-crIepNApFg4/U4Ver8-veJI/AAAAAAAABVk/FiO1iKNKU9Q/s1600/03.%E6%8F%9B%E8%A1%8C.png)](http://3.bp.blogspot.com/-crIepNApFg4/U4Ver8-veJI/AAAAAAAABVk/FiO1iKNKU9Q/s1600/03.%E6%8F%9B%E8%A1%8C.png) # 粗體 斜體 斜體符號：一個 * 或 _ 粗體符號：兩個 * 或 _ 使用方式：將要顯示的文字用符號包圍起來 範例： *這是斜體文字* _這是斜體文字_ **這是斜體文字** __這是斜體文字__ [![](http://2.bp.blogspot.com/-ccv53cpyEGY/U4VevdZMDhI/AAAAAAAABVs/2_JwZhA_l2A/s1600/04.%E7%B2%97%E9%AB%94.png)](http://2.bp.blogspot.com/-ccv53cpyEGY/U4VevdZMDhI/AAAAAAAABVs/2_JwZhA_l2A/s1600/04.%E7%B2%97%E9%AB%94.png) # 符號列表 符號：* 或 + 或 - 和一個空白 範例：  第一行 第二行 第三行   第四行 第五行 第六行   第七行 第八行 第九行  [!</description>
    </item>
    
    <item>
      <title>IOC 控制反轉 &amp; DI 依賴注入</title>
      <link>http://example.org/posts/2014/05/ioc-%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%89-di-%E4%BE%9D%E8%B3%B4%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Tue, 20 May 2014 13:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/05/ioc-%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%89-di-%E4%BE%9D%E8%B3%B4%E6%B3%A8%E5%85%A5/</guid>
      <description>前言 IOC(Inversion of Control)中文翻譯為控制反轉，是物件導向中的一種設計原則，目的是用來減低物件之間的耦合度 先來看一段兩個物件協同工作的程式碼
public class ObjA { private ObjB obj = new ObjB(); public void SomeAction() { obj.Work(); } } public class ObjB { public void Work() { Console.WriteLine(&amp;#34;objB Work&amp;#34;); } } 物件A透過物件B去完成一項工作，所以物件A之中需要明確地指定物件B的存在 也就是說在建立物件A的同時，物件B也同時建立起來了 再簡單一點的說法，沒有物件B就沒有物件A，物件A相依於物件B
這段程式碼如果是萬年不變的邏輯，其實也無所謂 但如果相依的物件需要替換的時後，來看看會發生什麼事
public class ObjA { private ObjC obj = new ObjC(); public void SomeAction() { obj.Action(); } } public class ObjC { public void Action() { Console.WriteLine(&amp;#34;objC Work&amp;#34;); } } 宣告的型態要改變，建立物件的類型也要改變，有可能連呼叫的方法都要改變 如果這份程式是自已最近寫的，那可能還會有點印象知道那幾個地方要改 如果一份年久失修又或是別人寫的，那可能需要很有勇氣地用全域取代的方式來修改 所以比較好的設計方式，是針對介面去寫程式</description>
    </item>
    
    <item>
      <title>Unit Test AAA Pattern</title>
      <link>http://example.org/posts/2014/04/unit-test-aaa-pattern/</link>
      <pubDate>Mon, 28 Apr 2014 11:01:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/unit-test-aaa-pattern/</guid>
      <description>AAA Pattern 單元測試的程式碼有一個AAA Pattern，就是Arrange Act Assert 主要的目的是要讓測試程式碼好讀、好懂、好維護
 Arrange：初始化測試環境 Act：執行測試程式 Assert：驗證測試結果  用一個簡單的程式來說明 主程式
using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace ConsoleApplication1 { public class Calculator { public int Add(int x, int y) { return x + y; } } } 測試程式
using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using ConsoleApplication1; using Microsoft.VisualStudio.TestTools.UnitTesting; namespace ConsoleApplication1.Tests { [TestClass()] public class CalculatorTests { [TestMethod()] public void AddTest() { // Arrange  Calculator calc = new Calculator(); int x = 1; int y = 2; int expected = 3; // Act  int actual = calc.</description>
    </item>
    
    <item>
      <title>Unit Test 程式結構</title>
      <link>http://example.org/posts/2014/04/unit-test-%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B/</link>
      <pubDate>Thu, 24 Apr 2014 16:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/unit-test-%E7%A8%8B%E5%BC%8F%E7%B5%90%E6%A7%8B/</guid>
      <description>先新增一個測試專案 ](http://1.bp.blogspot.com/-TqMLm4sU89c/U1jM698OU3I/AAAAAAAABU4/SZc98f6b7kY/s1600/01.%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88.png)
可以看到主要元件是Microsoft.VisualStudio.QualityTools.UnitTestFramework ](http://4.bp.blogspot.com/-ePU5ykFwprU/U1jM-8lYv-I/AAAAAAAABVA/FjaE9kfddxY/s1600/02.%E6%96%B9%E6%A1%88%E7%B8%BD%E7%AE%A1.png)
該元件中常用的Attribute如下    屬性 說明     TestClass 用來識別內含測試方法的類別   TestMethod 用來識別測試方法，測試方法必須放置在測試類別中   AssemblyInitialize 用於該組件所有的測試之前，用來配置此組件所佔用的資源   ClassInitialize 用於測試類別的所有測試之前，用來配置該測試類別所使用的資源   TestInitialize 用於測試方法執行之前，用來配置該測試方法中所使用的資源   TestCleanup 用於測試方法執行完成之後，用來釋放該測試方法所佔用的資源   ClassCleanup 用於測試類別中所有的測試完成之後，用來釋放該測試類別所佔用的資源   AssemblyCleanup 用於該組件所有測試類別完成測試之後，用來釋放此組件所佔用的資源    using System; using Microsoft.VisualStudio.TestTools.UnitTesting; namespace UnitTestProject1 { [TestClass] public class UnitTest1 { [TestClass()] public sealed class DivideClassTest { [AssemblyInitialize()] public static void MyAssemblyInitialize(TestContext context) { Console.</description>
    </item>
    
    <item>
      <title>Unit Test Assert 類別</title>
      <link>http://example.org/posts/2014/04/unit-test-assert-%E9%A1%9E%E5%88%A5/</link>
      <pubDate>Wed, 23 Apr 2014 17:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/unit-test-assert-%E9%A1%9E%E5%88%A5/</guid>
      <description>Assert 類別    屬性 說明     AreEqual 確認兩個指定的物件相等如果這些物件都不相等，判斷提示就會失敗   AreNotEqual 確認兩個指定的物件不相等如果這些物件都相等，判斷提示就會失敗   AreSame 確認兩個指定的物件變數參考相同的物件如果它們參考不同的物件，判斷提示就會失敗   AreNotSame 確認兩個指定的物件變數參考不同的物件如果它們參考相同的物件，判斷提示就會失敗   IsTrue 驗證指定的條件是 true如果條件為 false，判斷提示就會失敗。   IsFalse 驗證指定的條件是 false如果條件為 true，判斷提示就會失敗   IsNull 確認指定的物件是 null如果它不是 null，判斷提示就會失敗   IsNotNull 確認指定的物件不是 null如果它是 null，判斷提示就會失敗   IsInstanceOfType 確認指定的物件是指定之型別的執行個體如果此型別不在物件的繼承階層架構內，判斷提示就會失敗   IsNotInstanceOfType 確認指定的物件不是指定之型別的執行個體如果此型別位於物件的繼承階層架構內，判斷提示就會失敗   Fail 判斷提示失敗，但不檢查任何條件   Inconclusive 表示無法驗證判斷提示    CollectionAssert 類別    屬性 說明     AllItemsAreInstancesOfType 確認指定之集合中的所有項目都是指定之型別的執行個體如果任何項目的型別不在其繼承階層架構內，判斷提示就會失敗   AllItemsAreNotNull 確認指定之集合中的所有項目都不是 null如果有任何項目是 null，判斷提示就會失敗   AllItemsAreUnique 確認指定之集合中的所有項目都是唯一的如果集合中有任兩個項目相等，判斷提示就會失敗   AreEqual 確認兩個指定的集合相等如果這些集合都不相等，判斷提示就會失敗   AreNotEqual 確認兩個指定的集合不相等如果這些集合都相等，判斷提示就會失敗   AreEquivalent 確認兩個指定的集合對等如果這些集合都不對等，判斷提示就會失敗   AreNotEquivalent 確認兩個指定的集合不對等如果這些集合都對等，判斷提示就會失敗   Contains 確認指定的集合包含指定的項目如果此項目不在集合中，判斷提示就會失敗   DoesNotContain 確認指定的集合不包含指定的項目如果此項目位於集合中，判斷提示就會失敗   IsSubsetOf 確認第一個集合是第二個集合的子集   IsNotSubsetOf 確認第一個集合不是第二個集合的子集    StringAssert 類別    屬性 說明     Contains 確認第一個字串包含第二個字串這個方法會區分大小寫   StartsWith 確認第一個字串以第二個字串開始這個方法會區分大小寫   EndsWith 確認第一個字串以第二個字串結束這個方法會區分大小寫   Matches 確認指定的字串符合規則運算式   DoesNotMatch 確認指定的字串不符合規則運算式    </description>
    </item>
    
    <item>
      <title>TeamCity整合Source Monitor報表</title>
      <link>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88source-monitor%E5%A0%B1%E8%A1%A8/</link>
      <pubDate>Wed, 23 Apr 2014 15:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88source-monitor%E5%A0%B1%E8%A1%A8/</guid>
      <description>Source Monitor是用來分析程式碼度量的工具，先到[官網](http://www.campwoodsw.com/sourcemonitor.html)下載[![](http://1.bp.blogspot.com/-aUW-QXGVCtE/U1drxYfiw4I/AAAAAAAABSk/phO8_RBI2Os/s1600/01.%E4%B8%8B%E8%BC%89.png)](http://1.bp.blogspot.com/-aUW-QXGVCtE/U1drxYfiw4I/AAAAAAAABSk/phO8_RBI2Os/s1600/01.%E4%B8%8B%E8%BC%89.png) 安裝後的預設路徑為C:\Program Files (x86)\SourceMonitor[![](http://4.bp.blogspot.com/-MKLglO_Layc/U1dr6iQoHSI/AAAAAAAABSs/JSEVH5l68VE/s1600/02.%E5%AE%89%E8%A3%9D%E8%B7%AF%E5%BE%91.png)](http://4.bp.blogspot.com/-MKLglO_Layc/U1dr6iQoHSI/AAAAAAAABSs/JSEVH5l68VE/s1600/02.%E5%AE%89%E8%A3%9D%E8%B7%AF%E5%BE%91.png) 先淮備一個用來產生報告的設定檔SourceMonitorCommands.xml &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;sourcemonitor_commands&amp;gt; &amp;lt;write_log&amp;gt;true&amp;lt;/write_log&amp;gt; &amp;lt;command&amp;gt; &amp;lt;project_file&amp;gt;SourceMonitor.smp&amp;lt;/project_file&amp;gt; &amp;lt;checkpoint_name&amp;gt;Baseline&amp;lt;/checkpoint_name&amp;gt; &amp;lt;project_language&amp;gt;C#&amp;lt;/project_language&amp;gt; &amp;lt;!-- 要分析專案的相對路徑 --&amp;gt; &amp;lt;source_directory&amp;gt;..&amp;lt;/source_directory&amp;gt; &amp;lt;source_subdirectory_list&amp;gt; &amp;lt;exclude_subdirectories&amp;gt;true&amp;lt;/exclude_subdirectories&amp;gt; &amp;lt;source_subtree&amp;gt;bin\&amp;lt;/source_subtree&amp;gt; &amp;lt;source_subdirectory&amp;gt;obj\&amp;lt;/source_subdirectory&amp;gt; &amp;lt;/source_subdirectory_list&amp;gt; &amp;lt;parse_utf8_files&amp;gt;True&amp;lt;/parse_utf8_files&amp;gt; &amp;lt;ignore_headers_footers&amp;gt;True&amp;lt;/ignore_headers_footers&amp;gt; &amp;lt;export&amp;gt; &amp;lt;!-- 最後輸出的檔名 --&amp;gt; &amp;lt;export_file&amp;gt;SourceMonitorReport.xml&amp;lt;/export_file&amp;gt; &amp;lt;export_type&amp;gt;2&amp;lt;/export_type&amp;gt; &amp;lt;/export&amp;gt; &amp;lt;/command&amp;gt; &amp;lt;/sourcemonitor_commands&amp;gt;  因為輸出的是XML格式，所以需要透過XSL轉成HTML格式 先下載轉換的工具[msxsl.exe](http://www.microsoft.com/en-us/download/details.aspx?id=21714)[![](http://4.bp.blogspot.com/-1zIhVE-ezj0/U1dsCkgZ1AI/AAAAAAAABS0/CSALVxR5RMw/s1600/03.%E4%B8%8B%E8%BC%89msxsl.png)](http://4.bp.blogspot.com/-1zIhVE-ezj0/U1dsCkgZ1AI/AAAAAAAABS0/CSALVxR5RMw/s1600/03.%E4%B8%8B%E8%BC%89msxsl.png) SourceMonitor.xsl&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;xsl:stylesheet version=&#34;1.0&#34; xmlns:xsl=&#34;http://www.w3.org/1999/XSL/Transform&#34; xmlns=&#34;http://www.w3.org/TR/xhtml1/strict&#34;&amp;gt; &amp;lt;xsl:output method=&#34;html&#34;/&amp;gt; &amp;lt;xsl:template match=&amp;rdquo;/&amp;quot;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;style type=&amp;quot;text/css&amp;rdquo;&amp;gt; /* Web20 Table Style written by Netway Media, http://www.netway-media.com */ table { border-collapse: collapse; border: 1px solid #666666; font: normal 11px verdana, arial, helvetica, sans-serif; color: #363636; background: #f6f6f6; text-align: left; } caption { text-align: center; font: bold 16px arial, helvetica, sans-serif; background: transparent; padding: 6px 4px 8px 0px; color: #CC00FF; text-transform: uppercase; } thead, tfoot { background: url(bg1.</description>
    </item>
    
    <item>
      <title>TeamCity整合Code Coverage報表</title>
      <link>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88code-coverage%E5%A0%B1%E8%A1%A8/</link>
      <pubDate>Tue, 22 Apr 2014 17:04:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88code-coverage%E5%A0%B1%E8%A1%A8/</guid>
      <description>首先加入一個MSTest的Build Step[![](http://2.bp.blogspot.com/-mFAFpZ4sBFg/U1Yv105qBlI/AAAAAAAABRc/HCJbfbaCuIw/s1600/01.%E6%96%B0%E5%A2%9ERunner.png)](http://2.bp.blogspot.com/-mFAFpZ4sBFg/U1Yv105qBlI/AAAAAAAABRc/HCJbfbaCuIw/s1600/01.%E6%96%B0%E5%A2%9ERunner.png) 這裡以VS2013為例，選擇要執行單元測試的專案元件[![](http://3.bp.blogspot.com/-aFtWBsGltzs/U1dz2eGt4YI/AAAAAAAABT4/rKk7WdWI9H0/s1600/02.%E5%8A%A0%E5%85%A5%E6%B8%AC%E8%A9%A6%E5%85%83%E4%BB%B6.png)](http://3.bp.blogspot.com/-aFtWBsGltzs/U1dz2eGt4YI/AAAAAAAABT4/rKk7WdWI9H0/s1600/02.%E5%8A%A0%E5%85%A5%E6%B8%AC%E8%A9%A6%E5%85%83%E4%BB%B6.png) 拉到最下面後可以選擇Code Coverage的工具，這裡以dotCover為例子[![](http://2.bp.blogspot.com/-Xjc2zO5sAZ8/U1Yv-WpsCNI/AAAAAAAABRs/oXxgjTphKRk/s1600/03.%E9%81%B8%E6%93%87dotCover.png)](http://2.bp.blogspot.com/-Xjc2zO5sAZ8/U1Yv-WpsCNI/AAAAAAAABRs/oXxgjTphKRk/s1600/03.%E9%81%B8%E6%93%87dotCover.png) 主要就是輸入Filter，+:加入，-:排除，注意不用輸入副檔名[![](http://3.bp.blogspot.com/-Q9E4eWUXyxI/U1YwCuFlBkI/AAAAAAAABR0/-LWyBvHrEgI/s1600/04.%E5%8A%A0%E5%85%A5Conver%E5%85%83%E4%BB%B6.png)](http://3.bp.blogspot.com/-Q9E4eWUXyxI/U1YwCuFlBkI/AAAAAAAABR0/-LWyBvHrEgI/s1600/04.%E5%8A%A0%E5%85%A5Conver%E5%85%83%E4%BB%B6.png) 建置成功後就會看到單元測試覆蓋率的報表了 [!</description>
    </item>
    
    <item>
      <title>TeamCity整合FxCop報表</title>
      <link>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88fxcop%E5%A0%B1%E8%A1%A8/</link>
      <pubDate>Tue, 22 Apr 2014 14:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/teamcity%E6%95%B4%E5%90%88fxcop%E5%A0%B1%E8%A1%A8/</guid>
      <description>FxCop 10的安裝檔在Microsoft Windows SDK中，所以首先要先下載[Windwos SDK](http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&amp;amp;id=8279)[![](http://2.bp.blogspot.com/-Ryzi5Wp1mxk/U1YM8QFNVeI/AAAAAAAABQY/o5yi63VDzdE/s1600/00.FxCop%E8%BC%89%E9%BB%9E.png)](http://2.bp.blogspot.com/-Ryzi5Wp1mxk/U1YM8QFNVeI/AAAAAAAABQY/o5yi63VDzdE/s1600/00.FxCop%E8%BC%89%E9%BB%9E.png) SDK安裝好後，安裝檔的路徑在C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\FXCop\FxCopSetup.exe由於VS2013已整合FxCop 12版，所以這裡以FxCop 12版為例 安裝好VS2013後，FxCop執行檔的路徑在 FxCop的路徑在C:\Program Files (x86)\Microsoft Visual Studio 12.0\Team Tools\Static Analysis Tools\FxCop 在Build Step中新增一個FxCop Runner[![](http://1.bp.blogspot.com/-UPextgdfaqg/U1YNNQYcR0I/AAAAAAAABQg/dl-bnwC9fPQ/s1600/02.%E6%96%B0%E5%A2%9EFxCop.png)](http://1.bp.blogspot.com/-UPextgdfaqg/U1YNNQYcR0I/AAAAAAAABQg/dl-bnwC9fPQ/s1600/02.%E6%96%B0%E5%A2%9EFxCop.png) 設定內容主要是指定FxCop執行檔的路徑 和要分析的Assembly檔案位置 C:\Program Files (x86)\Microsoft Visual Studio 12.0\Team Tools\Static Analysis Tools\FxCop 比較方便的方式是到Build Agent上面設定buildAgent.properties加入 system.FxCopRoot=C\:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Team Tools\\Static Analysis Tools\\FxCop 就可以用Autodetect而不用指定路徑了 P.S. 注意跳脫符號 [![](http://4.bp.blogspot.com/-IxO1nBWwCG4/U1YOJCl6c8I/AAAAAAAABQ4/PJnb62unAG0/s1600/03.FxCop%E5%BB%BA%E7%BD%AE%E8%A8%AD%E5%AE%9A.png)](http://4.bp.blogspot.com/-IxO1nBWwCG4/U1YOJCl6c8I/AAAAAAAABQ4/PJnb62unAG0/s1600/03.FxCop%E5%BB%BA%E7%BD%AE%E8%A8%AD%E5%AE%9A.png)建置成功後就會多出一個FxCop的數據 [![](http://3.bp.blogspot.com/-hRYlHqjQsss/U1YR362allI/AAAAAAAABRM/DZZnNx-VHR4/s1600/05.%E7%B8%BD%E8%A1%A8.png)](http://3.bp.blogspot.com/-hRYlHqjQsss/U1YR362allI/AAAAAAAABRM/DZZnNx-VHR4/s1600/05.%E7%B8%BD%E8%A1%A8.png)點擊連結或是右上角的Code Inspection就會轉入FxCop報表的詳細頁面[![](http://4.bp.blogspot.com/-5dyGrZH_Lwo/U1YOMJfd2rI/AAAAAAAABRA/3JONiZpg7o8/s1600/04.%E5%BB%BA%E7%BD%AE%E5%A0%B1%E8%A1%A8.png)](http://4.bp.blogspot.com/-5dyGrZH_Lwo/U1YOMJfd2rI/AAAAAAAABRA/3JONiZpg7o8/s1600/04.%E5%BB%BA%E7%BD%AE%E5%A0%B1%E8%A1%A8.png)  </description>
    </item>
    
    <item>
      <title>Visual Studio 程式碼分析</title>
      <link>http://example.org/posts/2014/04/visual-studio-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 22 Apr 2014 13:38:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/visual-studio-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%88%86%E6%9E%90/</guid>
      <description>Visual Studio內建的程式碼分析，功能和Fxcop一樣用來對編譯出來的的Assembly做分析 這裡以一個簡單的網站當例子[![](http://3.bp.blogspot.com/-Vb_xWiwDI6M/U1XnV68asaI/AAAAAAAABOs/xxPRf3OER7U/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-Vb_xWiwDI6M/U1XnV68asaI/AAAAAAAABOs/xxPRf3OER7U/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 選擇空白的MVC專案[![](http://1.bp.blogspot.com/-MVgS-qgi4pk/U1XnYLAjtDI/AAAAAAAABPY/-BqHSmWSK_M/s1600/02.MVC%25E5%25B0%2588%25E6%25A1%2588.png)](http://1.bp.blogspot.com/-MVgS-qgi4pk/U1XnYLAjtDI/AAAAAAAABPY/-BqHSmWSK_M/s1600/02.MVC%25E5%25B0%2588%25E6%25A1%2588.png) 在專案設定中的程式碼分析有一些預設的規則集[![](http://1.bp.blogspot.com/-Ys253RmWmjo/U1XnV626otI/AAAAAAAABOw/O0dQZgKvY3U/s1600/03.%25E5%25B0%2588%25E6%25A1%2588%25E8%25A8%25AD%25E5%25AE%259A.png)](http://1.bp.blogspot.com/-Ys253RmWmjo/U1XnV626otI/AAAAAAAABOw/O0dQZgKvY3U/s1600/03.%25E5%25B0%2588%25E6%25A1%2588%25E8%25A8%25AD%25E5%25AE%259A.png) 可以新增自訂的規則集[![](http://2.bp.blogspot.com/-h72BZRA2ZFc/U1XnWQe0PhI/AAAAAAAABO8/Ga8-4BIp1ow/s1600/04.%25E6%2596%25B0%25E5%25A2%259E%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png)](http://2.bp.blogspot.com/-h72BZRA2ZFc/U1XnWQe0PhI/AAAAAAAABO8/Ga8-4BIp1ow/s1600/04.%25E6%2596%25B0%25E5%25A2%259E%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png) 記得在屬性視窗中去修改這個規則集的顯示名稱[![](http://4.bp.blogspot.com/-_YerSEatUhw/U1XnWlCyRNI/AAAAAAAABPM/RFAIwLjqtwc/s1600/05.%25E4%25BF%25AE%25E6%2594%25B9%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586%25E5%2590%258D%25E7%25A8%25B1.png)](http://4.bp.blogspot.com/-_YerSEatUhw/U1XnWlCyRNI/AAAAAAAABPM/RFAIwLjqtwc/s1600/05.%25E4%25BF%25AE%25E6%2594%25B9%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586%25E5%2590%258D%25E7%25A8%25B1.png) 調整自訂的規則集[![](http://3.bp.blogspot.com/-Vk7DdmFofho/U1XnXGtMVbI/AAAAAAAABPI/3_x3XdR-nzA/s1600/06.%25E8%25AA%25BF%25E6%2595%25B4%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png)](http://3.bp.blogspot.com/-Vk7DdmFofho/U1XnXGtMVbI/AAAAAAAABPI/3_x3XdR-nzA/s1600/06.%25E8%25AA%25BF%25E6%2595%25B4%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png) 就可以在剛剛專案屬性中選擇自訂的規則集[![](http://4.bp.blogspot.com/-bjjTg1JDYWM/U1XnaWimi2I/AAAAAAAABP4/O9YeOeUJsO8/s1600/07.%25E9%2581%25B8%25E6%2593%2587%25E8%2587%25AA%25E8%25A8%2582%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png)](http://4.bp.blogspot.com/-bjjTg1JDYWM/U1XnaWimi2I/AAAAAAAABP4/O9YeOeUJsO8/s1600/07.%25E9%2581%25B8%25E6%2593%2587%25E8%2587%25AA%25E8%25A8%2582%25E8%25A6%258F%25E5%2589%2587%25E9%259B%2586.png) 在專案上面按右鍵選擇分析[![](http://4.bp.blogspot.com/-Rz_jWNFB1Kg/U1XnYOrwXsI/AAAAAAAABPg/w_9Jv3hORD4/s1600/08.%25E5%25B0%2588%25E6%25A1%2588%25E4%25B8%258A%25E9%2581%25B8%25E6%2593%2587%25E5%2588%2586%25E6%259E%2590.png)](http://4.bp.blogspot.com/-Rz_jWNFB1Kg/U1XnYOrwXsI/AAAAAAAABPg/w_9Jv3hORD4/s1600/08.%25E5%25B0%2588%25E6%25A1%2588%25E4%25B8%258A%25E9%2581%25B8%25E6%2593%2587%25E5%2588%2586%25E6%259E%2590.png) 又或是在選擇工具列上的分析，快速鍵為Alt&amp;nbsp;+ F11[![](http://3.bp.blogspot.com/-9ZsXWNGeFDc/U1XnY_JxcRI/AAAAAAAABPo/HAKNKNEzZzM/s1600/09.%25E5%25B7%25A5%25E5%2585%25B7%25E5%2588%2597%25E4%25B8%258A%25E9%2581%25B8%25E6%2593%2587%25E5%2588%2586%25E6%259E%2590.png)](http://3.bp.blogspot.com/-9ZsXWNGeFDc/U1XnY_JxcRI/AAAAAAAABPo/HAKNKNEzZzM/s1600/09.%25E5%25B7%25A5%25E5%2585%25B7%25E5%2588%2597%25E4%25B8%258A%25E9%2581%25B8%25E6%2593%2587%25E5%2588%2586%25E6%259E%2590.png) 建置後就會跑出分析結果，該項目上點兩下就會切換到引發該訊息的原始碼處[![](http://1.bp.blogspot.com/-SpipZT6VDXs/U1XnZOjsk_I/AAAAAAAABPs/97VlEH6oJ7s/s1600/10.%25E5%2588%2586%25E6%259E%2590%25E5%2595%258F%25E9%25A1%258C.png)](http://1.bp.blogspot.com/-SpipZT6VDXs/U1XnZOjsk_I/AAAAAAAABPs/97VlEH6oJ7s/s1600/10.%25E5%2588%2586%25E6%259E%2590%25E5%2595%258F%25E9%25A1%258C.png) 如果要知道這條規則更詳細的說明，就點擊左上方的規則編號 如果要先隱藏訊息的話，就在動作上面點一下，選擇隱藏訊息 這裡以在原始程式檔中為例[![](http://3.bp.blogspot.com/-1XPg6CTlIB8/U1X_wYjG3eI/AAAAAAAABQI/HCnZUrYh8Aw/s1600/11.%E9%9A%B1%E8%97%8F%E8%A8%8A%E6%81%AF.png)](http://3.bp.blogspot.com/-1XPg6CTlIB8/U1X_wYjG3eI/AAAAAAAABQI/HCnZUrYh8Aw/s1600/11.%E9%9A%B1%E8%97%8F%E8%A8%8A%E6%81%AF.png) 就會在原始檔中加入SuppressMessage Attribute 記得要在屬性Justification中加入隱藏這個訊息的原因 namespace DemoWeb { public class MvcApplication : System.Web.HttpApplication { [System.Diagnostics.CodeAnalysis.SuppressMessage(&#34;Microsoft.Performance&#34;, &#34;CA1822:MarkMembersAsStatic&#34;, Justification = &#34;DemoWeb不處理&#34;)] protected void Application_Start() { AreaRegistration.RegisterAllAreas(); RouteConfig.RegisterRoutes(RouteTable.Routes); } } }  相關連結 Managed 程式碼的程式碼分析警告</description>
    </item>
    
    <item>
      <title>Visual Studio 新增擴充套件</title>
      <link>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Wed, 09 Apr 2014 16:29:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E6%93%B4%E5%85%85%E5%A5%97%E4%BB%B6/</guid>
      <description>建立好專案和項目範本後，雖然只是放到固定的資料夾就可以使用 但如果要和團隊分享的話，可以考慮新增一個擴充套件比較方便
首先要先安裝Visual Studio SKD，這裡以2013版為例 http://www.microsoft.com/en-us/download/details.aspx?id=40758
[![](http://4.bp.blogspot.com/-FbinvEcsJ2g/U0UDS0sHgVI/AAAAAAAABMg/VISEcc-iCQw/s1600/01.%E4%B8%8B%E8%BC%89SDK.png)](http://4.bp.blogspot.com/-FbinvEcsJ2g/U0UDS0sHgVI/AAAAAAAABMg/VISEcc-iCQw/s1600/01.%E4%B8%8B%E8%BC%89SDK.png) 安裝後開新專案在擴充性下面就會有一個VSIX專案
[![](http://2.bp.blogspot.com/-Zp6MpLRTQLA/U0UDXn5GLsI/AAAAAAAABM0/IDSfh9A30CQ/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E6%2593%25B4%25E5%2585%2585%25E5%25B0%2588%25E6%25A1%2588.png)](http://2.bp.blogspot.com/-Zp6MpLRTQLA/U0UDXn5GLsI/AAAAAAAABM0/IDSfh9A30CQ/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E6%2593%25B4%25E5%2585%2585%25E5%25B0%2588%25E6%25A1%2588.png) 先把專案資訊填一填 [![](http://3.bp.blogspot.com/-z3eh5_sZQWY/U0UDXk8A3EI/AAAAAAAABM4/Ljf-XvB7oAg/s1600/03.%25E5%25B0%2588%25E6%25A1%2588%25E8%25B3%2587%25E8%25A8%258A.png)](http://3.bp.blogspot.com/-z3eh5_sZQWY/U0UDXk8A3EI/AAAAAAAABM4/Ljf-XvB7oAg/s1600/03.%25E5%25B0%2588%25E6%25A1%2588%25E8%25B3%2587%25E8%25A8%258A.png) 這邊是選擇可以安裝這個擴充套件的Visual Studio版本 [![](http://2.bp.blogspot.com/-Y5sSIH4G_fE/U0UDXo4clOI/AAAAAAAABM8/8KDpA-9sg0s/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E7%259B%25AE%25E6%25A8%2599.png)](http://2.bp.blogspot.com/-Y5sSIH4G_fE/U0UDXo4clOI/AAAAAAAABM8/8KDpA-9sg0s/s1600/04.%25E5%25AE%2589%25E8%25A3%259D%25E7%259B%25AE%25E6%25A8%2599.png) 這邊是選擇要安裝的項目，也是主要設定的項目 [![](http://2.bp.blogspot.com/-VDQLbbUkRtU/U0UDarsXt5I/AAAAAAAABNs/Nk_mPTKtGa4/s1600/05.%25E8%25A6%2581%25E5%25AE%2589%25E8%25A3%259D%25E7%259A%2584%25E9%25A0%2585%25E7%259B%25AE.png)](http://2.bp.blogspot.com/-VDQLbbUkRtU/U0UDarsXt5I/AAAAAAAABNs/Nk_mPTKtGa4/s1600/05.%25E8%25A6%2581%25E5%25AE%2589%25E8%25A3%259D%25E7%259A%2584%25E9%25A0%2585%25E7%259B%25AE.png) 先新增一個專案範本，選擇之前建立的範本 [![](http://1.bp.blogspot.com/-5WT7V3S0ZDQ/U0UDYZ4msII/AAAAAAAABNQ/uq8y3BuqMc0/s1600/06.%25E6%2596%25B0%25E5%25A2%259E%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC.png)](http://1.bp.blogspot.com/-5WT7V3S0ZDQ/U0UDYZ4msII/AAAAAAAABNQ/uq8y3BuqMc0/s1600/06.%25E6%2596%25B0%25E5%25A2%259E%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC.png) 再新增一個項目範本，選擇之前建立的範本 [![](http://1.bp.blogspot.com/-z1Y2u-EpCCM/U0UDYvmMuMI/AAAAAAAABNI/320yJqFRKXQ/s1600/07.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A0%2585%25E7%259B%25AE%25E7%25AF%2584%25E6%259C%25AC.png)](http://1.bp.blogspot.com/-z1Y2u-EpCCM/U0UDYvmMuMI/AAAAAAAABNI/320yJqFRKXQ/s1600/07.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A0%2585%25E7%259B%25AE%25E7%25AF%2584%25E6%259C%25AC.png) 設定好後會自動把範本複製進來，基本這樣就完成了 [![](http://4.bp.blogspot.com/-9GvJmdfXOS0/U0UDZZXbXRI/AAAAAAAABNY/-wf7K2t_dsE/s1600/08.%25E7%25AF%2584%25E6%259C%25AC%25E8%25B7%25AF%25E5%25BE%2591.png)](http://4.bp.blogspot.com/-9GvJmdfXOS0/U0UDZZXbXRI/AAAAAAAABNY/-wf7K2t_dsE/s1600/08.%25E7%25AF%2584%25E6%259C%25AC%25E8%25B7%25AF%25E5%25BE%2591.png) 但是範本會和預設的範本混在一起，為了方便起來還是建立一個自訂的分類比較好找 所以手動調整一下，新增一個資料夾就行了，資料夾名稱就要自訂分類的名稱
[![](http://2.bp.blogspot.com/-lSdbxhJb020/U0UDZhk7jXI/AAAAAAAABNg/MX0pMyUpVJk/s1600/09.%25E8%25AA%25BF%25E6%2595%25B4%25E5%25BE%258C%25E7%259A%2584%25E8%25B7%25AF%25E5%25BE%2591.png)](http://2.bp.blogspot.com/-lSdbxhJb020/U0UDZhk7jXI/AAAAAAAABNg/MX0pMyUpVJk/s1600/09.%25E8%25AA%25BF%25E6%2595%25B4%25E5%25BE%258C%25E7%259A%2584%25E8%25B7%25AF%25E5%25BE%2591.png) 設定好了建置一下方案，就可以得到這個擴充套件了 [![](http://4.bp.blogspot.com/-IifBLJWGli8/U0UEfzUfRwI/AAAAAAAABN0/21BH5AY8meo/s1600/10.%E5%BB%BA%E7%BD%AE.png)](http://4.bp.blogspot.com/-IifBLJWGli8/U0UEfzUfRwI/AAAAAAAABN0/21BH5AY8meo/s1600/10.%E5%BB%BA%E7%BD%AE.png) 延伸閱讀 新增專案範本 http://blog.developer.idv.tw/2014/04/visual-studio.html
新增項目範本 http://blog.developer.idv.tw/2014/04/visual-studio_9.html
參考連結 http://timheuer.com/blog/archive/2010/05/03/create-vsix-files-with-visual-studio-template-deployment.aspx
http://msdn.microsoft.com/zh-tw/library/ms247119.aspx</description>
    </item>
    
    <item>
      <title>Visual Studio 新增項目範本</title>
      <link>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE%E7%AF%84%E6%9C%AC/</link>
      <pubDate>Wed, 09 Apr 2014 15:44:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E9%A0%85%E7%9B%AE%E7%AF%84%E6%9C%AC/</guid>
      <description>除了專案範本之外，也可以用同樣的方式打包出項目範本 先開一個Console專案，沒有特別的原因，只是為了環境簡單而已 [![](http://3.bp.blogspot.com/-lr270F-0j9M/U0T4EEiDsRI/AAAAAAAABLM/POKt5GGOQ9k/s1600/01.console%25E5%25B0%2588%25E6%25A1%2588.png)](http://3.bp.blogspot.com/-lr270F-0j9M/U0T4EEiDsRI/AAAAAAAABLM/POKt5GGOQ9k/s1600/01.console%25E5%25B0%2588%25E6%25A1%2588.png) 以最常建立的類別為例[![](http://1.bp.blogspot.com/-0Z_BtrVYON0/U0T4EOj2wTI/AAAAAAAABLU/z0Lu0wRkaEA/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A1%259E%25E5%2588%25A5.png)](http://1.bp.blogspot.com/-0Z_BtrVYON0/U0T4EOj2wTI/AAAAAAAABLU/z0Lu0wRkaEA/s1600/02.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A1%259E%25E5%2588%25A5.png) 修改成適合StyleCop的格式 //----------------------------------------------------------------------- // &amp;lt;copyright file=&#34;Class1.cs&#34; company=&#34;developer.idv.tw&#34;&amp;gt; // Copyright © 2014 developer.idv.tw all rights reserved. // &amp;lt;/copyright&amp;gt; //----------------------------------------------------------------------- namespace ConsoleApplication1 { using System;
/// &amp;amp;lt;summary&amp;amp;gt; /// Class1 Class /// &amp;amp;lt;/summary&amp;amp;gt; public class Class1 { /// &amp;amp;lt;summary&amp;amp;gt; /// Initializes a new instance of the &amp;amp;lt;see cref=&amp;quot;Class1&amp;quot;/&amp;amp;gt; class /// &amp;amp;lt;/summary&amp;amp;gt; public Class1() { } }  } 
修改好了一樣選擇左上角的檔案&amp;gt;&amp;gt;匯出範本 [![](http://2.bp.blogspot.com/-TyjtiavL1UQ/U0T4ECxMbnI/AAAAAAAABLQ/3Wru9cU50vs/s1600/03.%25E5%258C%25AF%25E5%2587%25BA%25E7%25AF%2584%25E6%259C%25AC.png)](http://2.bp.blogspot.com/-TyjtiavL1UQ/U0T4ECxMbnI/AAAAAAAABLQ/3Wru9cU50vs/s1600/03.%25E5%258C%25AF%25E5%2587%25BA%25E7%25AF%2584%25E6%259C%25AC.png)  這次選擇匯出項目範本 [![](http://2.bp.blogspot.com/-kaNXqcimBag/U0T4EvIX_dI/AAAAAAAABLs/TRt5lU6oFZg/s1600/04.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A0%2585%25E7%259B%25AE%25E7%25AF%2584%25E6%259C%25AC.png)](http://2.bp.blogspot.com/-kaNXqcimBag/U0T4EvIX_dI/AAAAAAAABLs/TRt5lU6oFZg/s1600/04.%25E6%2596%25B0%25E5%25A2%259E%25E9%25A0%2585%25E7%259B%25AE%25E7%25AF%2584%25E6%259C%25AC.png)  選擇要匯出的檔案範本 [![](http://3.bp.blogspot.com/-WSXmUJBP5lQ/U0T4FGTVchI/AAAAAAAABLo/qtv0hcDnvk0/s1600/05.%25E9%2581%25B8%25E6%2593%2587%25E6%25AA%2594%25E6%25A1%2588.png)](http://3.bp.blogspot.com/-WSXmUJBP5lQ/U0T4FGTVchI/AAAAAAAABLo/qtv0hcDnvk0/s1600/05.%25E9%2581%25B8%25E6%2593%2587%25E6%25AA%2594%25E6%25A1%2588.png)  如果這個項目需要相依於特定元件的話，就要在這裡勾選起來 [![](http://1.bp.blogspot.com/-08OwHEx9VpY/U0T4FNid7FI/AAAAAAAABLk/8OZ8WVytVSs/s1600/06.%25E6%2596%25B0%25E5%25A2%259E%25E5%258F%2583%25E8%2580%2583.png)](http://1.bp.blogspot.com/-08OwHEx9VpY/U0T4FNid7FI/AAAAAAAABLk/8OZ8WVytVSs/s1600/06.%25E6%2596%25B0%25E5%25A2%259E%25E5%258F%2583%25E8%2580%2583.png)  最後輸入這個項目範本的資訊就建立好了 [!</description>
    </item>
    
    <item>
      <title>Visual Studio 新增專案範本</title>
      <link>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88%E7%AF%84%E6%9C%AC/</link>
      <pubDate>Wed, 09 Apr 2014 15:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/visual-studio-%E6%96%B0%E5%A2%9E%E5%B0%88%E6%A1%88%E7%AF%84%E6%9C%AC/</guid>
      <description>每次開新專案多少都要手動調整一些設定，一直做重覆的事總是有點煩，所以找了一下專案範本建立的方式，還滿簡單的，在此記錄一下 首先新增一個Web專案來當例子
這裡以一個空白的MVC專案為例 [![](http://1.bp.blogspot.com/-DOvx8QHwAZQ/U0TtUnr4f1I/AAAAAAAABJk/7oFJbmtqi_k/s1600/02.MVC%25E5%25B0%2588%25E6%25A1%2588.png)](http://1.bp.blogspot.com/-DOvx8QHwAZQ/U0TtUnr4f1I/AAAAAAAABJk/7oFJbmtqi_k/s1600/02.MVC%25E5%25B0%2588%25E6%25A1%2588.png) 先把套件更新到最新版 [![](http://2.bp.blogspot.com/-qwypMRYrpIM/U0TtUmQKqAI/AAAAAAAABJs/7ULgEJeFND4/s1600/03.%25E6%259B%25B4%25E6%2596%25B0%25E5%25A5%2597%25E4%25BB%25B6.png)](http://2.bp.blogspot.com/-qwypMRYrpIM/U0TtUmQKqAI/AAAAAAAABJs/7ULgEJeFND4/s1600/03.%25E6%259B%25B4%25E6%2596%25B0%25E5%25A5%2597%25E4%25BB%25B6.png)  順便把BootStrap套件裝進來 [![](http://4.bp.blogspot.com/-rtuKS7bzKkE/U0TtUs-HCZI/AAAAAAAABJg/lTmfYFP4R5M/s1600/04.BootStrap.png)](http://4.bp.blogspot.com/-rtuKS7bzKkE/U0TtUs-HCZI/AAAAAAAABJg/lTmfYFP4R5M/s1600/04.BootStrap.png)  新增一個Site.css和新增一個預設的Controller 還要手動要調整的部份也調一調 最後網站的結構長這個樣子 [![](http://4.bp.blogspot.com/-mOpdiXgZyZs/U0TtVSeDWhI/AAAAAAAABJo/JmpABdi5gjI/s1600/05.%25E6%2596%25B0%25E5%25A2%259EView.png)](http://4.bp.blogspot.com/-mOpdiXgZyZs/U0TtVSeDWhI/AAAAAAAABJo/JmpABdi5gjI/s1600/05.%25E6%2596%25B0%25E5%25A2%259EView.png)  接下來要開始匯出這個專案當範本 點選左上角的檔案&amp;gt;&amp;gt;匯出範本 [![](http://1.bp.blogspot.com/-0nb_eKmmgI8/U0TtX2Ws26I/AAAAAAAABKg/EvBZ3OndPls/s1600/06.%25E5%258C%25AF%25E5%2587%25BA%25E7%25AF%2584%25E6%259C%25AC.png)](http://1.bp.blogspot.com/-0nb_eKmmgI8/U0TtX2Ws26I/AAAAAAAABKg/EvBZ3OndPls/s1600/06.%25E5%258C%25AF%25E5%2587%25BA%25E7%25AF%2584%25E6%259C%25AC.png)  照著匯出範本精靈的說明就行了 這裡以專案範本為例繼續下一步 [![](http://1.bp.blogspot.com/-TIcCc3_B3h8/U0TtVsx8cEI/AAAAAAAABKA/EtCB9r0Hoks/s1600/07.%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC%25E7%25B2%25BE%25E9%259D%2588.png)](http://1.bp.blogspot.com/-TIcCc3_B3h8/U0TtVsx8cEI/AAAAAAAABKA/EtCB9r0Hoks/s1600/07.%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC%25E7%25B2%25BE%25E9%259D%2588.png)  範本名稱是要給人看的 範本描述簡單說明一下這個專案是做什麼用的 如果有圖片的話也可以放進來 專案範本就完成了[![](http://1.bp.blogspot.com/-elu9-BJQGaQ/U0TtV8kjidI/AAAAAAAABJ4/lWgTinUdLQ4/s1600/08.%25E5%258C%25AF%25E5%2587%25BA%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC.png)](http://1.bp.blogspot.com/-elu9-BJQGaQ/U0TtV8kjidI/AAAAAAAABJ4/lWgTinUdLQ4/s1600/08.%25E5%258C%25AF%25E5%2587%25BA%25E5%25B0%2588%25E6%25A1%2588%25E7%25AF%2584%25E6%259C%25AC.png) 因為剛有勾選自動將範本匯入Visual Studio，所以開新專案的時後，就可以看到剛建立的專案範本了 [![](http://2.bp.blogspot.com/-L_oMOayUJNc/U0TtW1-oFYI/AAAAAAAABKI/phhjmku5sFU/s1600/09.%25E9%2596%258B%25E6%2596%25B0%25E5%25B0%2588%25E6%25A1%2588.png)](http://2.bp.blogspot.com/-L_oMOayUJNc/U0TtW1-oFYI/AAAAAAAABKI/phhjmku5sFU/s1600/09.%25E9%2596%258B%25E6%2596%25B0%25E5%25B0%2588%25E6%25A1%2588.png)  但這個範本和預設的範本放在一起不太好找 接下來希望能有一個自已的分類 首先找到自訂範本的位置 [![](http://2.bp.blogspot.com/-H1O_ErSms_c/U0TyGqKM3TI/AAAAAAAABKw/zjSmcw7Kujc/s1600/10.1%E7%AF%84%E6%9C%AC%E9%A0%90%E8%A8%AD%E5%80%BC%E7%BD%AE.png)](http://2.bp.blogspot.com/-H1O_ErSms_c/U0TyGqKM3TI/AAAAAAAABKw/zjSmcw7Kujc/s1600/10.1%E7%AF%84%E6%9C%AC%E9%A0%90%E8%A8%AD%E5%80%BC%E7%BD%AE.png) 打開後會看到剛剛匯出的專案範本，其實就是一個壓縮檔 [![](http://1.bp.blogspot.com/-Iw7XakUUcQY/U0TtXZ6ih4I/AAAAAAAABKQ/1O2Z9zZ7MNE/s1600/10.%25E7%25AF%2584%25E6%259C%25AC%25E4%25BD%258D%25E7%25BD%25AE.png)](http://1.bp.blogspot.com/-Iw7XakUUcQY/U0TtXZ6ih4I/AAAAAAAABKQ/1O2Z9zZ7MNE/s1600/10.%25E7%25AF%2584%25E6%259C%25AC%25E4%25BD%258D%25E7%25BD%25AE.png)  因為要建立分類，所以將這個範本移動到Visual C#資料夾下面 建立的目錄名稱就是之後分類層級的名稱 [![](http://3.bp.blogspot.com/-_Y1dYlRh8K0/U0TtXuBYUqI/AAAAAAAABKk/oRrL66fV0hM/s1600/11.%25E8%2587%25AA%25E8%25A8%2582%25E7%25AF%2584%25E6%259C%25AC%25E4%25BD%258D%25E7%25BD%25AE.png)](http://3.bp.blogspot.com/-_Y1dYlRh8K0/U0TtXuBYUqI/AAAAAAAABKk/oRrL66fV0hM/s1600/11.%25E8%2587%25AA%25E8%25A8%2582%25E7%25AF%2584%25E6%259C%25AC%25E4%25BD%258D%25E7%25BD%25AE.png)  再開一次新專案，就會看到自訂層級的專案範本了 [![](http://4.bp.blogspot.com/-IITmIIHdz0s/U0TtYFS0c8I/AAAAAAAABKc/rL5QQdKbHYU/s1600/12.%25E7%25AF%2584%25E6%259C%25AC%25E9%259A%258E%25E5%25B1%25A4.png)](http://4.bp.blogspot.com/-IITmIIHdz0s/U0TtYFS0c8I/AAAAAAAABKc/rL5QQdKbHYU/s1600/12.%25E7%25AF%2584%25E6%259C%25AC%25E9%259A%258E%25E5%25B1%25A4.png) 延伸閱讀 新增項目範本 http://blog.developer.idv.tw/2014/04/visual-studio_9.html
新增擴充套件 http://blog.developer.idv.tw/2014/04/visual-studio_522.html
參考連結 http://www.dotblogs.com.tw/hatelove/archive/2011/07/06/visual-studio-create-your-project-template.aspx
 [http://msdn.</description>
    </item>
    
    <item>
      <title>C# 多國語系</title>
      <link>http://example.org/posts/2014/04/c-%E5%A4%9A%E5%9C%8B%E8%AA%9E%E7%B3%BB/</link>
      <pubDate>Mon, 07 Apr 2014 15:31:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/04/c-%E5%A4%9A%E5%9C%8B%E8%AA%9E%E7%B3%BB/</guid>
      <description>C#的語系格式為languagecode2-country/regioncode2 可用以下列的語法列舉出所有語系 foreach (CultureInfo ci in CultureInfo.GetCultures(CultureTypes.AllCultures)) { Console.WriteLine(ci.Name); }  在.NET3.5之前簡中為zh-CHS，繁中為zh-CHT 在NET4.0之後簡中為zh-Hans，繁中為zh-Hant在C#中影響目前語系的屬性有二個 Thread.CurrentThread.CurrentCulture影響的是控制台中的設定 [![](http://3.bp.blogspot.com/-yAGbJRIJZFk/U0JM_0G_KvI/AAAAAAAABIE/yihmCUKpkbw/s1600/01.%E6%8E%A7%E5%88%B6%E5%8F%B0.png)](http://3.bp.blogspot.com/-yAGbJRIJZFk/U0JM_0G_KvI/AAAAAAAABIE/yihmCUKpkbw/s1600/01.%E6%8E%A7%E5%88%B6%E5%8F%B0.png) 例如日期、數字、貨幣的顯示格式[![](http://3.bp.blogspot.com/-am2qr9Txbm4/U0JNC5e2TdI/AAAAAAAABIM/EWAZZGoXLSM/s1600/02.%E6%A0%BC%E5%BC%8F.png)](http://3.bp.blogspot.com/-am2qr9Txbm4/U0JNC5e2TdI/AAAAAAAABIM/EWAZZGoXLSM/s1600/02.%E6%A0%BC%E5%BC%8F.png) Thread.CurrentThread.CurrentUICulture影響的則是要選用那個語系的資源檔在ASP.NET中可以透過設定檔來啟用多國語系 &amp;lt;system.web&amp;gt; &amp;lt;globalization culture=&#34;auto&#34; uiCulture=&#34;auto&#34; /&amp;gt; &amp;lt;/system.web&amp;gt;  就會自動以Http通訊協定中的Accept-Language的順序來選擇語系 [![](http://3.bp.blogspot.com/-79chB1gPP78/U0JNMI80AsI/AAAAAAAABIU/FszxyUony9U/s1600/03.AcceptLanguage.png)](http://3.bp.blogspot.com/-79chB1gPP78/U0JNMI80AsI/AAAAAAAABIU/FszxyUony9U/s1600/03.AcceptLanguage.png) 以ASP.NET WebForm為例，可以利用兩個特殊的資料夾 App_GlobalResources裡面的資源檔是全域的 App_LocalResources裡面的資源檔則是只有該層目錄下有效 將資源檔的名稱取成和Page一樣，就可以在頁面中使用GetLocalResourceObject取出資源檔中的值 [![](http://2.bp.blogspot.com/-UOsyS9PleYY/U0JNUJfjIaI/AAAAAAAABIc/0iWHhGU_GeI/s1600/04.LocalResources.png)](http://2.bp.blogspot.com/-UOsyS9PleYY/U0JNUJfjIaI/AAAAAAAABIc/0iWHhGU_GeI/s1600/04.LocalResources.png) namespace WebApplication1 { public partial class Default : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { Object s1 = this.GetLocalResourceObject(&#34;s1&#34;); Response.Write(s1.ToString()); } } }  除了依瀏覽器的設定來選擇語系之外，也可以強制指定語系 比較常見的情況是讓使用者自行選擇語系後用cookie或session記住 然後在AcquireRequestState事件中取代目前的指定語系 namespace WebApplication1 { public class Global : System.Web.HttpApplication { protected void Application_Start(object sender, EventArgs e) { }  protected void Application_AcquireRequestState(object sender, EventArgs e) { HttpCookie cookie = this.</description>
    </item>
    
    <item>
      <title>手動設定WIF</title>
      <link>http://example.org/posts/2014/03/%E6%89%8B%E5%8B%95%E8%A8%AD%E5%AE%9Awif/</link>
      <pubDate>Mon, 24 Mar 2014 11:11:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/03/%E6%89%8B%E5%8B%95%E8%A8%AD%E5%AE%9Awif/</guid>
      <description>首先引用System.IdentityModel和System.IdentityModel.Service這兩個元件[![](http://1.bp.blogspot.com/-JeEQBHGiBCA/Uy-gIfqaWrI/AAAAAAAABHg/CKFEhn8Di6I/s1600/01.add+component.png)](http://1.bp.blogspot.com/-JeEQBHGiBCA/Uy-gIfqaWrI/AAAAAAAABHg/CKFEhn8Di6I/s1600/01.add+component.png) 再來到web.config加入幾個設定 先加入這兩個元件的configSection
&amp;lt;configSections&amp;gt; &amp;lt;section name=&#34;system.identityModel&#34; type=&#34;System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089&#34; /&amp;gt; &amp;lt;section name=&#34;system.identityModel.services&#34; type=&#34;System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089&#34; /&amp;gt; &amp;lt;/configSections&amp;gt;  再來在System.Web區段中，把網站的驗證模組設定None和不允許匿名登入 &amp;lt;system.web&amp;gt; &amp;lt;authentication mode=&#34;None&#34; /&amp;gt; &amp;lt;authorization&amp;gt; &amp;lt;deny users=&#34;?&#34; /&amp;gt; &amp;lt;/authorization&amp;gt; &amp;lt;compilation debug=&#34;true&#34; targetFramework=&#34;4.5&#34;/&amp;gt; &amp;lt;httpRuntime targetFramework=&#34;4.5&#34;/&amp;gt; &amp;lt;/system.web&amp;gt;  再來在System.webServer區段中，啟用兩個HttpModule &amp;lt;system.webServer&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;add name=&#34;WSFederationAuthenticationModule&#34; type=&#34;System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#34; preCondition=&#34;managedHandler&#34; /&amp;gt; &amp;lt;add name=&#34;SessionAuthenticationModule&#34; type=&#34;System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&#34; preCondition=&#34;managedHandler&#34; /&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;/system.webServer&amp;gt;  最後加入WIF的設定 &amp;lt;system.identityModel&amp;gt; &amp;lt;identityConfiguration&amp;gt; &amp;lt;audienceUris&amp;gt; &amp;lt;add value=&#34;http://localhost:12345/&#34; /&amp;gt; &amp;lt;/audienceUris&amp;gt; &amp;lt;securityTokenHandlers&amp;gt; &amp;lt;add type=&#34;</description>
    </item>
    
    <item>
      <title>Claims-Based Identity 筆記</title>
      <link>http://example.org/posts/2014/02/claims-based-identity-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Fri, 14 Feb 2014 17:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/02/claims-based-identity-%E7%AD%86%E8%A8%98/</guid>
      <description>ADFS 2.0 安裝與設定
ADFS 2.0 新增信任的信賴憑證者
ADFS 2.0 使用VS2013設定Claims-Aware Application
手動設定WIF</description>
    </item>
    
    <item>
      <title>ADFS 2.0 使用VS2013設定Claims-Aware Application</title>
      <link>http://example.org/posts/2014/02/adfs-2-0-%E4%BD%BF%E7%94%A8vs2013%E8%A8%AD%E5%AE%9Aclaims-aware-application/</link>
      <pubDate>Fri, 14 Feb 2014 15:19:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/02/adfs-2-0-%E4%BD%BF%E7%94%A8vs2013%E8%A8%AD%E5%AE%9Aclaims-aware-application/</guid>
      <description>首先新增一個Web專案
[![](http://4.bp.blogspot.com/-frB8XFpPq-M/Uv2_nlHATGI/AAAAAAAABGE/7bdvPVOlIGM/s1600/01.png)](http://4.bp.blogspot.com/-frB8XFpPq-M/Uv2_nlHATGI/AAAAAAAABGE/7bdvPVOlIGM/s1600/01.png) 這裡以MVC專案為例，選擇變更驗證 [![](http://1.bp.blogspot.com/-EQ_0_80Szks/Uv2_nuTN4XI/AAAAAAAABGU/KMEiOWyKHHs/s1600/02.png)](http://1.bp.blogspot.com/-EQ_0_80Szks/Uv2_nuTN4XI/AAAAAAAABGU/KMEiOWyKHHs/s1600/02.png) 驗證方式改成組織帳戶，登入方式改成內部部署，並輸入FederationMetadata.xml的網址和應用程式的網址，需要SSL [![](http://2.bp.blogspot.com/-WUWRhLcsXsk/Uv2_oQgw0kI/AAAAAAAABHQ/H9QJB3QEHA0/s1600/03.png)](http://2.bp.blogspot.com/-WUWRhLcsXsk/Uv2_oQgw0kI/AAAAAAAABHQ/H9QJB3QEHA0/s1600/03.png) FederationMetadata.xml的位置可在ADFS的服務&amp;gt;&amp;gt;端點找到 [![](http://1.bp.blogspot.com/-bDrc3om0kn8/Uv2_n9UMtUI/AAAAAAAABGM/VL4uWs_8kEw/s1600/03-1.png)](http://1.bp.blogspot.com/-bDrc3om0kn8/Uv2_n9UMtUI/AAAAAAAABGM/VL4uWs_8kEw/s1600/03-1.png) 驗證方式變更為組織驗證(內部部署)後，按下確定建立新專案 [![](http://2.bp.blogspot.com/-erHnn5RET2c/Uv2_oYDieJI/AAAAAAAABGc/01T-6PJBLqw/s1600/04.png)](http://2.bp.blogspot.com/-erHnn5RET2c/Uv2_oYDieJI/AAAAAAAABGc/01T-6PJBLqw/s1600/04.png) 將網站部署到IIS後，輸入該網站的網址來測試一下，因為SSL用的憑證是自已發的，所以會有警告訊息 [![](http://3.bp.blogspot.com/-zYDsYTeus3I/Uv2_ozmIA3I/AAAAAAAABGk/gDEDCuTTjHo/s1600/05.png)](http://3.bp.blogspot.com/-zYDsYTeus3I/Uv2_ozmIA3I/AAAAAAAABGk/gDEDCuTTjHo/s1600/05.png) 接下來會轉向到STS去做驗證，一樣會有SSL的警告訊息 [![](http://4.bp.blogspot.com/-SVRzTLtiLdo/Uv2_pLZkSnI/AAAAAAAABGs/zJuMX9PP9qE/s1600/06.png)](http://4.bp.blogspot.com/-SVRzTLtiLdo/Uv2_pLZkSnI/AAAAAAAABGs/zJuMX9PP9qE/s1600/06.png) 接下來預設是會跳出視窗讓你輸入帳密 [![](http://3.bp.blogspot.com/-b9N82h1FKKw/Uv2_pfF1y0I/AAAAAAAABG0/V_Df7_i5o90/s1600/07.png)](http://3.bp.blogspot.com/-b9N82h1FKKw/Uv2_pfF1y0I/AAAAAAAABG0/V_Df7_i5o90/s1600/07.png) 如果要改成登入頁面的方式，可以到adfs的web.config中去設定一下 [![](http://4.bp.blogspot.com/-pokmnOGYPjo/Uv2_qC7sxYI/AAAAAAAABHI/NDSCVtUDzKs/s1600/09.png)](http://4.bp.blogspot.com/-pokmnOGYPjo/Uv2_qC7sxYI/AAAAAAAABHI/NDSCVtUDzKs/s1600/09.png) 找到localAuthenticationTypes區段，把forms的順序換到最上面即可 如果要自訂登入頁面，就把後面的Page指定的頁面換掉即可 &amp;lt;microsoft.identityServer.web&amp;gt; &amp;lt;localAuthenticationTypes&amp;gt; &amp;lt;!-- 把Forms換到最上面 後面的page就是登入頁面--&amp;gt; &amp;lt;add name=&#34;Forms&#34; page=&#34;FormsSignIn.aspx&#34; /&amp;gt; &amp;lt;add name=&#34;Integrated&#34; page=&#34;auth/integrated/&#34; /&amp;gt; &amp;lt;add name=&#34;TlsClient&#34; page=&#34;auth/sslclient/&#34; /&amp;gt; &amp;lt;add name=&#34;Basic&#34; page=&#34;auth/basic/&#34; /&amp;gt; &amp;lt;/localAuthenticationTypes&amp;gt; &amp;lt;commonDomainCookie writer=&#34;&#34; reader=&#34;&#34; /&amp;gt; &amp;lt;context hidden=&#34;true&#34; /&amp;gt; &amp;lt;error page=&#34;Error.aspx&#34; /&amp;gt; &amp;lt;acceptedFederationProtocols saml=&#34;true&#34; wsFederation=&#34;true&#34; /&amp;gt; &amp;lt;homeRealmDiscovery page=&#34;HomeRealmDiscovery.aspx&#34; /&amp;gt; &amp;lt;persistIdentityProviderInformation enabled=&#34;true&#34; lifetimeInDays=&#34;30&#34; /&amp;gt; &amp;lt;singleSignOn enabled=&#34;true&#34; /&amp;gt; &amp;lt;/microsoft.identityServer.web&amp;gt; &amp;lt;/configuration&amp;gt;  登入的方式就會變成一般的登入頁面 [!</description>
    </item>
    
    <item>
      <title>ADFS 2.0 新增信任的信賴憑證者</title>
      <link>http://example.org/posts/2014/02/adfs-2-0-%E6%96%B0%E5%A2%9E%E4%BF%A1%E4%BB%BB%E7%9A%84%E4%BF%A1%E8%B3%B4%E6%86%91%E8%AD%89%E8%80%85/</link>
      <pubDate>Fri, 14 Feb 2014 14:44:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/02/adfs-2-0-%E6%96%B0%E5%A2%9E%E4%BF%A1%E4%BB%BB%E7%9A%84%E4%BF%A1%E8%B3%B4%E6%86%91%E8%AD%89%E8%80%85/</guid>
      <description>接下來開始新增RP(Relying Party)
[![](http://2.bp.blogspot.com/-vLPrmmAQ0U8/Uv2JXZQ1VfI/AAAAAAAABC8/eeIGdQSZH4M/s1600/01.png)](http://2.bp.blogspot.com/-vLPrmmAQ0U8/Uv2JXZQ1VfI/AAAAAAAABC8/eeIGdQSZH4M/s1600/01.png) 設定精靈的畫面 [![](http://2.bp.blogspot.com/-Mua3r26Sssg/Uv2JXWvLLVI/AAAAAAAABDI/2ge-kfXg504/s1600/02.png)](http://2.bp.blogspot.com/-Mua3r26Sssg/Uv2JXWvLLVI/AAAAAAAABDI/2ge-kfXg504/s1600/02.png) 這裡用手動輸入為例子 [![](http://3.bp.blogspot.com/-b3dHsdW6Lgc/Uv2JYmulxHI/AAAAAAAABDw/nlRPavaRvww/s1600/03.png)](http://3.bp.blogspot.com/-b3dHsdW6Lgc/Uv2JYmulxHI/AAAAAAAABDw/nlRPavaRvww/s1600/03.png) 輸入一個給人用來識別的名稱 [![](http://3.bp.blogspot.com/-ZjIYsxbZCrQ/Uv2JYNqfZgI/AAAAAAAABDM/MfI-6QVNz2Y/s1600/04.png)](http://3.bp.blogspot.com/-ZjIYsxbZCrQ/Uv2JYNqfZgI/AAAAAAAABDM/MfI-6QVNz2Y/s1600/04.png) 選擇AD FS 2.0 設定檔 [![](http://1.bp.blogspot.com/-9ilWycLTR5E/Uv2JYdrP3NI/AAAAAAAABDY/OOm8gKBttTs/s1600/05.png)](http://1.bp.blogspot.com/-9ilWycLTR5E/Uv2JYdrP3NI/AAAAAAAABDY/OOm8gKBttTs/s1600/05.png) 這裡用簡單的例子不加密所以直接下一步 [![](http://1.bp.blogspot.com/-EHbTfRL4WUk/Uv2JYx32YjI/AAAAAAAABDg/iMoh1N6aRxI/s1600/06.png)](http://1.bp.blogspot.com/-EHbTfRL4WUk/Uv2JYx32YjI/AAAAAAAABDg/iMoh1N6aRxI/s1600/06.png) 啟用 WS-Federation 被動通訊協定的支援，注意SSL和結尾的/ [![](http://2.bp.blogspot.com/-zgPv-ndCWn8/Uv2KjlZzWRI/AAAAAAAABE4/qKrCLGZ-uHo/s1600/07.png)](http://2.bp.blogspot.com/-zgPv-ndCWn8/Uv2KjlZzWRI/AAAAAAAABE4/qKrCLGZ-uHo/s1600/07.png) 這裡的識別碼是程式要看的，也就是audienceUris [![](http://2.bp.blogspot.com/-KVQ9oz9PfYM/Uv2JaIn9wnI/AAAAAAAABEQ/M04yyBNT8bU/s1600/08.png)](http://2.bp.blogspot.com/-KVQ9oz9PfYM/Uv2JaIn9wnI/AAAAAAAABEQ/M04yyBNT8bU/s1600/08.png) 允許所有使用者存取 [![](http://3.bp.blogspot.com/-lqmg6yTu6YA/Uv2JaPAqK1I/AAAAAAAABD0/xP9qJb5EQfc/s1600/09.png)](http://3.bp.blogspot.com/-lqmg6yTu6YA/Uv2JaPAqK1I/AAAAAAAABD0/xP9qJb5EQfc/s1600/09.png) 準備新增信任 [![](http://1.bp.blogspot.com/-9gtrMYiSYlY/Uv2Jaq2uxWI/AAAAAAAABD4/xppCp5yhdXk/s1600/10.png)](http://1.bp.blogspot.com/-9gtrMYiSYlY/Uv2Jaq2uxWI/AAAAAAAABD4/xppCp5yhdXk/s1600/10.png) 新增完成，接下來順便新增要轉換的資料 [![](http://1.bp.blogspot.com/-FUHvQGzfAuI/Uv2Ja7_86YI/AAAAAAAABEM/gs0YHRPEfaE/s1600/11.png)](http://1.bp.blogspot.com/-FUHvQGzfAuI/Uv2Ja7_86YI/AAAAAAAABEM/gs0YHRPEfaE/s1600/11.png) 發佈轉換規則中新增規則 [![](http://1.bp.blogspot.com/-K-Dv1xXNaoE/Uv2MIkLNe7I/AAAAAAAABFM/kOth2Ps7GgE/s1600/12.png)](http://1.bp.blogspot.com/-K-Dv1xXNaoE/Uv2MIkLNe7I/AAAAAAAABFM/kOth2Ps7GgE/s1600/12.png) 這裡以LDAP屬性為例 [![](http://1.bp.blogspot.com/-Q39atvMpEj4/Uv2JcK2Jq2I/AAAAAAAABEc/DIpVLn9xyIE/s1600/13.png)](http://1.bp.blogspot.com/-Q39atvMpEj4/Uv2JcK2Jq2I/AAAAAAAABEc/DIpVLn9xyIE/s1600/13.png) 把LDAP的屬性，轉成要傳出的宣告類型 [![](http://3.bp.blogspot.com/-UwzwR31Cm84/Uv26uGcbNCI/AAAAAAAABFo/jEdouWyYxHE/s1600/14.png)](http://3.bp.blogspot.com/-UwzwR31Cm84/Uv26uGcbNCI/AAAAAAAABFo/jEdouWyYxHE/s1600/14.png) 轉換規則設定完成 [![](http://1.bp.blogspot.com/-M6SbsGmKqCA/Uv27ST1MLuI/AAAAAAAABFw/OV4YcWFN93w/s1600/15.png)](http://1.bp.blogspot.com/-M6SbsGmKqCA/Uv27ST1MLuI/AAAAAAAABFw/OV4YcWFN93w/s1600/15.png) 到此新增RP完成 [!</description>
    </item>
    
    <item>
      <title>ADFS 2.0 安裝與設定</title>
      <link>http://example.org/posts/2014/02/adfs-2-0-%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Fri, 14 Feb 2014 10:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/02/adfs-2-0-%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A/</guid>
      <description>Windows 2008 Server內建的ADFS是1.0版，要安裝2.0版需要手動下載安裝 安裝的過程還滿簡單的，只有幾個設定而已，開始下一步吧
[![](http://2.bp.blogspot.com/-8oaOTcFeeUM/Uv153SrSAJI/AAAAAAAABAI/_xcSqiyUb78/s1600/01.png)](http://2.bp.blogspot.com/-8oaOTcFeeUM/Uv153SrSAJI/AAAAAAAABAI/_xcSqiyUb78/s1600/01.png) 同意授權合約才可繼續下一步 [![](http://3.bp.blogspot.com/-zfdsDgP6C_o/Uv155lilVpI/AAAAAAAABAg/K6MXCm1D1vY/s1600/02.png)](http://3.bp.blogspot.com/-zfdsDgP6C_o/Uv155lilVpI/AAAAAAAABAg/K6MXCm1D1vY/s1600/02.png) 這裡以安裝同盟伺服器為例子 [![](http://2.bp.blogspot.com/-TPgO9T-t-rQ/Uv155nOki4I/AAAAAAAABAc/pdUeIXJ0-4k/s1600/03.png)](http://2.bp.blogspot.com/-TPgO9T-t-rQ/Uv155nOki4I/AAAAAAAABAc/pdUeIXJ0-4k/s1600/03.png) 安裝的先決條件軟體，需要一點時間 [![](http://3.bp.blogspot.com/-9ABxhIV9Vrk/Uv155hp8kwI/AAAAAAAABAk/KoOfO_MZEqk/s1600/04.png)](http://3.bp.blogspot.com/-9ABxhIV9Vrk/Uv155hp8kwI/AAAAAAAABAk/KoOfO_MZEqk/s1600/04.png) 安裝好了 [![](http://2.bp.blogspot.com/-Ja5YY_KbBjo/Uv16-xCBwPI/AAAAAAAABAs/j8g0Pt4u-ro/s1600/05.png)](http://2.bp.blogspot.com/-Ja5YY_KbBjo/Uv16-xCBwPI/AAAAAAAABAs/j8g0Pt4u-ro/s1600/05.png) 先來設定同盟伺服器 [![](http://4.bp.blogspot.com/-B-lvhmoco5Q/Uv17Q77tGcI/AAAAAAAABA0/m4Km-nc3HFo/s1600/06.png)](http://4.bp.blogspot.com/-B-lvhmoco5Q/Uv17Q77tGcI/AAAAAAAABA0/m4Km-nc3HFo/s1600/06.png) 建立一個新的Federation Server [![](http://2.bp.blogspot.com/-Hb97KqSKg6g/Uv17sparJoI/AAAAAAAABBA/IkZrSc_m_-8/s1600/07.png)](http://2.bp.blogspot.com/-Hb97KqSKg6g/Uv17sparJoI/AAAAAAAABBA/IkZrSc_m_-8/s1600/07.png) 選擇獨立同盟伺服器 [![](http://1.bp.blogspot.com/-BAPk5nzxTqA/Uv17suHq9_I/AAAAAAAABBE/akZowV4m6HA/s1600/08.png)](http://1.bp.blogspot.com/-BAPk5nzxTqA/Uv17suHq9_I/AAAAAAAABBE/akZowV4m6HA/s1600/08.png) 這裡需要SSL憑證，要測試的話可以先用本機簽署一個 [![](http://1.bp.blogspot.com/-MIrq5V6eH6U/Uv17uHJvnfI/AAAAAAAABBQ/xLL6V9qs770/s1600/09.png)](http://1.bp.blogspot.com/-MIrq5V6eH6U/Uv17uHJvnfI/AAAAAAAABBQ/xLL6V9qs770/s1600/09.png) 先打開IIS選擇伺服器憑證 [![](http://2.bp.blogspot.com/-QKFxIEJEwxE/Uv1_alnCAxI/AAAAAAAABBk/TiPelyRZmqM/s1600/09-1.png)](http://2.bp.blogspot.com/-QKFxIEJEwxE/Uv1_alnCAxI/AAAAAAAABBk/TiPelyRZmqM/s1600/09-1.png) 建立自我簽署憑證 [![](http://4.bp.blogspot.com/-Go2cqtUcxPo/Uv1_alfZIMI/AAAAAAAABBs/J0A94Qjv784/s1600/09-2.png)](http://4.bp.blogspot.com/-Go2cqtUcxPo/Uv1_alfZIMI/AAAAAAAABBs/J0A94Qjv784/s1600/09-2.png) 輸入一個好記的名稱 [![](http://2.bp.blogspot.com/-dtCY5ofn_3o/Uv1_aqVRRuI/AAAAAAAABBc/vV5fSUYDcwo/s1600/09-3.png)](http://2.bp.blogspot.com/-dtCY5ofn_3o/Uv1_aqVRRuI/AAAAAAAABBc/vV5fSUYDcwo/s1600/09-3.png) 建立完成 [![](http://1.bp.blogspot.com/-M97EKTrKQd8/Uv2CFsOglHI/AAAAAAAABCo/Qj5mN4mE6f0/s1600/10.png)](http://1.bp.blogspot.com/-M97EKTrKQd8/Uv2CFsOglHI/AAAAAAAABCo/Qj5mN4mE6f0/s1600/10.png) 回來ADFS的設定畫面，應該可以看到剛建立的憑證 [![](http://1.bp.blogspot.com/-rSNULMrzuOU/Uv2CFqQfTlI/AAAAAAAABCk/gRApUbBZgvY/s1600/11.png)](http://1.bp.blogspot.com/-rSNULMrzuOU/Uv2CFqQfTlI/AAAAAAAABCk/gRApUbBZgvY/s1600/11.png) 準備完成 [![](http://2.bp.blogspot.com/-q4ony3w5zK4/Uv1_cII8q4I/AAAAAAAABCI/w-Xw_27Yudg/s1600/12.png)](http://2.bp.blogspot.com/-q4ony3w5zK4/Uv1_cII8q4I/AAAAAAAABCI/w-Xw_27Yudg/s1600/12.png) 接下來就讓安裝精靈跑一會吧 [![](http://2.bp.blogspot.com/-p9arEluH2uQ/Uv1_cFRVsyI/AAAAAAAABCM/_Gorjg0QsB8/s1600/13.png)](http://2.bp.blogspot.com/-p9arEluH2uQ/Uv1_cFRVsyI/AAAAAAAABCM/_Gorjg0QsB8/s1600/13.png) 到此安裝完成 [!</description>
    </item>
    
    <item>
      <title>Windows Service 筆記</title>
      <link>http://example.org/posts/2014/01/windows-service-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 28 Jan 2014 14:31:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E7%AD%86%E8%A8%98/</guid>
      <description>Windows Service 開發 http://blog.developer.idv.tw/2014/01/windows-service.html
Windows Service 本機偵錯方式 http://blog.developer.idv.tw/2014/01/windows-service_20.html
Windows Service 遠端偵錯方式 http://blog.developer.idv.tw/2014/01/windows-service_8048.html
Windows Service 啟動參數 http://blog.developer.idv.tw/2014/01/windows-service_6343.html
Windows Service 控制介面 http://blog.developer.idv.tw/2014/01/windows-service_3882.html
TopShelf http://blog.developer.idv.tw/2016/01/topshelf.html</description>
    </item>
    
    <item>
      <title>Windows Service 控制介面</title>
      <link>http://example.org/posts/2014/01/windows-service-%E6%8E%A7%E5%88%B6%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Mon, 20 Jan 2014 18:52:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E6%8E%A7%E5%88%B6%E4%BB%8B%E9%9D%A2/</guid>
      <description>ServiceController這個類別可以用來控制Service的狀態 詳細的資訊請參考MSDN上面的文件
新增一個Windows Form應用程式來當範例
[![](http://1.bp.blogspot.com/-9Zaajyh2xjg/Utz6R411nDI/AAAAAAAAA_c/OENaeRnmfCQ/s1600/01.%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://1.bp.blogspot.com/-9Zaajyh2xjg/Utz6R411nDI/AAAAAAAAA_c/OENaeRnmfCQ/s1600/01.%E6%96%B0%E5%B0%88%E6%A1%88.png) 首先要先參考System.ServiceProcess這個元件 [![](http://3.bp.blogspot.com/-6sDG8aGMtxo/Utz6eAxax9I/AAAAAAAAA_k/-aidHLl07JQ/s1600/02.ServiceProcess.png)](http://3.bp.blogspot.com/-6sDG8aGMtxo/Utz6eAxax9I/AAAAAAAAA_k/-aidHLl07JQ/s1600/02.ServiceProcess.png) 簡單拉兩個按鈕來控制啟動或停止服務 [![](http://4.bp.blogspot.com/-e7Ashr3npdo/Utz-zlUNARI/AAAAAAAAA_w/_XQ09xrhLi8/s1600/03.%E6%8C%89%E9%88%95.png)](http://4.bp.blogspot.com/-e7Ashr3npdo/Utz-zlUNARI/AAAAAAAAA_w/_XQ09xrhLi8/s1600/03.%E6%8C%89%E9%88%95.png) 在Button Click事件中，透過ServiceController來切換狀態 private void Btn_Start_Click(object sender, EventArgs e) { // 設定服務 using (ServiceController objSC = new ServiceController(&#34;Service1&#34;)) { // 設定一個 Timeout 時間，若超過 30 秒啟動不成功就宣告失敗 TimeSpan timeout = TimeSpan.FromMilliseconds(1000 * 30);  // 啟動服務 objSC.Start(); // 設定該服務必須在timeout時間內切換到Running狀態 objSC.WaitForStatus(ServiceControllerStatus.Running, timeout); }  }
private void Btn_Stop_Click(object sender, EventArgs e) { // 設定服務 using (ServiceController objSC = new ServiceController(&amp;ldquo;Service1&amp;rdquo;)) { // 若該服務不是「停用」的狀態，才將其停止運作，否則會引發 Exception
if (objSC.</description>
    </item>
    
    <item>
      <title>Windows Service 啟動參數</title>
      <link>http://example.org/posts/2014/01/windows-service-%E5%95%9F%E5%8B%95%E5%8F%83%E6%95%B8/</link>
      <pubDate>Mon, 20 Jan 2014 18:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E5%95%9F%E5%8B%95%E5%8F%83%E6%95%B8/</guid>
      <description>Windows Service可以透過幾種方式來傳入啟動參數 可以利用服務的啟動參數
[![](http://1.bp.blogspot.com/-23WhzTbJ75Y/UtzyuOGrojI/AAAAAAAAA-Q/Pnyc88yUKcw/s1600/02.%E5%95%9F%E5%8B%95%E5%8F%83%E6%95%B8.png)](http://1.bp.blogspot.com/-23WhzTbJ75Y/UtzyuOGrojI/AAAAAAAAA-Q/Pnyc88yUKcw/s1600/02.%E5%95%9F%E5%8B%95%E5%8F%83%E6%95%B8.png) OnStart就可以收到參數 [![](http://2.bp.blogspot.com/-0B5CCS1rGhc/UtzyyZKFSGI/AAAAAAAAA-Y/sCbNvZRXSdg/s1600/03.Args.png)](http://2.bp.blogspot.com/-0B5CCS1rGhc/UtzyyZKFSGI/AAAAAAAAA-Y/sCbNvZRXSdg/s1600/03.Args.png) 但需要注意這種方式只能設定一次，下次啟動還要再設定才行 透過命令列的話有兩種方式 net start service1 /3000 /yyyyMMddHHmmss 但這種方式收到的參數也會有斜線 [![](http://2.bp.blogspot.com/-lwImaTWKjac/Utz0jVWsL2I/AAAAAAAAA-k/j-Sc7uTxWoc/s1600/07.%E6%9C%89%E6%96%9C%E7%B7%9A.png)](http://2.bp.blogspot.com/-lwImaTWKjac/Utz0jVWsL2I/AAAAAAAAA-k/j-Sc7uTxWoc/s1600/07.%E6%9C%89%E6%96%9C%E7%B7%9A.png) sc start service1 3000 yyyyMMddHHmmss 這種方式就不會有斜線了 還有一種方式是設定在服務機碼的ImagePath後面 需要透過覆寫安裝程式的Install函式來完成
using System.Collections; using System.ComponentModel; using Microsoft.Win32; namespace MyService { [RunInstaller(true)] public partial class ProjectInstaller : System.Configuration.Install.Installer { public ProjectInstaller() { InitializeComponent(); }
 public override void Install(IDictionary stateSaver) { base.Install(stateSaver); // 安裝的時後增加啟動參數 RegistryKey System = Registry.LocalMachine.OpenSubKey(&amp;quot;System&amp;quot;); RegistryKey currentControlSet = System.OpenSubKey(&amp;quot;CurrentControlSet&amp;quot;); RegistryKey services = currentControlSet.OpenSubKey(&amp;quot;Services&amp;quot;); RegistryKey service = services.</description>
    </item>
    
    <item>
      <title>Windows Service 遠端偵錯方式</title>
      <link>http://example.org/posts/2014/01/windows-service-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 20 Jan 2014 16:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F/</guid>
      <description>通常在本機開發的時後都是沒有問題的，會發生問題都是佈署到正式環境後才會發生=&amp;quot;= 而用一般遠端偵錯的方式，都是已經啟動服務成功才能下中斷點 如果問題出在啟動失敗的話，就中斷不到 這種情境可以加入System.Diagnostics.Debugger.Launch(); 讓應用程式等待偵錯工具的連入後才會繼續執行下去
using System.ServiceProcess; namespace MyService { public partial class Service1 : ServiceBase { private NowTimeReporter reporter = new NowTimeReporter();
 public Service1() { InitializeComponent(); // 偵錯中斷用 System.Diagnostics.Debugger.Launch(); } protected override void OnStart(string[] args) { this.reporter.Start(); } protected override void OnStop() { this.reporter.Stop(); } }  }  執行start.bat來啟動服務
net start Service1  就會跳出選擇偵錯工具的畫面，這裡先不選擇 [![](http://4.bp.blogspot.com/-M5Yf05_bGOY/UtzipUSGl4I/AAAAAAAAA9s/cJf4tdbcxzU/s1600/05.%E5%81%B5%E9%8C%AF%E5%B7%A5%E5%85%B7.png)](http://4.bp.blogspot.com/-M5Yf05_bGOY/UtzipUSGl4I/AAAAAAAAA9s/cJf4tdbcxzU/s1600/05.%E5%81%B5%E9%8C%AF%E5%B7%A5%E5%85%B7.png) 回到本機，選擇工具-&amp;gt;附加執行緒，選擇遠端和輸入IP，再選擇執行檔，然後附加就行了 [![](http://4.bp.blogspot.com/-uGb298oEAvQ/UtzhrLGSTuI/AAAAAAAAA9g/VvbGAN2T-N8/s1600/07.%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF.png)](http://4.bp.blogspot.com/-uGb298oEAvQ/UtzhrLGSTuI/AAAAAAAAA9g/VvbGAN2T-N8/s1600/07.%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF.png) 到Server中上放開偵錯工具選擇畫面 [![](http://2.bp.blogspot.com/-BusT8ywXWiA/Utzi77WLxFI/AAAAAAAAA90/JnWf7kSvQXs/s1600/08.%E6%94%BE%E9%96%8B.png)](http://2.bp.blogspot.com/-BusT8ywXWiA/Utzi77WLxFI/AAAAAAAAA90/JnWf7kSvQXs/s1600/08.%E6%94%BE%E9%96%8B.png) 就會停在System.Diagnostics.Debugger.Launch();這一行
[![](http://3.bp.blogspot.com/-03HYHEc8Wc0/UtzeoQPD90I/AAAAAAAAA9I/0OhDXBJnB4Y/s1600/06.%E4%B8%AD%E6%96%B7.png)](http://3.bp.blogspot.com/-03HYHEc8Wc0/UtzeoQPD90I/AAAAAAAAA9I/0OhDXBJnB4Y/s1600/06.%E4%B8%AD%E6%96%B7.png) 在本機也可以用這種偵錯方式，就不用到應用程式進入點去動手腳 只要讓服務啟動，再選擇偵錯工具連入就行了 [![](http://2.bp.blogspot.com/-02isQmXS3aw/UtzkHFl5KlI/AAAAAAAAA-A/g8Jzp4hsUG0/s1600/09.%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF.png)](http://2.bp.blogspot.com/-02isQmXS3aw/UtzkHFl5KlI/AAAAAAAAA-A/g8Jzp4hsUG0/s1600/09.%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF.png) </description>
    </item>
    
    <item>
      <title>Windows Service 本機偵錯方式</title>
      <link>http://example.org/posts/2014/01/windows-service-%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F-1/</link>
      <pubDate>Mon, 20 Jan 2014 16:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F-1/</guid>
      <description>Windows Service輸出類型雖然是Windows 應用程式
[![](http://2.bp.blogspot.com/-gYEQnP9vcX0/UtzUoK5OSuI/AAAAAAAAA8I/CG9AE2X77G0/s1600/01.%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png)](http://2.bp.blogspot.com/-gYEQnP9vcX0/UtzUoK5OSuI/AAAAAAAAA8I/CG9AE2X77G0/s1600/01.%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png) 但開發的時後直接執行卻會出現啟動錯誤的提示訊息 [![](http://3.bp.blogspot.com/-k-LwIRVhZpI/UtzUsdZe7DI/AAAAAAAAA8Q/TzHsZQQvEvI/s1600/02.%E5%95%9F%E5%8B%95%E9%8C%AF%E8%AA%A4.png)](http://3.bp.blogspot.com/-k-LwIRVhZpI/UtzUsdZe7DI/AAAAAAAAA8Q/TzHsZQQvEvI/s1600/02.%E5%95%9F%E5%8B%95%E9%8C%AF%E8%AA%A4.png) 原因在於程式進入點是用ServiceBase來啟動，而不是Application.Run using System.ServiceProcess; namespace MyService { static class Program { /// &amp;lt;summary&amp;gt; /// 應用程式的主要進入點。 /// &amp;lt;/summary&amp;gt; static void Main() { ServiceBase[] ServicesToRun; ServicesToRun = new ServiceBase[] { new Service1() }; ServiceBase.Run(ServicesToRun); } } }  為了方便本機開發，就需要先動點手腳 首先先把邏輯拆到獨立的類別去，並公開Start和Stop方法
using System; using System.Timers; using Common.Logging; namespace MyService { internal class NowTimeReporter { private Timer timer; private ILog log; private double timerInterval = 1000; private string datetimeFormat = &amp;ldquo;yyyy/MM/dd HH:mm:ss&amp;rdquo;;</description>
    </item>
    
    <item>
      <title>Windows Service 本機偵錯方式</title>
      <link>http://example.org/posts/2014/01/windows-service-%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 20 Jan 2014 16:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E6%9C%AC%E6%A9%9F%E5%81%B5%E9%8C%AF%E6%96%B9%E5%BC%8F/</guid>
      <description>Windows Service輸出類型雖然是Windows 應用程式
[![](http://2.bp.blogspot.com/-gYEQnP9vcX0/UtzUoK5OSuI/AAAAAAAAA8I/CG9AE2X77G0/s1600/01.%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png)](http://2.bp.blogspot.com/-gYEQnP9vcX0/UtzUoK5OSuI/AAAAAAAAA8I/CG9AE2X77G0/s1600/01.%E5%B0%88%E6%A1%88%E9%A1%9E%E5%9E%8B.png) 但開發的時後直接執行卻會出現啟動錯誤的提示訊息 [![](http://3.bp.blogspot.com/-k-LwIRVhZpI/UtzUsdZe7DI/AAAAAAAAA8Q/TzHsZQQvEvI/s1600/02.%E5%95%9F%E5%8B%95%E9%8C%AF%E8%AA%A4.png)](http://3.bp.blogspot.com/-k-LwIRVhZpI/UtzUsdZe7DI/AAAAAAAAA8Q/TzHsZQQvEvI/s1600/02.%E5%95%9F%E5%8B%95%E9%8C%AF%E8%AA%A4.png) 原因在於程式進入點是用ServiceBase來啟動，而不是Application.Run using System.ServiceProcess; namespace MyService { static class Program { /// &amp;lt;summary&amp;gt; /// 應用程式的主要進入點。 /// &amp;lt;/summary&amp;gt; static void Main() { ServiceBase[] ServicesToRun; ServicesToRun = new ServiceBase[] { new Service1() }; ServiceBase.Run(ServicesToRun); } } }  為了方便本機開發，就需要先動點手腳 首先先把邏輯拆到獨立的類別去，並公開Start和Stop方法
using System; using System.Timers; using Common.Logging; namespace MyService { internal class NowTimeReporter { private Timer timer; private ILog log; private double timerInterval = 1000; private string datetimeFormat = &amp;ldquo;yyyy/MM/dd HH:mm:ss&amp;rdquo;;</description>
    </item>
    
    <item>
      <title>Windows Service 開發</title>
      <link>http://example.org/posts/2014/01/windows-service-%E9%96%8B%E7%99%BC/</link>
      <pubDate>Mon, 20 Jan 2014 13:45:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2014/01/windows-service-%E9%96%8B%E7%99%BC/</guid>
      <description>Windows Service是一種沒有UI，開機後不需使用者登入就會執行的應用程式，通常會用來做一些定時排程的工作。 用C#開發Windows Service很簡單，以下用一個簡單的範例來介紹
 首先開一個新專案，名稱為MyService[![](http://4.bp.blogspot.com/-nPZ1TWcF_gE/UtyZHPYoD6I/AAAAAAAAA5U/PmOegTcO0ZQ/s1600/01.NewProject.png)](http://4.bp.blogspot.com/-nPZ1TWcF_gE/UtyZHPYoD6I/AAAAAAAAA5U/PmOegTcO0ZQ/s1600/01.NewProject.png) 在方案總管中可以看到，只有Program.cs和Service1.cs兩個檔案[![](http://3.bp.blogspot.com/-67GklNvhUr4/UtyZTsHucXI/AAAAAAAAA5c/tGlNpdjspvM/s1600/02.%E6%96%B9%E6%A1%88%E7%B8%BD%E7%AE%A1.png)](http://3.bp.blogspot.com/-67GklNvhUr4/UtyZTsHucXI/AAAAAAAAA5c/tGlNpdjspvM/s1600/02.%E6%96%B9%E6%A1%88%E7%B8%BD%E7%AE%A1.png) 先來看看Program.cs，這是應用程式的進入點，主要是透過ServiceBase.Run來啟動服務using System.ServiceProcess; namespace MyService { static class Program { /// &amp;lt;summary&amp;gt; /// 應用程式的主要進入點。 /// &amp;lt;/summary&amp;gt; static void Main() { ServiceBase[] ServicesToRun; ServicesToRun = new ServiceBase[] { new Service1() }; ServiceBase.Run(ServicesToRun); } } }
再來看一下Service1.cs，可以看到是繼承自ServiceBase的類別，再自行覆寫要處理的事件using System.ServiceProcess;
namespace MyService { public partial class Service1 : ServiceBase { public Service1() { InitializeComponent(); }
 protected override void OnStart(string[] args) { } protected override void OnStop() { } }  }</description>
    </item>
    
    <item>
      <title>Common.Logging</title>
      <link>http://example.org/posts/2013/12/common-logging/</link>
      <pubDate>Tue, 24 Dec 2013 15:45:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/12/common-logging/</guid>
      <description>在開始使用log4net或NLog這種Logging元件來處理log，是一個很美好的開發經驗，但在開發類別庫專案的時後，會碰到循環參考的問題，這時後改用Common.Logging會比較好
Common.Logging是一個Log介面，可以支援log4net、NLog、Enterprise Library Logging，透過設定檔把Log轉接到真正要使用的Log元件，在日後轉換Log元件的時後很方便，詳細的介紹可以參考官網，以下用一個類別庫專案搭配一個應用程式來介紹這個元件的使用方式
Common.Logging 2.2.0版之後，相依於Common.Logging.Core套件 應該是為了可儶性，把介面和抽象類別分離到Core套件 在套件的使用上要做點調整
Common Logging 2.3.1版之後，已不再使用Common.Logging.Core 為了比較好在Log套件的多個版本之間切換，對應的Log套件後面都會有指定的版本 例如Common.Logging.NLog31對應到NLog 3.1版本
首先開啟一個類別庫專案，並透過NuGet加入Common.Logging參考
[![](http://1.bp.blogspot.com/-YZT52XVZA3Q/VHKbhm-Vn9I/AAAAAAAABvo/xwz2a-Mpg_Q/s1600/01.NuGet%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-YZT52XVZA3Q/VHKbhm-Vn9I/AAAAAAAABvo/xwz2a-Mpg_Q/s1600/01.NuGet%E5%A5%97%E4%BB%B6.png) 簡單寫一個函式讓之後引用的程式來呼叫
using Common.Logging; namespace ClassLibrary1 { public class Class1 { private ILog log = LogManager.GetLogger&amp;lt;Class1&amp;gt;());
 public void SayHello() { this.log.Info(&amp;quot;Hello&amp;quot;); } }  }  再來新增一個Windows Form應用程式，並引用剛寫的庫別庫專案
[![](http://4.bp.blogspot.com/-xaXV4Oh0V4A/Urk59141GjI/AAAAAAAAA4o/tmXK3kNuKj0/s1600/02.ref.png)](http://4.bp.blogspot.com/-xaXV4Oh0V4A/Urk59141GjI/AAAAAAAAA4o/tmXK3kNuKj0/s1600/02.ref.png) 簡單寫一個Button Click來呼叫類別庫中的函式 using System; using System.Windows.Forms; namespace WindowsFormsApplication1 { public partial class Form1 : Form { public Form1() { InitializeComponent(); }
 private void button1_Click(object sender, EventArgs e) { ClassLibrary1.</description>
    </item>
    
    <item>
      <title>NuGet Multiple Framework 建置</title>
      <link>http://example.org/posts/2013/12/nuget-multiple-framework-%E5%BB%BA%E7%BD%AE/</link>
      <pubDate>Tue, 24 Dec 2013 11:20:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/12/nuget-multiple-framework-%E5%BB%BA%E7%BD%AE/</guid>
      <description>NuGet使用一段時間之後，開始碰到共用的元件，在不同專案的Framework版本不同，會有引用上的困擾，在網路上找了幾個解決方案，實作之後個人覺的比較簡單的方法如下 Step1 每個版本建立一個方案檔 一般專案的命名為net20、net35、net40、net45&amp;hellip; 其他類型的專案則再加上縮寫 Client Profile(client) WindowsPhone(wp) Silverlight(sl) CompactFramework(cf) 更多完整的資料請參考官網文件 http://docs.nuget.org/docs/creating-packages/creating-and-publishing-a-package
[![](http://3.bp.blogspot.com/-Z_7Nwh3E004/Urj3_IOzGmI/AAAAAAAAA3Q/JSdtbB7ne1Q/s1600/01.sln.png)](http://3.bp.blogspot.com/-Z_7Nwh3E004/Urj3_IOzGmI/AAAAAAAAA3Q/JSdtbB7ne1Q/s1600/01.sln.png)[![](http://2.bp.blogspot.com/-w46datk00Fw/Urj4AWcam2I/AAAAAAAAA3Y/A-GmHxGvsY0/s1600/02.sln.png)](http://2.bp.blogspot.com/-w46datk00Fw/Urj4AWcam2I/AAAAAAAAA3Y/A-GmHxGvsY0/s1600/02.sln.png)Step2 每一個版本建立一個專案檔[![](http://1.bp.blogspot.com/-GcIzkWZiGz0/Urj4QuT3lII/AAAAAAAAA3c/IbIp_s_gt8g/s1600/03.csproj.png)](http://1.bp.blogspot.com/-GcIzkWZiGz0/Urj4QuT3lII/AAAAAAAAA3c/IbIp_s_gt8g/s1600/03.csproj.png) [![](http://3.bp.blogspot.com/-wPPOHszWFcA/Urj4RmcGNvI/AAAAAAAAA3o/XBtd2ATXs14/s1600/04.csproj.png)](http://3.bp.blogspot.com/-wPPOHszWFcA/Urj4RmcGNvI/AAAAAAAAA3o/XBtd2ATXs14/s1600/04.csproj.png) Step3 每一個專案檔選擇不同的Framework，以及條件式編譯符號和修改輸出路徑 **注意每個組態都要設定喔 **[![](http://2.bp.blogspot.com/-B84By-NaVHE/Urj4ZL6TGpI/AAAAAAAAA3s/mZLbwfLGEHw/s1600/05.version.png)](http://2.bp.blogspot.com/-B84By-NaVHE/Urj4ZL6TGpI/AAAAAAAAA3s/mZLbwfLGEHw/s1600/05.version.png)[![](http://2.bp.blogspot.com/-9Ka8GNPihf0/Urj4abt1ZLI/AAAAAAAAA34/jRp00XFmLv8/s1600/06.output.png)](http://2.bp.blogspot.com/-9Ka8GNPihf0/Urj4abt1ZLI/AAAAAAAAA34/jRp00XFmLv8/s1600/06.output.png)Step4 依Framework版本，加上條件式編譯 using System; using System.Collections.Generic; #if NET35 || NET40 || NET45 using System.Linq; #endif
using System.Text;
#if NET40 || NET45 using System.Threading.Tasks; #endif
namespace ClassLibrary1 { public class Class1 { } }
Step5 手動建立nuget spec檔
[![](http://2.bp.blogspot.com/-_JkzDLOeeJc/Urj4jGQfcnI/AAAAAAAAA38/nPBreRhuDJA/s1600/07.spec.png)](http://2.bp.blogspot.com/-_JkzDLOeeJc/Urj4jGQfcnI/AAAAAAAAA38/nPBreRhuDJA/s1600/07.spec.png)&amp;lt;?xml version=&#34;1.0&#34;?&amp;gt; &amp;lt;package &amp;gt; &amp;lt;metadata&amp;gt; &amp;lt;id&amp;gt;ClassLibrary1&amp;lt;/id&amp;gt; &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt; &amp;lt;authors&amp;gt;xian&amp;lt;/authors&amp;gt; &amp;lt;owners&amp;gt;xian&amp;lt;/owners&amp;gt; &amp;lt;licenseUrl&amp;gt;http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/licenseUrl&amp;gt; &amp;lt;projectUrl&amp;gt;http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/projectUrl&amp;gt; &amp;lt;iconUrl&amp;gt;http://ICON_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/iconUrl&amp;gt; &amp;lt;requireLicenseAcceptance&amp;gt;false&amp;lt;/requireLicenseAcceptance&amp;gt; &amp;lt;description&amp;gt;Package description&amp;lt;/description&amp;gt; &amp;lt;releaseNotes&amp;gt;Summary of changes made in this release of the package.</description>
    </item>
    
    <item>
      <title>好用的LogViewer</title>
      <link>http://example.org/posts/2013/11/%E5%A5%BD%E7%94%A8%E7%9A%84logviewer/</link>
      <pubDate>Mon, 04 Nov 2013 18:25:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/11/%E5%A5%BD%E7%94%A8%E7%9A%84logviewer/</guid>
      <description>Log2Console是個好用的Log Viewer，可以配合Log4Net或NLog使用 首先到官網下載
[![](http://1.bp.blogspot.com/-1SU04Sq3oOc/UndxtGbDi3I/AAAAAAAAA14/21nZBzzTQVg/s1600/01.download.png)](http://1.bp.blogspot.com/-1SU04Sq3oOc/UndxtGbDi3I/AAAAAAAAA14/21nZBzzTQVg/s1600/01.download.png) 安裝好後先設定接收方式
[![](http://4.bp.blogspot.com/-hx4I28pk5po/Undxwe6iabI/AAAAAAAAA2A/1VERa_k_LQs/s1600/02.receive.png)](http://4.bp.blogspot.com/-hx4I28pk5po/Undxwe6iabI/AAAAAAAAA2A/1VERa_k_LQs/s1600/02.receive.png) 這裡以UDP為例
[![](http://2.bp.blogspot.com/-DyJoQXRgRBo/Undx0h2GzVI/AAAAAAAAA2I/1L9xaWi3D3Q/s1600/03.add.png)](http://2.bp.blogspot.com/-DyJoQXRgRBo/Undx0h2GzVI/AAAAAAAAA2I/1L9xaWi3D3Q/s1600/03.add.png) 設定要使用的Port號就行了 下方是log4net的設定範例
[![](http://3.bp.blogspot.com/-GkGKo0EWtOU/Undx4VhUDRI/AAAAAAAAA2Q/CBvil9xgUg4/s1600/04.udpport.png)](http://3.bp.blogspot.com/-GkGKo0EWtOU/Undx4VhUDRI/AAAAAAAAA2Q/CBvil9xgUg4/s1600/04.udpport.png) 以NLog來當日誌輸出元件的話，可以透過Chainsaw將Log寫到指定的位址和埠號
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt; &amp;amp;lt;!--  See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs. &amp;ndash;&amp;gt; &amp;lt;targets&amp;gt; &amp;lt;target xsi:type=&amp;quot;Chainsaw&amp;rdquo; name=&amp;quot;viewer&amp;rdquo; address=&amp;quot;tcp://127.0.0.1:7071&amp;rdquo; /&amp;gt; &amp;lt;/targets&amp;gt;
&amp;amp;lt;rules&amp;amp;gt; &amp;amp;lt;logger name=&amp;quot;*&amp;quot; minlevel=&amp;quot;Trace&amp;quot; writeTo=&amp;quot;viewer&amp;quot; /&amp;amp;gt; &amp;amp;lt;/rules&amp;amp;gt;  &amp;lt;/nlog&amp;gt; 
隨便輸出幾個Log試試
using NLog; namespace ConsoleApplication1 { class Program { private static Logger log = LogManager.GetLogger(&amp;ldquo;Program&amp;rdquo;);
 static void Main(string[] args) { log.</description>
    </item>
    
    <item>
      <title>TeamCity 刪除特定的Nuget Package</title>
      <link>http://example.org/posts/2013/10/teamcity-%E5%88%AA%E9%99%A4%E7%89%B9%E5%AE%9A%E7%9A%84nuget-package/</link>
      <pubDate>Wed, 09 Oct 2013 11:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/10/teamcity-%E5%88%AA%E9%99%A4%E7%89%B9%E5%AE%9A%E7%9A%84nuget-package/</guid>
      <description>因為設定上的問題，從TeamCity所生成管理的Nuget package的版本號碼會有衝突 所以需要把有問題的package先刪除 但TeamCity本身沒有直接支援刪除的功能，找到了一篇用reset api刪除的方式
利用Filddler來執行rest api，網址為http://&amp;lt;teamcity&amp;gt;/httpAuth/app/rest/builds/id 最後的id為指定的建置版本，也是要刪除的版本 可以很容易的在一些設定頁面上，找一下網址後面的BuildId所帶的值來取得
[![](http://1.bp.blogspot.com/-xekiyDv1rtQ/UlTFBOBUZGI/AAAAAAAAA04/n4AzSukSpX0/s1600/buildid.png)](http://1.bp.blogspot.com/-xekiyDv1rtQ/UlTFBOBUZGI/AAAAAAAAA04/n4AzSukSpX0/s1600/buildid.png) 使用Filddler執行DELETE方法，並在標頭中加入Authorization: Basic (UserName:Password)就行了
[![](http://4.bp.blogspot.com/-4_P16nZPh-U/UlTHONRcYWI/AAAAAAAAA1g/oSlRrBdtPac/s1600/teamcity.png)](http://4.bp.blogspot.com/-4_P16nZPh-U/UlTHONRcYWI/AAAAAAAAA1g/oSlRrBdtPac/s1600/teamcity.png) 括號內的帳密需要用base64編碼，利用TextWizard來轉換就行了
[![](http://3.bp.blogspot.com/-Be-SvqI7AUY/UlTGMe3pauI/AAAAAAAAA1Q/mERbs8tNtOc/s1600/base64.png)](http://3.bp.blogspot.com/-Be-SvqI7AUY/UlTGMe3pauI/AAAAAAAAA1Q/mERbs8tNtOc/s1600/base64.png)  參考連結 http://stackoverflow.com/questions/10218318/how-to-remove-a-specific-version-of-a-package-on-a-teamcity-nuget-feed
Fiddler 下載</description>
    </item>
    
    <item>
      <title>TypeScript 安裝</title>
      <link>http://example.org/posts/2013/08/typescript-%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Fri, 30 Aug 2013 14:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/typescript-%E5%AE%89%E8%A3%9D/</guid>
      <description>[首先下載Plugin](http://www.microsoft.com/en-us/download/details.aspx?id=34790) [![](http://1.bp.blogspot.com/-WRV3aAlWA90/UiA5JY7FhvI/AAAAAAAAAzU/vpjUPcr9n-8/s1600/01.Install+Plugin.png)](http://1.bp.blogspot.com/-WRV3aAlWA90/UiA5JY7FhvI/AAAAAAAAAzU/vpjUPcr9n-8/s1600/01.Install+Plugin.png) TypeScript會安裝到C:\Program Files(x86)\Microsoft SDKs\TypeScript資料夾內 [![](http://3.bp.blogspot.com/-6b-otXZ0x9E/UiA5dTiLGkI/AAAAAAAAAzc/2G9hqjPmoRk/s1600/02.TypeScriptPath.png)](http://3.bp.blogspot.com/-6b-otXZ0x9E/UiA5dTiLGkI/AAAAAAAAAzc/2G9hqjPmoRk/s1600/02.TypeScriptPath.png) 安裝後，VS2012會多出一個TypeScript的範本 [![](http://1.bp.blogspot.com/-sRAJODGYtag/UiA5nu229JI/AAAAAAAAAzk/5-2CuTjHTjk/s1600/03.TypeScriptProject.png)](http://1.bp.blogspot.com/-sRAJODGYtag/UiA5nu229JI/AAAAAAAAAzk/5-2CuTjHTjk/s1600/03.TypeScriptProject.png) 新增檔案的時後，也會多出一個TypeScript的檔案類型 [![](http://2.bp.blogspot.com/-l75O28OgDQU/UiA5xi9P4mI/AAAAAAAAAzs/lZxE6w-KyNA/s1600/04.TypeScriptFile.png)](http://2.bp.blogspot.com/-l75O28OgDQU/UiA5xi9P4mI/AAAAAAAAAzs/lZxE6w-KyNA/s1600/04.TypeScriptFile.png) 在檔案總管中，TypeScript會包含js和map檔案 建置動作會是TypeScriptCompile [![](http://4.bp.blogspot.com/-XM8zMJX6ob8/UiA599Vkm0I/AAAAAAAAAz0/RkiPnMCZQVY/s1600/05.TypeScriptCompilerAction.png)](http://4.bp.blogspot.com/-XM8zMJX6ob8/UiA599Vkm0I/AAAAAAAAAz0/RkiPnMCZQVY/s1600/05.TypeScriptCompilerAction.png)在設定選項中，會有存檔編譯的選項 [![](http://1.bp.blogspot.com/-fF_PzROOIp0/UiA6MrP-TwI/AAAAAAAAAz8/H_Tq_ipcW4g/s1600/06.CompileOnSave.png)](http://1.bp.blogspot.com/-fF_PzROOIp0/UiA6MrP-TwI/AAAAAAAAAz8/H_Tq_ipcW4g/s1600/06.CompileOnSave.png) 另外安裝Web Essentials套件會更方便，首先打開擴充功能和更新 [![](http://4.bp.blogspot.com/-ufoFt8-MuK0/UiA6kp5vRRI/AAAAAAAAA0E/8PJitTnYDlY/s1600/07.Extend.png)](http://4.bp.blogspot.com/-ufoFt8-MuK0/UiA6kp5vRRI/AAAAAAAAA0E/8PJitTnYDlY/s1600/07.Extend.png) 選擇Web Essentials 2012安裝 [![](http://3.bp.blogspot.com/-4MawRq3pVmQ/UiA6sq3YV6I/AAAAAAAAA0M/2Mpn7jqw2KU/s1600/08.Essentials.png)](http://3.bp.blogspot.com/-4MawRq3pVmQ/UiA6sq3YV6I/AAAAAAAAA0M/2Mpn7jqw2KU/s1600/08.Essentials.png) 安裝後在編輯TypeScript檔案時，會出現預覽視窗[![](http://4.bp.blogspot.com/-hYLgm21kKVY/UiA8x6rBUWI/AAAAAAAAA0o/NHu0N31kKSw/s1600/09.VS2012.png)](http://4.bp.blogspot.com/-hYLgm21kKVY/UiA8x6rBUWI/AAAAAAAAA0o/NHu0N31kKSw/s1600/09.VS2012.png)  選項中的會有更多設定 [![](http://2.bp.blogspot.com/-nLOUDuY4taU/UiA7BErne1I/AAAAAAAAA0c/OhkGZ9wot98/s1600/10.PreviewWindow.png)](http://2.bp.blogspot.com/-nLOUDuY4taU/UiA7BErne1I/AAAAAAAAA0c/OhkGZ9wot98/s1600/10.PreviewWindow.png) P.S. Web Essentails 套件在V3.0版本中，已經移除所有對TypeScript的支援 原因是VS2013已經內建了 如果在VS2012還要使用之前提供的功能的話，建議安裝V2.</description>
    </item>
    
    <item>
      <title>TypeScript 筆記</title>
      <link>http://example.org/posts/2013/08/typescript-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Fri, 30 Aug 2013 11:29:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/typescript-%E7%AD%86%E8%A8%98/</guid>
      <description>TypeScript 安裝
參考資源
TypeScript 官網
TypeScript Revealed ISBN：978-1-4302-5725-7</description>
    </item>
    
    <item>
      <title>Knockout.js JSON處理</title>
      <link>http://example.org/posts/2013/08/knockout-js-json%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 29 Aug 2013 15:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-json%E8%99%95%E7%90%86/</guid>
      <description> ko.toJS 將ViewModel轉成JavaScript物件  ko.toJSON 將ViewModel轉成JSON格式  ko.mapping.fromJS 合併JS物件到原有的ViewModel物件  ko.mapping.fromJSON 合併JSON資料到原有的ViewModel物件  ko.mapping需另外下載，可透過nuget取得 [![](http://3.bp.blogspot.com/-TbnD5B9xXSQ/Uh75aMBbtwI/AAAAAAAAAzE/x_0suryUO-8/s1600/03.mapping.png)](http://3.bp.blogspot.com/-TbnD5B9xXSQ/Uh75aMBbtwI/AAAAAAAAAzE/x_0suryUO-8/s1600/03.mapping.png)  </description>
    </item>
    
    <item>
      <title>Knockout.js 自訂範本</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%87%AA%E8%A8%82%E7%AF%84%E6%9C%AC/</link>
      <pubDate>Thu, 29 Aug 2013 14:52:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%87%AA%E8%A8%82%E7%AF%84%E6%9C%AC/</guid>
      <description>template是用來把複雜或是可重覆使用的輸出格式，獨立出來的一個功能 使用name來指定範本的id，data用來指定傳入範本的資料，as為資料的別名 再配合foreach、if等流程控制來輸出資料 </description>
    </item>
    
    <item>
      <title>Knockout.js 表單處理</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%A1%A8%E5%96%AE%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 29 Aug 2013 14:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%A1%A8%E5%96%AE%E8%99%95%E7%90%86/</guid>
      <description> click 觸發click事件的動作  event 繫結自訂的事件處理  submit 觸發表單送出事件的動作  enable 是否啟用  disable 是否停用  value 繫結表單內容  hasFocus 是否得到焦點  checked 是否核取  options 繫結下拉選單 optionsText為文字內容 optionsValue為下拉選單的值  selectedOptions 可複取的下拉選單所選取的資料  </description>
    </item>
    
    <item>
      <title>Knockout.js 流程控制</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 29 Aug 2013 14:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description> foreach 列舉ko.observableArray繫結的內容  if 條件判斷為true才處理該子元素內容  ifnot 反向判斷  with 指向物件參考，讓子元素內容可以直接使用該物件的屬性 而不需要使用完整的物件名稱    </description>
    </item>
    
    <item>
      <title>Knockout.js 資料繫結</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%B3%87%E6%96%99%E7%B9%AB%E7%B5%90/</link>
      <pubDate>Thu, 29 Aug 2013 10:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%B3%87%E6%96%99%E7%B9%AB%E7%B5%90/</guid>
      <description> visible 控制是否為可見元素  text 顯示文字內容  html 顯示html內容  css 設定css類別  style 自訂css樣式  attr 自訂html屬性  </description>
    </item>
    
    <item>
      <title>Knockout.js 簡介</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Thu, 29 Aug 2013 10:03:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E7%B0%A1%E4%BB%8B/</guid>
      <description>Knockout.js是一套Javascript Library，主要用來處理網頁上MVVM模式的資料更新與繫結 要引用Knockout最方便的方式，不外就是透過Nuget [![](http://1.bp.blogspot.com/-BdZy3etaPJw/Uh6rgtFjxBI/AAAAAAAAAys/WVfWTS9_ZtE/s1600/01.nuget.png)](http://1.bp.blogspot.com/-BdZy3etaPJw/Uh6rgtFjxBI/AAAAAAAAAys/WVfWTS9_ZtE/s1600/01.nuget.png) Scripts資料夾中就會出現Knockout的檔案 knockout-{version}.js為壓縮版本 knockout-{version}.debug.js為末壓縮版本[![](http://3.bp.blogspot.com/-8YCimjZDtUQ/Uh6rj1i1meI/AAAAAAAAAy0/BngICrtnWVI/s1600/02.scripts.png)](http://3.bp.blogspot.com/-8YCimjZDtUQ/Uh6rj1i1meI/AAAAAAAAAy0/BngICrtnWVI/s1600/02.scripts.png)knockout的使用方式，首先宣告一個ViewModel類別，然後透過ko.applyBindings來繫結這個類別 除了顯示資料之外，也支援雙向繫結 以下是一個簡單的例子  </description>
    </item>
    
    <item>
      <title>Knockout.js 筆記</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 26 Aug 2013 15:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E7%AD%86%E8%A8%98/</guid>
      <description>Knockout.js 簡介
Knockout.js 資料繫結
Knockout.js 流程控制
Knockout.js 表單處理
Knockout.js 自訂範本
Knockout.js JSON處理
參考資源
Knockout.js 官網
KNOCKOUT.JS與MVVM基礎入門補充教材
knockout.js!! - 黑暗執行緒
KnockoutJS Starter ISBN:978-1-78216-114-1</description>
    </item>
    
    <item>
      <title>HTTP Status Code</title>
      <link>http://example.org/posts/2013/08/http-status-code/</link>
      <pubDate>Fri, 16 Aug 2013 15:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/http-status-code/</guid>
      <description>HTTP Status Code 100~199 訊息狀態碼  StatusCode ReasonPhrase 說明  100 Continue Client端有一個Message要發送給Server 但希望在發送之前先看一下Server是否會接受這個Message 所以在Request表頭中加入一個名稱Expect值為100 Conutinue Server端收到後如果可以接受，就馬上回應這個狀態碼給Client 表示收到了Request的初始部份，要求Client端繼續 通常用於傳送接收一個大的Message時的優化  101 Switching Protocols 伺服器正在切換成Request封包表頭中 Update所指定的通訊協定  200~299 成功狀態碼  Status Code Reason Phrase 說明  200 OK 就是OK  201 Created 資源已建立，用於回應建立資源的要求，例如PUT 回應的訊息中，應該在表頭中加入Location 用來告訴Client建立好的資源URL位置  202 Accepted 請求已被接受，但伺服器還未執行任何動作，也不能保證會完成 簡單的說，就是朕知道了...  203 Non-Authoritative Information Header中包含的訊息，並不是來自於要求的伺服器 而是來自資源的一個副本  204 No Content 用來告訴瀏覽器，在不轉頁的情況下，刷新表單頁面  205 Reset Content 用來告訴瀏覽器，Reset目前頁面中的表單元素  206 Partial Content Client透過Request Header中的Range來要求部份或某個範圍的資源 這個狀態碼就是成功執行了一個部份或是某個範圍的請求 Response中的Header必須包含Content-Range、Date 以及ETag或是Content-Location  300~399 重轉向定位狀態碼  Status Code Reason Phrase 說明  300 Multiple Choices 訊息類狀態碼  301 Moved Permanently 所要求的資源已移除，永久轉向 Response Header中的Location為新的URL 之前的要求都要改成新的URL HTTP/1.</description>
    </item>
    
    <item>
      <title>HTTP Method</title>
      <link>http://example.org/posts/2013/08/http-method/</link>
      <pubDate>Fri, 16 Aug 2013 14:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/http-method/</guid>
      <description>HTTP Method  GET 這是最常用的方法，通常用在請求伺服器上的某個資源 該方法沒有Body主體，可以被Cache HTTP protocols中並沒有規範長度限制，有限制的是瀏覽器和Web Server 不同瀏覽器中的限制也不同，IE為2048，FF為8192  POST 向伺服器輸入數據，通常會以透過表單的方式 資料會在HTTP Body的部份，以name=value的方式表示，分隔符號為&amp;amp; 該方法不會被Cache  PUT 將資源寫入伺服器端，如果資源已存在，就用這個資源來取代原有的資源 因為需要對伺服器寫入，所以基本上都需要先通過身份驗證是否有寫入的權限 寫入成功後，應回應201，並在表頭中用Location告訴Client端寫入的資源位置  DELETE 要求伺服器刪除指定的資源  PATCH 要求伺服器更新指定的資源  HEAD 和GET方法的行為很類似，但在伺服器端回應的訊息中，只包含HTTP Header而已 並不會返回HTTP Body的部份，適用於在不取得資源的情況下，了解資源的狀態  TRACE 要求伺服器返回接收到的表頭資料 用意是用來追蹤發送出去的表頭，和到伺服器接收到的表頭，有何差異  OPTIONS 要求伺服器返回可接收的HTTP Method指令有那些 因為並不是所有Method都有被Web Server所實作 </description>
    </item>
    
    <item>
      <title>jQuery 陣列處理</title>
      <link>http://example.org/posts/2013/08/jquery-%E9%99%A3%E5%88%97%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 01 Aug 2013 18:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/jquery-%E9%99%A3%E5%88%97%E8%99%95%E7%90%86/</guid>
      <description> .each(collection, callback) 迭代陣列元素  .grep(array, callback, [invert]) 過濾陣列 第三個參數用來設定傳回符合條件或是不符合條件的元素  .map(array, callback) 將陣列元素處理後回傳成新的陣列  .merge(array1, array2) 將array2合併到array1陣列中  .unique(array) 將陣列中重覆的項目移除  </description>
    </item>
    
    <item>
      <title>jQuery 字串處理</title>
      <link>http://example.org/posts/2013/08/jquery-%E5%AD%97%E4%B8%B2%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 01 Aug 2013 17:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/jquery-%E5%AD%97%E4%B8%B2%E8%99%95%E7%90%86/</guid>
      <description> .trim() 字串去空白  .param() 字串序例化  </description>
    </item>
    
    <item>
      <title>jQuery Ajax呼叫方式</title>
      <link>http://example.org/posts/2013/08/jquery-ajax%E5%91%BC%E5%8F%AB%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 01 Aug 2013 17:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/jquery-ajax%E5%91%BC%E5%8F%AB%E6%96%B9%E5%BC%8F/</guid>
      <description>.ajax({})為底層呼叫方式，參數如下 .ajaxSetup()則是用來設定參數的預設值  url 請求的URL  type 請求的方式，例如POST或是GET  data 請求的參數  dataType 指定回應的格式，有以下幾種格式 xml, html, json, jsonp, script, text  timeout 逾時的毫秒數，如果超出設定的時間，就會觸發error設定的callback函式  global 設定是否要觸發全域事件處理，啟用為true, 停用為false 預設是啟用狀態  contentType 指定請求的內容類型 預設為application/x-www-form-urlencoded，和表單發送的類型一樣  success 請求成功時呼叫的函式  error 請求失敗時呼叫的函式  complete 整個請求完成時呼叫的函式  beforeSend 發出請求之前呼叫的函式 可以用來執行請求前的操作，例如自訂標頭  urlasync 非同步為true, 同步為false 預設是非同步  processData 是否對傳送的資料做URL編碼，true為編碼，false為不編碼 預設是會編碼  ifModified 根據標頭的Last-Modified來判斷是否更新 預設為不檢查標頭  </description>
    </item>
    
    <item>
      <title>jQuery Ajax快捷方法</title>
      <link>http://example.org/posts/2013/08/jquery-ajax%E5%BF%AB%E6%8D%B7%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 01 Aug 2013 15:38:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/jquery-ajax%E5%BF%AB%E6%8D%B7%E6%96%B9%E6%B3%95/</guid>
      <description>jsfiddle的echo網址，大部份都需要用POST方式才會有反應 所以例子中會有幾個方式沒有反應  .get() 發出Get要求  .post() 發出Post要求  .load() 以Get方式載入指定的網址  .getJSON() 以Get方式取得JSON資料  .getScript() 以Get方式取得Script指令  </description>
    </item>
    
    <item>
      <title>jQuery 全域事件處理</title>
      <link>http://example.org/posts/2013/08/jquery-%E5%85%A8%E5%9F%9F%E4%BA%8B%E4%BB%B6%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 01 Aug 2013 14:09:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/jquery-%E5%85%A8%E5%9F%9F%E4%BA%8B%E4%BB%B6%E8%99%95%E7%90%86/</guid>
      <description>jQuery v1.8之後，ajax全域事件只能綁定到document元素  .ajaxStart() ajax要求開始  .ajaxSend(event, jqXHR, ajaxOptions) 發出ajax要求  .ajaxSuccess(event, jqXHR, ajaxOptions, ThrownError) ajax要求成功的話就觸發這個事件  .ajaxError(event, XMLHttpRequest, ajaxOptions) ajax要求失敗的話就觸發這個事件  .ajaxComplete(event, XMLHttpRequest, ajaxOptions) ajax要求完成  .ajaxStop() ajax要求結束  </description>
    </item>
    
    <item>
      <title>jQuery 樣式表操作</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%A8%A3%E5%BC%8F%E8%A1%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 30 Jul 2013 11:16:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%A8%A3%E5%BC%8F%E8%A1%A8%E6%93%8D%E4%BD%9C/</guid>
      <description> .addClass() 增加樣式類別  .removeClass() 移除樣式類別  .hasClass() 是否有指定的樣式類別  .toogleClass() 切換樣式類別  .css() 取得或設定指定的樣式  </description>
    </item>
    
    <item>
      <title>jQuery 屬性操作</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%B1%AC%E6%80%A7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 30 Jul 2013 10:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%B1%AC%E6%80%A7%E6%93%8D%E4%BD%9C/</guid>
      <description> .attr() 取得或設定屬性  .removeAttr() 移除屬性  .prop() 取得或設定屬性  .removeProp() 移除屬性  .attr()和.prop()的差異在1.6版本 對於bool值的屬性，例如checked, disabled, readonly, selected...，用prop會比較合適 </description>
    </item>
    
    <item>
      <title>jQuery 移除元素</title>
      <link>http://example.org/posts/2013/07/jquery-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 29 Jul 2013 18:15:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid>
      <description> .detach() 移除符合指定的選擇器元素，包含選擇器本身 被移除的元素原本繫結的事件，還原回去後並不會消失  .empty() 移除符合指定的選擇器元素，不包含選擇器本身 被移除的元素原本繫結的事件，還原回去後並不會消失  .remove() 移除符合指定的選擇器元素，包含選擇器本身 被移除的元素原本繫結的事件，還原回去後會消失  .unwrap() 移除符合指定的選擇器外層元素  </description>
    </item>
    
    <item>
      <title>jQuery 替換元素</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%9B%BF%E6%8F%9B%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 29 Jul 2013 16:56:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%9B%BF%E6%8F%9B%E5%85%83%E7%B4%A0/</guid>
      <description> .html() 在符合指定的選擇器元素內容中，取得或設定HTML結構  .text() 在符合指定的選擇器元素內容中，取得或設定純文字內容  .replaceWith() 將符合指定的選擇器元素，用指定的HTML結構取代  .replaceAll() 和replaceWith的效果一樣，差別在於主要的處理對象是新建的新元素 可以做串接的函式處理後，再取代符合的選擇器元素  </description>
    </item>
    
    <item>
      <title>jQuery 附加元素</title>
      <link>http://example.org/posts/2013/07/jquery-%E9%99%84%E5%8A%A0%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 29 Jul 2013 16:08:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E9%99%84%E5%8A%A0%E5%85%83%E7%B4%A0/</guid>
      <description> .append() 將HTML結構插入到符合指定的選擇器內容的尾端  .appendTo() 和append的效果一樣，差別在於主要的處理對象是新建的新元素 可以做串接的函式處理後，再插入符合的選擇器內容尾端  .prepend() 將HTML結構插入的符合指定的選擇器內容的前端  .prependTo() 和prepend的效果一樣，差別在於主要的處理對象是新建的新元素 可以做串接的函式處理後，再插入符合的選擇器內容前端  </description>
    </item>
    
    <item>
      <title>jQuery 插入元素</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 29 Jul 2013 12:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0/</guid>
      <description> .after() 將指定的元素插入每一個符合的選擇器後面  .insertAfter() 和after的效果一樣，差別在於主要的處理對象是新建的新元素 可以做串接的函式處理後，再插入符合的選擇器後面  .before() 將指定的元素插入每一個符合的選擇器前面  .insertBefore() 和before的效果一樣，差別在於主要的對象是新建的新元素 可以做串接的函式處理後，再插入符合的選擇器前面  </description>
    </item>
    
    <item>
      <title>jQuery 包裝元素</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%8C%85%E8%A3%9D%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 29 Jul 2013 11:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%8C%85%E8%A3%9D%E5%85%83%E7%B4%A0/</guid>
      <description> .wrap() 每一個符合指定的選擇器元素都被封裝到指定的HTML結構中  .wrapAll() 將所有符合選擇器的元素封裝在一個指定的HTML結構中  .wrapInner() 每一個符合指定的選擇器元素內部都封裝一個指定的HTML結構  </description>
    </item>
    
    <item>
      <title>jQuery 滑鼠事件</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%BB%91%E9%BC%A0%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Thu, 25 Jul 2013 16:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%BB%91%E9%BC%A0%E4%BA%8B%E4%BB%B6/</guid>
      <description> .click() 在元素上單擊左鍵  .dblclick() 在元素上雙擊左鍵  .hover() 進入和離開元素時觸發  .mousedown() 在元素上按下滑鼠按鍵  .mouseenter() 進入元素時觸發  .mouseleave() 離開元素時觸發  .mousemove() 在元素上移動時觸發  .mouseout() 離開元素時觸發 支持Bubble Up  .mouseover() 進入元素時觸發 支持Bubble Up  .mouseup() 在元素上放開滑鼠按鍵  </description>
    </item>
    
    <item>
      <title>jQuery 鍵盤事件</title>
      <link>http://example.org/posts/2013/07/jquery-%E9%8D%B5%E7%9B%A4%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Thu, 25 Jul 2013 16:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E9%8D%B5%E7%9B%A4%E4%BA%8B%E4%BB%B6/</guid>
      <description> .keydown() 按下鍵盤  .keypress() 壓住鍵盤  .keyup() 放開鍵盤  </description>
    </item>
    
    <item>
      <title>jQuery 事件繫結</title>
      <link>http://example.org/posts/2013/07/jquery-%E4%BA%8B%E4%BB%B6%E7%B9%AB%E7%B5%90/</link>
      <pubDate>Thu, 25 Jul 2013 15:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E4%BA%8B%E4%BB%B6%E7%B9%AB%E7%B5%90/</guid>
      <description> .bind() 為一個元素綁定一個事件處理 執行多次會重覆綁定 動態生成元素綁定事件會有先後問題  .unbind() 從元素上移除一個之前綁定的事件處理  .live() 附加一個事件處理器到指定選擇器的元素上 version deprecated:1.7, remove:1.9  .die() 從元素移除之前用.live()綁定的事件 version deprecated:1.7, remove:1.9  .delegate() 指派事件處理 利用事件的Bubble Up特性，在上層元素掛上事件處理 V1.4.2以上適用  .undelegate() 解除事件指派 V1.4.2以上適用  .on() 繫結事件 v1.7以上適用  .off() 解除事件 v1.7以上適用  .trigger() 觸發事件  .one() 在元素上綁定一個事件處理函式 該處理函式只會執行一次，然後刪除自已  </description>
    </item>
    
    <item>
      <title>jQuery 自定義效果</title>
      <link>http://example.org/posts/2013/07/jquery-%E8%87%AA%E5%AE%9A%E7%BE%A9%E6%95%88%E6%9E%9C/</link>
      <pubDate>Fri, 19 Jul 2013 11:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E8%87%AA%E5%AE%9A%E7%BE%A9%E6%95%88%E6%9E%9C/</guid>
      <description> .animate() 自訂動畫效果  .queue() 動畫效果只能影響數值效果 如要在動畫中改變非數值效果需放入佇列中執行  .dequeue() 繼續執行佇列之後的效果  .clearQueue() 移除佇列  .delay() 延遲效果  .finish() 結束動畫效果  .stop() 停止動畫效果  </description>
    </item>
    
    <item>
      <title>jQuery 滑動效果</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%BB%91%E5%8B%95%E6%95%88%E6%9E%9C/</link>
      <pubDate>Mon, 15 Jul 2013 11:43:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%BB%91%E5%8B%95%E6%95%88%E6%9E%9C/</guid>
      <description> .slideDown() 滑動顯示效果  .slideUp() 滑動隱藏效果  .slideToggle() 切換滑動顯示隱藏效果  </description>
    </item>
    
    <item>
      <title>jQuery 漸變效果</title>
      <link>http://example.org/posts/2013/07/jquery-%E6%BC%B8%E8%AE%8A%E6%95%88%E6%9E%9C/</link>
      <pubDate>Mon, 15 Jul 2013 11:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E6%BC%B8%E8%AE%8A%E6%95%88%E6%9E%9C/</guid>
      <description> .fadeIn() 淡入效果  .fadeOut() 淡出效果  .fadeTo(duration, opacity) 切換透明度  .fadeToggle() 切換淡出淡入效果  </description>
    </item>
    
    <item>
      <title>jQuery 基礎效果</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%9F%BA%E7%A4%8E%E6%95%88%E6%9E%9C/</link>
      <pubDate>Mon, 15 Jul 2013 11:22:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%9F%BA%E7%A4%8E%E6%95%88%E6%9E%9C/</guid>
      <description> .hide() 隱藏元素  .show() 顯示元素  .toggle() 切換顯示隱藏元素  </description>
    </item>
    
    <item>
      <title>jQuery 內容過濾語法</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%85%A7%E5%AE%B9%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</link>
      <pubDate>Mon, 15 Jul 2013 11:08:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%85%A7%E5%AE%B9%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</guid>
      <description> 內容過濾語法  範例 說明  :contains(foo) 包含foo文字的元素，區分大小寫  :empty 選取沒有子節點的元素  :has(E) 選取有E為子元素的元素  :parent 選取有子節點的元素  :hidden 選取隱藏元素  :visible 選取可見元素  </description>
    </item>
    
    <item>
      <title>jQuery 表單元素語法</title>
      <link>http://example.org/posts/2013/07/jquery-%E8%A1%A8%E5%96%AE%E5%85%83%E7%B4%A0%E8%AA%9E%E6%B3%95/</link>
      <pubDate>Mon, 15 Jul 2013 11:08:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E8%A1%A8%E5%96%AE%E5%85%83%E7%B4%A0%E8%AA%9E%E6%B3%95/</guid>
      <description> 表單元素語法  範例 說明  :button 任何按鈕，包含button、submit、reset  :checkbox 核取方塊元素  :checked 已核取的核取方塊或單選鈕  :disabled 已停用的表單元素  :enabled 可啟用的表單元素  :focus 按鈕  :file 選取所有檔案元素  :image 選取所有圖片元素  :input 選取所有輸入元素，包含text、select、textarea、button  :password 選取密碼元素  :radio 選取單選鈕元素  :reset 選取重置按鈕  :selected 選取被選取的選項  :submit 選取發送按鈕  :text 選取文字元素  </description>
    </item>
    
    <item>
      <title>jQuery 子元素過濾語法</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%AD%90%E5%85%83%E7%B4%A0%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</link>
      <pubDate>Mon, 15 Jul 2013 11:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%AD%90%E5%85%83%E7%B4%A0%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</guid>
      <description> 子元素過濾語法  範例 說明  :first-child 第一個子元素  :first-of-type 同級元素之間的第一個相同的元素  :last-child 最後一個子元素  :last-of-type 同級元素之間的最後一個相同的元素  :nth-child(n) 第n個子元素且為指定的元素  :nth-last-child(n) 倒數第n個子元素  :nth-last-of-type(n) 倒數第n個指定的子元素  :nth-of-type(n) 第n個指定的子元素  :only-child 只有一個子節點的元素  :only-of-type 同級元素之間只有一個子節點的元素  </description>
    </item>
    
    <item>
      <title>jQuery 位置過濾語法</title>
      <link>http://example.org/posts/2013/07/jquery-%E4%BD%8D%E7%BD%AE%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</link>
      <pubDate>Fri, 12 Jul 2013 17:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E4%BD%8D%E7%BD%AE%E9%81%8E%E6%BF%BE%E8%AA%9E%E6%B3%95/</guid>
      <description> 位置過濾語法，從一個位置索引從0開始計算  範例 說明  :first 第一個元素  :last 最後一個元素  :odd 奇數元素  :even 偶數元素  :eq(n) 第n個元素  :gt(n) 大於第n個元素  :lt(n) 小於第n個元素  :not() 反向選擇  :header h1~h6標題元素  :animated 正在執行動畫效果的元素   </description>
    </item>
    
    <item>
      <title>jQuery 屬性選擇器</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%B1%AC%E6%80%A7%E9%81%B8%E6%93%87%E5%99%A8/</link>
      <pubDate>Fri, 12 Jul 2013 17:38:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%B1%AC%E6%80%A7%E9%81%B8%E6%93%87%E5%99%A8/</guid>
      <description> 屬性選擇器  範例 說明  $(&#34;E[A]&#34;) 具有A屬性的元素E  $(&#34;E[A=&#39;V&#39;]&#34;) 具有A屬性的元素E，且值為V  $(&#34;E[A^=&#39;V&#39;]&#34;) 具有A屬性的元素E，且值開頭為V  $(&#34;E[A$=&#39;V&#39;]&#34;) 具有A屬性的元素E，且值結尾為V  $(&#34;E[A*=&#39;V&#39;]&#34;) 具有A屬性的元素E，且值內容包含V  $(&#34;E[A!=V]&#34;) 具有A屬性的元素E，且值內容不等於V  $(&#34;E[A|=&#39;V&#39;]&#34;) 具有A屬性的元素E，且值內容的前綴為V或是V-  $(&#34;E[A~=&#39;V&#39;]&#34;) 具有A屬性的元素E，且用空格分隔的值中有V  $(&#34;E[A1=&#39;V1&#39;][A2=&#39;V2&#39;][A3=&#39;V3&#39;]...&#34;) 具有A屬性的元素E，且屬性符號多重串接   </description>
    </item>
    
    <item>
      <title>jQuery 層級選擇器</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%B1%A4%E7%B4%9A%E9%81%B8%E6%93%87%E5%99%A8/</link>
      <pubDate>Fri, 12 Jul 2013 13:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%B1%A4%E7%B4%9A%E9%81%B8%E6%93%87%E5%99%A8/</guid>
      <description> 層級選擇器  範例 說明  $(&#34;E F&#34;) 後代選擇器，找出在E元素的所有子元素裡面的所有F元素 遞迴子元素的子元素，效率較差   $(&#34;E&amp;gt;F&#34;) 子代選擇器，找出在E元素的第一層子元素中的所有F元素 只找子元素，效能較佳   $(&#34;E+F&#34;) 毗鄰選擇器，E元素之後同層級的第一個F元素  $(&#34;E~F&#34;) 鄰後選擇器，E元素之後同層級的所有F元素   </description>
    </item>
    
    <item>
      <title>jQuery 基本選擇器</title>
      <link>http://example.org/posts/2013/07/jquery-%E5%9F%BA%E6%9C%AC%E9%81%B8%E6%93%87%E5%99%A8/</link>
      <pubDate>Fri, 12 Jul 2013 13:46:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery-%E5%9F%BA%E6%9C%AC%E9%81%B8%E6%93%87%E5%99%A8/</guid>
      <description> 基本選擇器  範例 說明  $(&#34;*&#34;) 選取所有元素  (&#34;#id&#34;) 符合id名稱的元素，因為id是唯一值，所以效能會比較好  $(&#34;.C&#34;) 符合CSS類別名稱C的所有元素  $(&#34;E&#34;) 符合E標籤的所有元素    </description>
    </item>
    
    <item>
      <title>jQuery筆記</title>
      <link>http://example.org/posts/2013/07/jquery%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 02 Jul 2013 14:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/jquery%E7%AD%86%E8%A8%98/</guid>
      <description>jQuery Selector 基本選擇器 層級選擇器 屬性選擇器 位置過濾語法 子元素過濾語法 內容過濾語法  表單元素語法
jQuery Effects 基礎效果 漸變效果 滑動效果  自定義效果
jQuery Events 事件繫結 鍵盤事件 滑鼠事件
jQuery Manipulation 包裝元素 插入元素 附加元素 替換元素 移除元素 屬性操作 樣式表操作
JQuery Ajax 全域事件處理 Ajax快捷方法 ajax 呼叫方式
jQuery Utilities 字串處理 陣列處理
jQuery Plugin
學習資源
jsfiddle http://jsfiddle.net/
邊做邊學系列 http://msdn.microsoft.com/zh-tw/asp.net/dd310332.aspx#jQuery
w3c school jQuery http://www.w3schools.com/jquery/
jqapi http://jqapi.com/
jQuery Cheatsheet http://oscarotero.com/jquery/
learing jQuery http://learn.jquery.com/
30天學會jQuery https://tutsplus.com/course/30-days-to-learn-jquery/
推薦書籍 jQuery 實戰手冊(JQuery in Action) ISBN：9789861816388
 第二版ISBN：9789861811918 jQuery 開發實戰 ISBN：9866761932 jQuery核心詳解與實踐應用 ISBN：9789862571040</description>
    </item>
    
    <item>
      <title>Json.Net 日期處理</title>
      <link>http://example.org/posts/2013/07/json-net-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</link>
      <pubDate>Mon, 01 Jul 2013 15:49:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/07/json-net-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</guid>
      <description>Json.Net 序列化的日期格式，在4.5版之前是Microsoft Date Format:&#34;\/Date(ticks)\/&#34; 4.5版之後，預設的日期格式已經改成[ISO 8601 standard](http://en.wikipedia.org/wiki/ISO_8601) 可以透過JsonSerializerSettings的方式來指定序列化的格式 反序列化的時後會自動識別不需另外指定 另外還有一種JavaScript格式，需要透過指定JavaScriptDateTimeConverter來轉換 反序列化的時後也需要明確指定，否則會出現錯誤
DateTime d = DateTime.Now; Console.WriteLine(&amp;ldquo;datetime:{0}\r\n&amp;rdquo;, d);
// ISO8601的格式 string jsonString1 = JsonConvert.SerializeObject(d); Console.WriteLine(&amp;ldquo;ISO8601 Date Format:{0}&amp;rdquo;, jsonString1); DateTime d1 = JsonConvert.DeserializeObject&amp;lt;DateTime&amp;gt;(jsonString1); Console.WriteLine(&amp;ldquo;datetime:{0}, kind:{1}\r\n&amp;rdquo;, d1, d1.Kind);
// Microsoft Date Format string jsonString2 = JsonConvert.SerializeObject( d, new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat }); Console.WriteLine(&amp;ldquo;Microsoft Date Format:{0}&amp;rdquo;, jsonString2); DateTime d2 = JsonConvert.DeserializeObject&amp;lt;DateTime&amp;gt;(jsonString2); Console.WriteLine(&amp;ldquo;datetime:{0}, kind:{1}\r\n&amp;rdquo;, d2, d2.Kind);
// JavaScript Date Format string jsonString3 = JsonConvert.</description>
    </item>
    
    <item>
      <title>Json.Net 轉換IDictionary 介面</title>
      <link>http://example.org/posts/2013/06/json-net-%E8%BD%89%E6%8F%9Bidictionary-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Thu, 27 Jun 2013 16:41:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/json-net-%E8%BD%89%E6%8F%9Bidictionary-%E4%BB%8B%E9%9D%A2/</guid>
      <description>Json.Net 處理 IDictionary介面的方式，會解析成物件的key和value 以下是一個簡單的例子 // 淮備資料 Dictionary&amp;lt;string, string&amp;gt; dict1 = new Dictionary&amp;lt;string, string&amp;gt;() { {&#34;a&#34;, &#34;1&#34;}, {&#34;b&#34;, &#34;2&#34;}, {&#34;c&#34;, &#34;3&#34;}, }; // 序列化 string jsonString = JsonConvert.SerializeObject(dict1); Console.WriteLine(jsonString);
// 反序列化 Dictionary&amp;lt;string, string&amp;gt; dict2 = JsonConvert.DeserializeObject&amp;lt;Dictionary&amp;lt;string, string&amp;gt;&amp;gt;(jsonString); foreach (KeyValuePair&amp;lt;string, string&amp;gt; item in dict2) { Console.WriteLine(&amp;ldquo;key:{0}, value:{1}&amp;rdquo;, item.Key, item.Value); }
Console.ReadLine(); 
執行結果 [!</description>
    </item>
    
    <item>
      <title>Json.Net 轉換 IEnumerable 介面</title>
      <link>http://example.org/posts/2013/06/json-net-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Thu, 27 Jun 2013 16:31:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/json-net-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</guid>
      <description>Json.Net對於IEnumerable介面的處理，同樣是序列化成陣列的格式 首先先宣告個物件以便之後的處理 private class Person { public int id { get; set; } public string name { get; set; } public DateTime date { get; set; } }  轉換IEnumerable介面，以List為例 static void Main(string[] args) { // 淮備資料 List&amp;lt;Person&amp;gt; list1 = new List&amp;lt;Person&amp;gt;() { new Person() { id = 1, name = &#34;p1&#34;, date = DateTime.Today.AddDays(-1)  }, new Person() { id = 2, name=&amp;quot;p2&amp;quot;, date = DateTime.Today }, new Person() { id = 3, name = &amp;quot;p3&amp;quot;, date = DateTime.</description>
    </item>
    
    <item>
      <title>Json.Net 用法</title>
      <link>http://example.org/posts/2013/06/json-net-%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 27 Jun 2013 16:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/json-net-%E7%94%A8%E6%B3%95/</guid>
      <description>首先用最基本的JsonTextWriter和JsonTextReader JsonTextWriter使用成對的方法來輸出Json字串 JsonTextReader使用Read方法來持續讀取Json字串 看得出來在使用上有點拖泥帶水static void Main(string[] args) { string jsonString = string.Empty; using (StringWriter sw = new StringWriter()) { using (JsonTextWriter writer = new JsonTextWriter(sw)) { // 開始輸出物件 writer.WriteStartObject(); // 輸出屬性:id writer.WritePropertyName(&amp;quot;id&amp;quot;); writer.WriteValue(1); // 輸出屬性:name writer.WritePropertyName(&amp;quot;name&amp;quot;); writer.WriteValue(&amp;quot;xian&amp;quot;); // 輸出屬性today writer.WritePropertyName(&amp;quot;today&amp;quot;); writer.WriteValue(DateTime.Today); // 開始輸出陣列 writer.WritePropertyName(&amp;quot;arraydata&amp;quot;); writer.WriteStartArray(); writer.WriteValue(1); writer.WriteValue(2); writer.WriteValue(3); // 結束輸出陣列 writer.WriteEndArray(); // 結束串出物件 writer.WriteEndObject(); } jsonString = sw.ToString(); Console.WriteLine(jsonString); } using (StringReader sr = new StringReader(jsonString)) { using (JsonTextReader reader = new JsonTextReader(sr)) { while (reader.</description>
    </item>
    
    <item>
      <title>Json.Net 介紹</title>
      <link>http://example.org/posts/2013/06/json-net-%E4%BB%8B%E7%B4%B9/</link>
      <pubDate>Thu, 27 Jun 2013 15:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/json-net-%E4%BB%8B%E7%B4%B9/</guid>
      <description>Json.Net 是一個第三方套件，其強大的功能和.Net內建的比較表，可以去官網看一下 個人比較有感覺的差別是
 支援.Net 2.0 支援LINQ  支援暱名類別 支援dynamic物件 日期格式為ISO8601該專案為Open Source，可以到codeplex下載原始碼  安裝的方式也很簡單，打開NuGet輸入Json.Net就行了  [![](http://1.bp.blogspot.com/-BDn6mLRndto/UcvaxUgwvEI/AAAAAAAAAww/fu0JjG4R5HE/s1600/01.png)](http://1.bp.blogspot.com/-BDn6mLRndto/UcvaxUgwvEI/AAAAAAAAAww/fu0JjG4R5HE/s1600/01.png)Json.Net也有完整的[線上文件](http://james.newtonking.com/projects/json/help/)可以參考 以下是Json.Net常用的物件
 [JsonConvert](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm) 最容易使用的一個靜態工具類別  [JsonTextReader](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm) 讀取Json格式  [JsonTextWriter](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm) 輸出Json格式  [JObject](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm#) 對應Json物件，就是大括號包起來的部份  [JArray](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm#) 對應Json陣列，就是中括號包起來的部份  [JValue](http://james.newtonking.com/projects/json/help/index.html?topic=html/JsonNetVsDotNetSerializers.htm#) 對應Json值的部份  </description>
    </item>
    
    <item>
      <title>DataContractJsonSerializer 日期處理</title>
      <link>http://example.org/posts/2013/06/datacontractjsonserializer-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 20 Jun 2013 16:25:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/datacontractjsonserializer-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</guid>
      <description>使用DataContractJsonSerializer序列化日期時，格式為\/Date(ticks+時區資料)\/這個樣子 因為有時區資料，所以不用像JavaScriptSerializer一樣還要手動加上ToLocalTime函式// 初始化DataContractJsonSerializer類別 DateTime d1 = DateTime.Now; DataContractJsonSerializer dcjs = new DataContractJsonSerializer(typeof(DateTime)); string jsonString = string.Empty; // 序列化資料 using (MemoryStream ms = new MemoryStream()) { dcjs.WriteObject(ms, d1); jsonString = Encoding.UTF8.GetString(ms.ToArray()); Console.WriteLine(jsonString); Console.WriteLine(); }
// 反序列化資料 using (MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString))) { DateTime d2 = (DateTime)dcjs.ReadObject(ms); Console.WriteLine(&amp;ldquo;d1:{0}, kind:{1}&amp;rdquo;, d1, d1.Kind); Console.WriteLine(&amp;ldquo;d2:{0}, kind:{1}&amp;rdquo;, d2, d2.Kind); }
Console.ReadLine(); 
執行結果 [![](http://1.bp.blogspot.com/-BYDVvul8U9Q/UcK6kL-DMWI/AAAAAAAAAwQ/TbbHuT0BD2A/s1600/04-4.png)](http://1.bp.blogspot.com/-BYDVvul8U9Q/UcK6kL-DMWI/AAAAAAAAAwQ/TbbHuT0BD2A/s1600/04-4.png) 使用JavaScript處理的時後，因為多了時區資料，所以reg要修改一下 打開一個Chrome的主控台並輸入以下幾行指令// 建立一個JSON格式的資料 data = { &#34;today&#34;: &#34;\/Date(1371716206301+0800)\/&#34;}; // 看一下資料解析的樣子 data.today;</description>
    </item>
    
    <item>
      <title>DataContractJsonSerializer 轉換 IDictionary 介面</title>
      <link>http://example.org/posts/2013/06/datacontractjsonserializer-%E8%BD%89%E6%8F%9B-idictionary-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Thu, 20 Jun 2013 15:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/datacontractjsonserializer-%E8%BD%89%E6%8F%9B-idictionary-%E4%BB%8B%E9%9D%A2/</guid>
      <description>轉換IDictionary介面的方式也一樣，只要注意初始化DataContractJsonSerializer類別時傳入IDictionary介面就好 但是輸出的結果並不如預期中為物件的格式 直接宣告一個Dictionary來當範例// 淮備序列化的類別資料 Dictionary&amp;lt;int, object&amp;gt; dataList = new Dictionary&amp;lt;int, object&amp;gt;() { {1, &#34;a&#34;}, {2, &#34;b&#34;}, {3, &#34;c&#34;} };  初始化時要傳入這個Dictionary的型別 // 初始化DataContractJsonSerializer類別 DataContractJsonSerializer dcjs = new DataContractJsonSerializer(typeof(Dictionary&amp;lt;int, object&amp;gt;)); string jsonString = string.Empty;  序列化的方式一樣 // 序列化資料 using (MemoryStream ms = new MemoryStream()) { dcjs.WriteObject(ms, dataList); jsonString = Encoding.UTF8.GetString(ms.ToArray()); Console.WriteLine(jsonString); Console.WriteLine(); }  反序列化的方式也一樣 // 反序列化資料 using (MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(jsonString))) { Dictionary&amp;lt;int, object&amp;gt; data2List = dcjs.ReadObject(ms) as Dictionary&amp;lt;int, object&amp;gt;; foreach (KeyValuePair&amp;lt;int, object&amp;gt; item in data2List) { Console.</description>
    </item>
    
    <item>
      <title>DataContractJsonSerializer 轉換 IEnumerable 介面</title>
      <link>http://example.org/posts/2013/06/datacontractjsonserializer-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Thu, 20 Jun 2013 15:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/datacontractjsonserializer-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</guid>
      <description>轉換IEnumerable的用法和一般的資料沒什麼不同 差別只在於初始化類別的時後，傳入的資料型別也要改成IEnumerable 宣告一個相同的資料型別來做範例 [DataContract] public class JsonData { [DataMember(Name = &#34;ID&#34;, Order = 0)] public int Id { get; set; } [DataMember(Order = 1)] public string Name { get; set; } [DataMember(Order = 2)] public DateTime Today { get; set; } [DataMember(Order=3)] public bool IsBool { get; set; } [IgnoreDataMember()] public string UnlessField { get; set; }  } 
準備一個List來當做序列化的資料 初始化DataContractJsonSerializer類別的時後，也要傳入這個List的型別// 淮備序列化的類別資料 List&amp;lt;JsonData&amp;gt; dataList = new List&amp;lt;JsonData&amp;gt;() { new JsonData() { Id = 1, Name = &#34;</description>
    </item>
    
    <item>
      <title>DataContractJsonSerializer 用法</title>
      <link>http://example.org/posts/2013/06/datacontractjsonserializer-%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 20 Jun 2013 15:15:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/datacontractjsonserializer-%E7%94%A8%E6%B3%95/</guid>
      <description>首先需要先定義資料類別 [DataContract](http://msdn.microsoft.com/zh-tw/library/system.runtime.serialization.datacontractattribute.aspx)用來標記類別 [DataMember](http://msdn.microsoft.com/zh-tw/library/system.runtime.serialization.datamemberattribute.aspx)用來標記屬性，Name可以用來變更序列化後的名稱，Order則是序列化的順序 [IgnoreDataMember](http://msdn.microsoft.com/zh-tw/library/system.runtime.serialization.ignoredatamemberattribute.aspx)用來標記屬性，表示不參與序列化過程[DataContract] public class JsonData { [DataMember(Name = &#34;ID&#34;, Order = 0)] public int Id { get; set; } [DataMember(Order = 1)] public string Name { get; set; } [DataMember(Order = 2)] public DateTime Today { get; set; } [DataMember(Order=3)] public bool IsBool { get; set; } [IgnoreDataMember()] public string UnlessField { get; set; }  } 
初始化DataContractJsonSerializer類別時，需傳入要序列化的資料型別 // 淮備序列化的類別資料 JsonData d1 = new JsonData() { Id = 1, Name = &#34;</description>
    </item>
    
    <item>
      <title>DataContractJsonSerializer 介紹</title>
      <link>http://example.org/posts/2013/06/datacontractjsonserializer-%E4%BB%8B%E7%B4%B9/</link>
      <pubDate>Thu, 20 Jun 2013 14:35:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/datacontractjsonserializer-%E4%BB%8B%E7%B4%B9/</guid>
      <description>JavaScriptSerializer是.NET 3.5中新增的類別 該類別在System.Runtime.Serialization.Json命名空間下面 需引用System.Runtime.Serialization.dll建構式  [DataContractJsonSerializer(Type)](http://msdn.microsoft.com/zh-tw/library/bb908625.aspx) 傳入要轉換的資料型別  [DataContractJsonSerializer(Type, DataContractJsonSerializerSettings)](http://msdn.microsoft.com/zh-tw/library/hh194418.aspx) 傳入要轉換的資料型別，和設定值   方法  [WriteObject](http://msdn.microsoft.com/zh-tw/library/system.runtime.serialization.json.datacontractjsonserializer.writeobject.aspx)  將物件序列化成JSON字串  [ReadObject](http://msdn.microsoft.com/zh-tw/library/system.runtime.serialization.json.datacontractjsonserializer.readobject.aspx)  將JSON字串反序列化成指定的物件   參考資料 System.Runtime.Serialization.Json 命名空間</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer ScriptIgnoreAttribute</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-scriptignoreattribute/</link>
      <pubDate>Wed, 19 Jun 2013 17:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-scriptignoreattribute/</guid>
      <description>ScriptIgnore這個Attribute是用來取消屬性或欄位的序列化 using System; using System.Web.Script.Serialization; namespace ConsoleApplication1 { class Program { static void Main(string[] args) { string jsonString = string.Empty; Data data = new Data() { Id = 1, Name = &amp;ldquo;data&amp;rdquo; };
 JavaScriptSerializer jss = new JavaScriptSerializer(); jsonString = jss.Serialize(data); Console.WriteLine(jsonString); Console.ReadLine(); } private class Data { public int Id { get; set; } public string Name { get; set; } } }  } 
執行結果如下[![](http://2.bp.blogspot.com/-PHlgEgUvvCM/UcF933vdXNI/AAAAAAAAAvI/ry4MXPXtNNc/s1600/02r1.png)](http://2.bp.blogspot.com/-PHlgEgUvvCM/UcF933vdXNI/AAAAAAAAAvI/ry4MXPXtNNc/s1600/02r1.png) 加上ScriptIgnore這個Attribute之後 using System; using System.</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer 日期處理</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</link>
      <pubDate>Wed, 19 Jun 2013 17:20:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-%E6%97%A5%E6%9C%9F%E8%99%95%E7%90%86/</guid>
      <description>使用JavaScriptSerializer序列化日期時，格式會長的像\/Date(ticks)\/這個樣子 其中的tick為1970/1/1到目前為止的毫秒數 因為沒有時區資訊，而且預設會轉換成UTC時間 所以反序列化回來的時後，會有時區的問題string jsonString = string.Empty; DateTime d1 = DateTime.Now; JavaScriptSerializer jss = new JavaScriptSerializer(); jsonString = jss.Serialize(d1); Console.WriteLine(jsonString);
DateTime d2 = jss.Deserialize&amp;lt;DateTime&amp;gt;(jsonString); Console.WriteLine(&amp;ldquo;d1:{0}, kind:{1}&amp;rdquo;, d1, d1.Kind); Console.WriteLine(&amp;ldquo;d2:{0}, kind:{1}&amp;rdquo;, d2, d2.Kind); Console.ReadLine();執行結果如下 解決方法很簡單，反序列化回來的時後，記得把時間ToLocalTime就好了 string jsonString = string.Empty; DateTime d1 = DateTime.Now;
JavaScriptSerializer jss = new JavaScriptSerializer(); jsonString = jss.Serialize(d1); Console.WriteLine(jsonString);
DateTime d2 = jss.Deserialize&amp;lt;DateTime&amp;gt;(jsonString).ToLocalTime(); Console.WriteLine(&amp;ldquo;d1:{0}, kind:{1}&amp;rdquo;, d1, d1.Kind); Console.WriteLine(&amp;ldquo;d2:{0}, kind:{1}&amp;rdquo;, d2, d2.Kind); Console.ReadLine(); 執行結果如下 
[![](http://1.bp.blogspot.com/-4i59tTlZwkQ/UcFu8u1O6fI/AAAAAAAAAuo/dy_4uxVg2UY/s1600/01.r2.png)&amp;nbsp;](http://1.bp.blogspot.com/-4i59tTlZwkQ/UcFu8u1O6fI/AAAAAAAAAuo/dy_4uxVg2UY/s1600/01.r2.png)另外一個問題是傳到JavaScript的時後，只會把這樣的格式當成字串，需要自行拆解 打開一個Chrome的主控台來測試一下，輸入以下幾行指令// 建立一個JSON格式的資料 data = { &#34;</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer 轉換 IDictionary 介面</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-%E8%BD%89%E6%8F%9B-idictionary-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Tue, 18 Jun 2013 18:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-%E8%BD%89%E6%8F%9B-idictionary-%E4%BB%8B%E9%9D%A2/</guid>
      <description>一樣開個新的Console專案，和加入System.Web.Extensions.dll參考 完整的程式碼如下using System; using System.Collections.Generic; using System.Web.Script.Serialization; namespace JavaScriptSerializerDemo { class Program { static void Main(string[] args) { // 淮備要序列化的資料 Dictionary&amp;lt;string, object&amp;gt; data = new Dictionary&amp;lt;string, object&amp;gt;() { { &amp;ldquo;ID&amp;rdquo;, 1 }, { &amp;ldquo;Name&amp;rdquo;, &amp;ldquo;Dictionary Demo&amp;rdquo; }, { &amp;ldquo;State&amp;rdquo;, EnumState.c }, { &amp;ldquo;Date&amp;rdquo;, DateTime.Today }, { &amp;ldquo;Guid&amp;rdquo;, Guid.NewGuid() } };
 // 序列化 JavaScriptSerializer jss = new JavaScriptSerializer(); string jsonString = jss.Serialize(data); Console.WriteLine(&amp;quot;序列化的JSON字串:{0}\r\n&amp;quot;, jsonString); // 反序列化 JsonObject obj = jss.Deserialize&amp;amp;lt;JsonObject&amp;amp;gt;(jsonString); Console.</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer 介紹</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-%E4%BB%8B%E7%B4%B9/</link>
      <pubDate>Tue, 18 Jun 2013 18:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-%E4%BB%8B%E7%B4%B9/</guid>
      <description>JavaScriptSerializer是.NET 3.5中新增的類別 該類別在System.Web.Script.Serialization命名空間下面 需引用System.Web.Extensions.dll
方法
 [Serialize](http://msdn.microsoft.com/zh-tw/library/system.web.script.serialization.javascriptserializer.serialize%28v=vs.90%29.aspx) 將物件序列化成JSON字串  [Deserialize&amp;lt;T&amp;gt;](http://msdn.microsoft.com/zh-tw/library/bb355316%28v=vs.90%29.aspx) 將JSON字串反序列化成指定的物件   屬性
 [MaxJsonLength](http://msdn.microsoft.com/zh-tw/library/system.web.script.serialization.javascriptserializer.maxjsonlength%28v=vs.90%29.aspx) 取得或設定可接受的字串最大長度，預設為4MB  [RecursionLimit](http://msdn.microsoft.com/zh-tw/library/system.web.script.serialization.javascriptserializer.recursionlimit%28v=vs.90%29.aspx) 取得或設定要處理物件層級數目的限制   參考資料 System.Web.Script.Serialization 命名空間</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer 用法</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 18 Jun 2013 18:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-%E7%94%A8%E6%B3%95/</guid>
      <description>首先開一個Console專案[![](http://1.bp.blogspot.com/-VwDQgSVGz-U/UcAj3KvmOLI/AAAAAAAAAtI/Kf254EFNRiY/s1600/01.NewProject.png)](http://1.bp.blogspot.com/-VwDQgSVGz-U/UcAj3KvmOLI/AAAAAAAAAtI/Kf254EFNRiY/s1600/01.NewProject.png)加入System.Web.Extensions.dll的引用[![](http://2.bp.blogspot.com/-nxGL-_thS3A/UcAkAWtjyxI/AAAAAAAAAtQ/BRmfRy3LwFM/s1600/02.AddReference.png)](http://2.bp.blogspot.com/-nxGL-_thS3A/UcAkAWtjyxI/AAAAAAAAAtQ/BRmfRy3LwFM/s1600/02.AddReference.png)完整的程式碼如下using System; using System.Web.Script.Serialization; namespace JavaScriptSerializerDemo { class Program { static void Main(string[] args) { // 淮備要序列化的資料 JsonObject data = new JsonObject() { ID = 1, Name = &amp;ldquo;JsonObject&amp;rdquo;, State = EnumState.c, Date = DateTime.Today, GUID = Guid.NewGuid() };
 // 序列化 JavaScriptSerializer jss = new JavaScriptSerializer(); string jsonString = jss.Serialize(data); Console.WriteLine(&amp;quot;序列化的JSON字串:{0}\r\n&amp;quot;, jsonString); // 反序列化 JsonObject obj = jss.Deserialize&amp;amp;lt;JsonObject&amp;amp;gt;(jsonString); Console.WriteLine( &amp;quot;反序列化後的物件, ID:{0}, Name:{1}, State:{2}, Date:{3}, GUID:{4}&amp;quot;, obj.ID, obj.Name, obj.State, obj.Date, obj.</description>
    </item>
    
    <item>
      <title>JavaScriptSerializer 轉換 IEnumerable 介面</title>
      <link>http://example.org/posts/2013/06/javascriptserializer-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</link>
      <pubDate>Tue, 18 Jun 2013 18:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/javascriptserializer-%E8%BD%89%E6%8F%9B-ienumerable-%E4%BB%8B%E9%9D%A2/</guid>
      <description>一樣開新Console專案做示範，並加入System.Web.Extensions.dll參考 完整的程式碼如下using System; using System.Collections.Generic; using System.Web.Script.Serialization; namespace JavaScriptSerializerDemo { class Program { static void Main(string[] args) { // 淮備要序列化的資料 List&amp;lt;JsonObject&amp;gt; data = new List&amp;lt;JsonObject&amp;gt;() { new JsonObject() { ID = 1, Name = &amp;ldquo;JsonObject1&amp;rdquo;, State = EnumState.a, Date = DateTime.Today.AddDays(-1), GUID = Guid.NewGuid() }, new JsonObject() { ID = 2, Name = &amp;ldquo;JsonObject2&amp;rdquo;, State = EnumState.b, Date = DateTime.Today, GUID = Guid.NewGuid() }, new JsonObject() { ID = 3, Name = &amp;ldquo;JsonObject3&amp;rdquo;, State = EnumState.</description>
    </item>
    
    <item>
      <title>JSON筆記</title>
      <link>http://example.org/posts/2013/06/json%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 18 Jun 2013 18:39:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/06/json%E7%AD%86%E8%A8%98/</guid>
      <description>JSON 筆記
JSON的全名為JavaScript Object Notation，是JavaScript的物件表示法 因為輕量化，易於人閱讀和編寫，也易於機器解析和生成的關系，所以很容易在各種網絡平台和程序之間做為一種資料交換格式
JSON的內容主要有二種型態，一種是物件，一種是陣列 物件由大括號包起來，屬性和值用冒號來分隔，每個屬性之間用逗點分隔 陣列用中括號包起來，每個資料之間用逗點分隔
{ &#34;ID&#34;: 1, &#34;Name&#34;: &#34;JSON Demo&#34;, &#34;State&#34;: 2, &#34;Date&#34;: &#34;\/Date(13714 84800000)\/&#34;, &#34;Guid&#34;: &#34;7c52f0a4-a742-4898-a55c-583ab851b183&#34;, &#34;DataList&#34;: [ 1, 2, 3, 4, 5 ] }  JSON的資料型態有文字、數字、布林、NULL 文字:用雙引號包起來的內容 數字:包含整數和浮點數 布林: true / false 更多完整的介紹，可以參考官網或W3CSchool JSON官網介紹
W3CSchool Learn JSON
 在.NET中內建兩種解析方式，但需要Framework 3.5以上
System.Web.Extensions下面的JavaScriptSerializer JavaScriptSerializer 介紹 JavaScriptSerializer 用法 JavaScriptSerializer 轉換 IEnumerable 介面 JavaScriptSerializer 轉換 IDictionary 介面 JavaScriptSerializer 日期處理 JavaScriptSerializer ScriptIgnoreAttribute
 System.Runtime.Serialization下面的DataContractJsonSerializer DataContractJsonSerializer 介紹 DataContractJsonSerializer 用法 DataContractJsonSerializer 轉換 IEnumerable 介面 DataContractJsonSerializer 轉換 IDictionary 介面 DataContractJsonSerializer 日期處理</description>
    </item>
    
    <item>
      <title>StyleCop 常見問題與修正方法</title>
      <link>http://example.org/posts/2013/01/stylecop-%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C%E8%88%87%E4%BF%AE%E6%AD%A3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 11 Jan 2013 16:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/01/stylecop-%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C%E8%88%87%E4%BF%AE%E6%AD%A3%E6%96%B9%E6%B3%95/</guid>
      <description>1. 單一頁面檢查方法 在空白地方按右鍵，選擇Run StyleCop，就只會檢查目前頁面
[![](http://3.bp.blogspot.com/-0l67G3vlzQ4/UO_I6oV3ySI/AAAAAAAAAqA/UEK5h8PGDpc/s1600/00.RunStyleCop.png)](http://3.bp.blogspot.com/-0l67G3vlzQ4/UO_I6oV3ySI/AAAAAAAAAqA/UEK5h8PGDpc/s1600/00.RunStyleCop.png)  2. 沒有檔頭宣告 錯誤訊息 The file has no header, the header Xml is invalid, or the header is not located at the top of the file.
修正方法 程式碼第一行加上檔頭宣告，格式如下
[![](http://2.bp.blogspot.com/-Cpp1sApPGuQ/UO_PTzM4scI/AAAAAAAAArg/aAWRAQ6UqiI/s1600/07.Header.png)](http://2.bp.blogspot.com/-Cpp1sApPGuQ/UO_PTzM4scI/AAAAAAAAArg/aAWRAQ6UqiI/s1600/07.Header.png) 如果是自動產生的檔案，可用auto-generated標籤略過 // &amp;lt;auto-generated /&amp;gt;  3. 縮排格式不正確 錯誤訊息 Tabs are not allowed. Use spaces instead.
修正方法 工具&amp;ndash;&amp;gt;選項&amp;ndash;&amp;gt;文字編輯器&amp;ndash;&amp;gt;所有語言&amp;ndash;&amp;gt;定位點 定位點和縮排大小都設定成4，並選擇插入空格的方式 開啟原始碼，使用CTRL+k, d重整程式碼即可
[![](http://2.bp.blogspot.com/-9S6GXTgtBsM/UO_JHDLoHOI/AAAAAAAAAqI/ln0-f0prpcE/s1600/01.tab.png)](http://2.bp.blogspot.com/-9S6GXTgtBsM/UO_JHDLoHOI/AAAAAAAAAqI/ln0-f0prpcE/s1600/01.tab.png)  4. Using指示詞位置 錯誤訊息 All using directives must be placed inside of the namespace.
修正方法 把所有using指示詞剪下，放到namespace下面</description>
    </item>
    
    <item>
      <title>NLog RichTextBox Target</title>
      <link>http://example.org/posts/2012/12/nlog-richtextbox-target/</link>
      <pubDate>Mon, 31 Dec 2012 02:06:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-richtextbox-target/</guid>
      <description>NLog RichTextBox Target 將Log訊息寫到RichTextBox控制項如果有現成的就指定控制項名稱，但需注意要在表單建立之後再取得Logger例如在表單建構式之後，或是在Form_Load事件之後不然還是會獨立建出一個RichTextBox出來 static Logger log; private void Form1_Load(object sender, EventArgs e) { // 需在Form_Load才取得Logger log = LogManager.GetCurrentClassLogger(); } 
屬性 完整資料請參考[官網的RichTextBox Target文件](https://github.com/nlog/nlog/wiki/RichTextBox-target)   name - Target的名稱
  layout - 輸出的格式
  autoScroll - 是否自動捲動最下方
  maxLines - 最大行數，超過會往上移動，移除最上方記錄
  controlName - 控制項名稱
  formName - 表單名稱
  useDefaultRowColoringRules - Log文字是否使用預設的顏色非同步，自動捲動，最大20行，使用預設色系的設定檔&amp;lt;?xml version=&amp;quot;1.0&amp;rdquo; encoding=&amp;quot;utf-8&amp;rdquo; ?&amp;gt; &amp;lt;nlog xmlns=&amp;quot;http://www.nlog-project.org/schemas/NLog.xsd&amp;rdquo; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;rdquo;&amp;gt;
&amp;lt;!&amp;ndash; See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs.</description>
    </item>
    
    <item>
      <title>NLog Debugger Target</title>
      <link>http://example.org/posts/2012/12/nlog-debugger-target/</link>
      <pubDate>Mon, 31 Dec 2012 01:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-debugger-target/</guid>
      <description>NLog Debugger Target 將Log輸出到Vistual Studio的輸出視窗，Web應用程式的開發很有幫助  屬性 基本上和其他Target一樣，沒有特別需要介紹的屬性完整資料還是參考[官網的Debugger Target文件](https://github.com/nlog/nlog/wiki/Debugger-target)    name - Target的名稱
  header - 頭部格式
  layout - 輸出格式
  footer - 尾部格式屬性很簡單，設定檔也簡單&amp;lt;?xml version=&amp;quot;1.0&amp;rdquo; encoding=&amp;quot;utf-8&amp;rdquo; ?&amp;gt; &amp;lt;nlog xmlns=&amp;quot;http://www.nlog-project.org/schemas/NLog.xsd&amp;rdquo; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;rdquo;&amp;gt;
&amp;lt;!&amp;ndash; See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs. &amp;ndash;&amp;gt; &amp;lt;targets&amp;gt; &amp;lt;target xsi:type=&amp;quot;Debugger&amp;rdquo; name=&amp;quot;f&amp;rdquo; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}&amp;rdquo; /&amp;gt; &amp;lt;/targets&amp;gt; &amp;lt;rules&amp;gt; &amp;lt;logger name=&amp;rdquo;*&amp;rdquo; minlevel=&amp;quot;Trace&amp;rdquo; writeTo=&amp;quot;f&amp;rdquo; /&amp;gt; &amp;lt;/rules&amp;gt; &amp;lt;/nlog&amp;gt; 
  </description>
    </item>
    
    <item>
      <title>NLog Mail Target</title>
      <link>http://example.org/posts/2012/12/nlog-mail-target/</link>
      <pubDate>Mon, 31 Dec 2012 01:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-mail-target/</guid>
      <description>NLog Mail Target 透過郵件把Log寄出，例如Error和Fatal等級的Log可以考慮直接寄出給管理員 屬性 完整的資料請參考[官網Mail Target文件](https://github.com/nlog/nlog/wiki/Mail-target)   html - 是否為HTML格式的郵件，預設為false encoding - 郵件編碼，預設為UTF8 subject - 郵件主題 to - 收件者 bcc - 密件副本 cc - 副本 from - 寄件者 body - 郵件內容，預設為${message} smtpUserName - 郵件主機寄信帳號 enableSsl - 是否啟用SSL通訊協定 smtpPassword - 郵件主密寄信密碼 smtpAuthentication - 郵件主機驗證模組，Basci、None、Ntml，預設為None smtpServer - 郵件主機位址 smtpPort - 郵件主機埠號，預設為25  一個簡單的範例，發生Error層級以上的Log，就寄信給管理員&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt; &amp;amp;lt;!--  See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs.</description>
    </item>
    
    <item>
      <title>NLog File Target</title>
      <link>http://example.org/posts/2012/12/nlog-file-target/</link>
      <pubDate>Mon, 31 Dec 2012 00:37:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-file-target/</guid>
      <description>NLog File Target 輸出到檔案是預設的設定，可以是一個或是多個檔案
參數 File Target可以使用的參數很多，除了特殊需求之外，大部份採用預設值就行了詳細說明請參考[官網File Target文件](https://github.com/nlog/nlog/wiki/File-target) 以下為常用的參數  name - target的名稱 layout - 輸出格式，預設為${longdate}|${level:uppercase=true}|${logger}|${message} header - 頭部格式 footer - 尾部格式 encoding - 檔案編碼，如果有中文字的話，可以指定成utf-8 fileName - 檔案名稱，配合Layout Renderers組合檔名  常用範例 非同步，每小時寫檔，UTF8格式&amp;lt;?xml version=&amp;quot;1.0&amp;rdquo; encoding=&amp;quot;utf-8&amp;rdquo; ?&amp;gt; &amp;lt;nlog xmlns=&amp;quot;http://www.nlog-project.org/schemas/NLog.xsd&amp;rdquo; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;rdquo;&amp;gt;
&amp;amp;lt;!--  See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs. &amp;ndash;&amp;gt; &amp;lt;targets&amp;gt; &amp;lt;target xsi:type=&amp;quot;AsyncWrapper&amp;rdquo; name=&amp;quot;f&amp;rdquo; queueLimit=&amp;quot;5000&amp;rdquo; overflowAction=&amp;quot;Discard&amp;rdquo;&amp;gt; &amp;lt;target xsi:type=&amp;quot;File&amp;rdquo; fileName=&amp;quot;${basedir}/logs/${date:format=yyyy-MM-dd-HH}.log&amp;rdquo; layout=&amp;quot;${longdate} ${uppercase:${level}} ${message}&amp;rdquo; encoding=&amp;quot;utf-8&amp;rdquo; /&amp;gt; &amp;lt;/target&amp;gt; &amp;lt;/targets&amp;gt; &amp;lt;rules&amp;gt; &amp;lt;logger name=&amp;rdquo;*&amp;rdquo; minlevel=&amp;quot;Trace&amp;rdquo; writeTo=&amp;quot;f&amp;rdquo; /&amp;gt; &amp;lt;/rules&amp;gt; &amp;lt;/nlog&amp;gt; CSV格式</description>
    </item>
    
    <item>
      <title>NLog API</title>
      <link>http://example.org/posts/2012/12/nlog-api/</link>
      <pubDate>Sun, 30 Dec 2012 23:02:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-api/</guid>
      <description>LogManager LogManager是用來建立日誌和管理設定檔用的類別，有以下幾個Method   LogManager.GetLogger - 取得或建立指定的logger 建議建立Logger的方式，需要手動指定名稱 LogManager.GetCurrentClassLogger - 取得或建立目前類別名稱的logger 雖然比較方便，但底層是以StackTrace取得名稱，成本高很多 LogManager.Configuration - 取得或設定目前日誌的設定資訊 LogManaget.GlobalThreshold - 取得或設定全域日誌的threshold   Logger NLog.Logger類別是用來輸出Log用的，有以下幾個Method用來輸出不同層級的Log每個Method都有多個overloads用來最小化內存配置以提高日誌速度  Log() - 使用指定的格式和參數，將訊息寫入指定的級別 Trace() - 使用指定的格式和參數，將訊息寫入Trace級別 Debug() - 使用指定的格式和參數，將訊息寫入Debug級別 Info() - 使用指定的格式和參數，將訊息寫入Info級別 Warn() - 使用指定的格式和參數，將訊息寫入Warn級別 Erro() - 使用指定的格式和參數，將訊息寫入Error級別 Fatal() - 使用指定的格式和參數，將訊息寫入Fatal級別以下的方法和屬性用來檢查該層級的日誌是否啟用     IsEnabled() - 確定指定的級別日誌是否啟用
  IsTraceEnabled - 確定Trace級別日誌是否啟用
  IsDebugEnabled - 確定Debug級別日誌是否啟用
  IsInfoEnabled - 確定Info級別日誌是否啟用
  IsWarnEnabled - 確定Warn級別日誌是否啟用</description>
    </item>
    
    <item>
      <title>NLog 學習筆記</title>
      <link>http://example.org/posts/2012/12/nlog-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sun, 30 Dec 2012 16:57:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>一套好用的Logging工具在開發和日後維護上很有幫助，之前一直用的是log4net，雖然功能強大，但層級式的設定檔比較複雜不容易掌握，而且相關的中文資源也不是很多
後來找到NLog這個套件，Google一下很快就上手了，而且也有不少詳細的中文資料，擴充功能也很簡單，在此記錄一下學習筆記和參考資料
NLog學習筆記 1.&amp;nbsp;[NLog 初體驗](http://blog.developer.idv.tw/2012/12/nlog.html) &amp;nbsp; &amp;nbsp; NLog的安裝、設定、和使用 2. NLog Config NLog的設定檔作用和內容
3.NLog Targets Nlog的輸出目標
4. NLog Rules NLog的輸出的路由規則
5. NLog Layout NLog的輸出格式
6. 好用的Log Viewer
7. Common.Logging
8. 個人常用Log格式
9. NLog Database Target
10. ELMAH
11. NLog.Elmah
參考資料 [NLog官網](http://nlog-project.org/) [NLog Document](https://github.com/nlog/nlog/wiki) &amp;nbsp;[mrkt 的程式學習筆記 - 系統記錄與效能監測](http://kevintsengtw.blogspot.tw/p/blog-page_12.html#.UN59kqxcUep) Dflying Chen @ cnblogs - NLog系列</description>
    </item>
    
    <item>
      <title>NLog Layouts</title>
      <link>http://example.org/posts/2012/12/nlog-layouts/</link>
      <pubDate>Sun, 30 Dec 2012 16:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-layouts/</guid>
      <description>NLog Layouts Layout是用來決定記錄的訊息輸出的格式，通常設定在target的屬性中這個功能可以讓我們動態增減日誌的內容，而不用回頭修改程式碼和重新編譯使用方法是$字號和左右大括號，包住Layout Renderers參數的使用方法則是冒號分隔，屬性=值的方式預設的輸出格式如下 ${longdate}|${level:uppercase=true}|${logger}|${message}    Layout Renderers   ${basedir} - 應用程式所在的資料庫 ${callsite} - 日誌來源的類別名稱、方法名稱和來源資訊 ${data} - 目前日期和時間 ${exception} - 例外的訊息 ${level} - 日誌的級別 ${logger} - 日誌的來源 ${logdate} - 長日期格式，yyyy-MM-dd HH:mm:ss.mmm ${machinename} - 電腦名稱 ${message} - 日誌的內容 ${newline} - 換行符號 ${shortdate} - 短日期格式 yyyy-MM-dd ${stacktrace} - 呼叫堆疊資訊 ${time} - 時間格式，HH:mm:ss.mmm. ${windows-identity} - 登入帳號每一個Layout Renderers還包含各自的屬性，詳細的內容可以參考官網Layout Renderers文件   Pre-Defined Layouts NLog還包含了幾個預設定義好的格式，詳細的文件請參考官網的Layout文件
 CsvLayout - CSV格式 LayoutWithHeaderAndFooter - 加上Header和Footer的格式 Log4JXmlEventLayout - Log4j相容的格式 SimpleLayout - 簡單的文字內容格式  上一篇 : [NLog Rules](http://blog.</description>
    </item>
    
    <item>
      <title>NLog Rules</title>
      <link>http://example.org/posts/2012/12/nlog-rules/</link>
      <pubDate>Sun, 30 Dec 2012 01:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-rules/</guid>
      <description>NLog Rules NLog使用一個簡單的路由表檢查當檢查到符合的日誌名稱和級別時，會輸出到指定的一個或多個Target去如果指定了final屬性，之後的規則就不再檢查Rules可以使用的屬性如下   name - 日誌來源的名稱(允許使用通配符號*) minlevel - 設定符合該規則的最低級別 maxlevel - 設定符合該規則的最高級別 level - 設定符合該規則的特定級別 levels - 設定符合該規則的級別列表，用逗號分隔 writeTo - 設定符合該規則的日誌要寫入的target列表，用逗號分隔 final - 設定符合該規則的條件為最後一個規則，後面的規則不再檢查以下為一些例子&amp;lt;!&amp;ndash; 命名空間Name.Space下的Class1這個類別的日誌，符合Debug以上的級別，就輸出到f1這個Target &amp;ndash;&amp;gt; &amp;lt;logger name=&amp;quot;Name.Space.Class1&amp;rdquo; minlevel=&amp;quot;Debug&amp;rdquo; writeTo=&amp;quot;f1&amp;rdquo; /&amp;gt;  &amp;lt;!&amp;ndash; 命名空間Name.Space下的Class1這個類別的日誌，符合Debug和Error這兩個級別，就輸出到f1這個Target &amp;ndash;&amp;gt; &amp;lt;logger name=&amp;quot;Name.Space.Class1&amp;rdquo; levels=&amp;quot;Debug,Error&amp;rdquo; writeTo=&amp;quot;f1&amp;rdquo; /&amp;gt;
&amp;lt;!&amp;ndash; 命名空間Name.Space下的所有類別的日誌，就輸出到f3和f4這兩個Target &amp;ndash;&amp;gt; &amp;lt;logger name=&amp;quot;Name.Space.*&amp;rdquo; writeTo=&amp;quot;f3,f4&amp;rdquo; /&amp;gt;
&amp;lt;!&amp;ndash; 命名空間Name.Space下的所有類別的日誌，級別在Debug和Error之間 也就是說級別為Debug, Info, Warn, Error，不輸出日誌，因為這條規則沒有指定writeTo 同時不再檢查之後的規則，因為這裡設定final=true &amp;ndash;&amp;gt; &amp;lt;logger name=&amp;quot;Name.Space.*&amp;rdquo; minlevel=&amp;quot;Debug&amp;rdquo; maxlevel=&amp;quot;Error&amp;rdquo; final=&amp;quot;true&amp;rdquo; /&amp;gt; 
 NLog Level NLog的日誌級別分為六個等級，方便我們對於不同情境制訂出合適的級別輸出
 Trace - 大量而詳細的訊息，一般只用在開發環境 Debug - 用來除錯用的詳細訊息，比Trace用的少一點，一般也只用在開發環境 Info - 用來提示用的訊息，例如使用者登出入，交易參數資料 Warn - 用來警告用的訊息，例如執行時間超出預期，連線數接近上限 Error - 一般錯誤的訊息，一般就是try catch到的Exception Fatal - 致命錯誤的訊息，通常會造成應用程式無法執行最簡單的設定檔配置，只要設定Rule和要寫入的Target就行了 上一篇: NLog Targets 下一篇: NLog Layouts   </description>
    </item>
    
    <item>
      <title>NLog Targets</title>
      <link>http://example.org/posts/2012/12/nlog-targets/</link>
      <pubDate>Sun, 30 Dec 2012 00:29:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-targets/</guid>
      <description>NLog Targets target用來定義Log的輸出目標，基本的兩個屬性為
 name - 目標的名稱，用來給rule路由指定的名稱 type - 目標的類型，NLog支援的類型很多，完整資料請參考官網Supported Targets文件每一個target元素代表一個輸出目標，只要name屬性值不衝突即可  &amp;lt;targets&amp;gt; &amp;lt;target name=&#34;f1&#34; xsi:type=&#34;File&#34; fileName=&#34;file1.txt&#34;/&amp;gt; &amp;lt;target name=&#34;f2&#34; xsi:type=&#34;File&#34; fileName=&#34;file2.txt&#34;/&amp;gt; &amp;lt;target name=&#34;n1&#34; xsi:type=&#34;Network&#34; address=&#34;tcp://localhost:4001&#34;/&amp;gt; &amp;lt;target name=&#34;ds&#34; xsi:type=&#34;OutputDebugString&#34;/&amp;gt; &amp;lt;/targets&amp;gt;  依照type的不同，會有相對應的屬性，例如 File需要指定FileName檔名 Database需指定資料庫相關的參數和語法 Mail需指定郵件主機等資訊 每種類型的設定方式，之後再來詳細介紹
 自訂target 要自行擴充target可以參考官網文件的How to write a target 只要繼承NLog的TargetWithLayout類別，覆寫Write(LogEventInfo logEvent)函式 再利用extensions元素或在程式碼中註冊就行了
 Wrapper Targets NLog提供幾個封裝和複合目標，用來增加target的功能  asynchronous processing (非同步功能，被封裝的target會由另一個執行緒來運行) retry-on-error(自動重試功能) buffering(緩衝處理，不會馬上寫出Log，而會依設定值累積一定數量才輸出Log) filtering(過濾條件，會依設定值決定是否輸出Log)更多詳細功能請參考官網的Wrapper Targets文件  Wrapper可以連續嵌套，以下的範例可以增加非同步和自動重試的功能&amp;lt;targets&amp;gt; &amp;lt;!-- 增加非同步功能--&amp;gt; &amp;lt;target name=&#34;n&#34; xsi:type=&#34;AsyncWrapper&#34;&amp;gt; &amp;lt;!-- 增加自動重試功能 --&amp;gt; &amp;lt;target xsi:type=&#34;RetryingWrapper&#34;&amp;gt; &amp;lt;target xsi:type=&#34;</description>
    </item>
    
    <item>
      <title>NLog Config</title>
      <link>http://example.org/posts/2012/12/nlog-config/</link>
      <pubDate>Sat, 29 Dec 2012 16:27:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-config/</guid>
      <description>NLog設定檔位置 NLog的設定檔有幾個位置，參考官網文件如下
 應用程式的標準設定檔(app.config或是web.config) 執行過程中如果需要修改NLog的配置，會造成應用程式重新啟動 應用程式所在目錄的app.exe.nlog 每個專案都要手動指定檔名比較麻煩點 應用程式所在目錄的NLog.config 建議使用的設定檔方式 Nlog.dll所在目錄的NLog.dll.config 和第三種方式差不多，還是選擇比較常見的第三種方式吧 環境變數NLOG_GLOBAL_CONFIG_FILE指定的檔案 設在這種神秘的地方，應該會被扁吧在ASP.NET或是Windows Form應用程式中有點差異，其他的專案類型有幾種方式不能用，所以建議使用最通用的第三種方式   NLog設定檔元素 Nlog的設定檔有以下五種元素，前兩種是必要項目，後三種是可選項目  targets - 定義Log的輸出目標，輸出格式的Layout也在這裡設定 rules - 定義Log的路由規則，Log的過濾條件也在這裡設定 extensions - 定義擴充元件，包含NLog擴充模組和自定義的擴充模組 include - 引用外部設定檔，簡化設定檔的複雜度和重覆利用 variable - 定義設定檔中自行設定的變數，可以統一和簡化設定檔資料   NLog設定檔自動重讀 NLog的設定檔，在執行過程中預設是不會重讀的，每個修改都需要重新啟動應用程式才能生效 如果要自動重讀的話，需要設定一個屬性autoReload=&amp;quot;true&amp;quot;才能生效
&amp;lt;nlog autoreload=&#34;true&#34;&amp;gt; ... &amp;lt;/nlog&amp;gt;   NLog設定檔疑難排解 有時後就算設好了設定檔，Log還是沒有寫出來，最常見的原因是權限問題造成的問題例如ASP.NET的w3wp.exe沒有指定資料夾寫檔案的權限這時後可以利用NLog內部的Log來查詢原因  throwExceptions - 設定是否要引發錯誤 NLog會吃掉所有內部引發的錯誤，要找問題時可以設為true，找到之後應該設回false internalLogFile - 設定內部錯誤要輸出的文件位置 直接給一個檔名就好，會輸出在執行檔所在目錄下面 internalLogLevel - 設定內部錯誤要輸出的層級 基本上要找的是Error訊息比較簡潔點，不設定的話會輸出所有詳細訊息 internalLogToConsole - 設定內部錯誤是否要輸出到Console視窗 如果不想寫檔，又有Console可以用的話，那就設定為true吧 internalLogToConsoleError - 設定內部錯誤是否要輸出到stderr串流 為了不要和應用程式正常訊息混在一起，可以把錯誤訊息重導向到stderr  上一篇 : [NLog 初體驗](http://blog.</description>
    </item>
    
    <item>
      <title>NLog 初體驗</title>
      <link>http://example.org/posts/2012/12/nlog-%E5%88%9D%E9%AB%94%E9%A9%97/</link>
      <pubDate>Sat, 29 Dec 2012 14:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nlog-%E5%88%9D%E9%AB%94%E9%A9%97/</guid>
      <description>先簡單介紹一下如何安裝NLog這個套件，和使用預設的設定檔來寫出Log首先讓環境簡單點，所以開一個主控台專案來當範例[![](http://1.bp.blogspot.com/-kY84lmK8n-Y/UN6LxFGNSKI/AAAAAAAAAls/avloE2j0DDU/s1600/01.NLogApp.png)](http://1.bp.blogspot.com/-kY84lmK8n-Y/UN6LxFGNSKI/AAAAAAAAAls/avloE2j0DDU/s1600/01.NLogApp.png) 接下來引用NLog最簡單的方式當然就是用NuGet安裝了如果對NuGet不熟的話，可以參考之前的[NuGet學習筆記](http://blog.developer.idv.tw/2012/12/nuget.html)NLog這個套件是NLog.dll元件本身 NLog.Config這個套件是NLog.config和NLog.xsd(用來幫助在設定檔中的IntelliSense) [![](http://1.bp.blogspot.com/-q64xvtDQs48/UN6NL4Ig1YI/AAAAAAAAAmU/ZbCqaqjTbi0/s1600/02.NugetInstall.png)](http://1.bp.blogspot.com/-q64xvtDQs48/UN6NL4Ig1YI/AAAAAAAAAmU/ZbCqaqjTbi0/s1600/02.NugetInstall.png)安裝好後，專案中就會多了這三個東西 [![](http://1.bp.blogspot.com/-JPz6V3bHo4Y/UN6NW6sNdhI/AAAAAAAAAmc/rLoiSFWHldA/s1600/03.SolutionExplorer.png)](http://1.bp.blogspot.com/-JPz6V3bHo4Y/UN6NW6sNdhI/AAAAAAAAAmc/rLoiSFWHldA/s1600/03.SolutionExplorer.png) 打開設定檔，把註解拿掉，先使用預設值來體驗一下 詳細的設定方式，之後再介紹 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;nlog xmlns=&#34;http://www.nlog-project.org/schemas/NLog.xsd&#34; &amp;nbsp; &amp;nbsp; &amp;nbsp; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&amp;gt; &amp;nbsp; &amp;nbsp; &amp;lt;!-- &amp;nbsp; See http://nlog-project.org/wiki/Configuration_file &amp;nbsp; for information on customizing logging rules and outputs. &amp;nbsp; &amp;nbsp;--&amp;gt; &amp;nbsp; &amp;nbsp; &amp;lt;targets&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- add your targets here --&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;target xsi:type=&#34;File&#34; name=&#34;f&#34; fileName=&#34;${basedir}/logs/${shortdate}.log&#34; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; layout=&#34;${longdate} ${uppercase:${level}} ${message}&#34; /&amp;gt; &amp;nbsp; &amp;nbsp; &amp;lt;/targets&amp;gt; &amp;nbsp; &amp;nbsp; &amp;lt;rules&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!</description>
    </item>
    
    <item>
      <title>VS2012 Remote Debug 遠端偵錯</title>
      <link>http://example.org/posts/2012/12/vs2012-remote-debug-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF/</link>
      <pubDate>Tue, 25 Dec 2012 12:03:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/vs2012-remote-debug-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF/</guid>
      <description>VS2012的遠端偵錯變的簡單多了，不再需要驗證身份就可以使用，但相對的作業系統需要更新到Server2008R2以上  [![](http://4.bp.blogspot.com/-lQq_Fp2n3AE/UNkege7WrMI/AAAAAAAAAjU/bjY8oAEdBfQ/s1600/VS2012RemoteDebug.png)](http://4.bp.blogspot.com/-lQq_Fp2n3AE/UNkege7WrMI/AAAAAAAAAjU/bjY8oAEdBfQ/s1600/VS2012RemoteDebug.png)首先下載Remote Tools for Visual Studio 2012 [![](http://2.bp.blogspot.com/-VqG02LMi9aE/UNkerTlrF5I/AAAAAAAAAjc/HxWTX18lW5w/s1600/01.Download.png)](http://2.bp.blogspot.com/-VqG02LMi9aE/UNkerTlrF5I/AAAAAAAAAjc/HxWTX18lW5w/s1600/01.Download.png)在伺服器上面安裝遠端偵錯工具  [![](http://3.bp.blogspot.com/-N2cnZ2-rzqM/UNkgRPNpyRI/AAAAAAAAAkE/4bLI0GskB50/s1600/02.InstallUI.png)](http://3.bp.blogspot.com/-N2cnZ2-rzqM/UNkgRPNpyRI/AAAAAAAAAkE/4bLI0GskB50/s1600/02.InstallUI.png)在Server上安裝好遠端偵錯工具後，打開遠端偵錯工具[![](http://1.bp.blogspot.com/-ttJKtFGuWWY/UNkk8TCKtZI/AAAAAAAAAk8/d-NO1x5AcVg/s1600/03.Start.png)](http://1.bp.blogspot.com/-ttJKtFGuWWY/UNkk8TCKtZI/AAAAAAAAAk8/d-NO1x5AcVg/s1600/03.Start.png) 設定成非驗證模式，允許任何使用者執行偵錯，和延長閒置時間[![](http://3.bp.blogspot.com/-7wjO-1g8oRg/UNkkyfqDIuI/AAAAAAAAAk0/HeaygtT76r8/s1600/04.Connect.png)](http://3.bp.blogspot.com/-7wjO-1g8oRg/UNkkyfqDIuI/AAAAAAAAAk0/HeaygtT76r8/s1600/04.Connect.png)打開VS2012，附加執行緒，選擇遠端(非驗證)，輸入IP和Port號，找到執行檔附加即可 [![](http://4.bp.blogspot.com/-umj_9g07B-w/UNklLCMLIDI/AAAAAAAAAlE/-j_M1y-EV7I/s1600/05.Attach.png)](http://4.bp.blogspot.com/-umj_9g07B-w/UNklLCMLIDI/AAAAAAAAAlE/-j_M1y-EV7I/s1600/05.Attach.png) 上一篇: [VS2010 Remote Debug 遠端偵錯](http://blog.</description>
    </item>
    
    <item>
      <title>StyleCop 整合SVN</title>
      <link>http://example.org/posts/2012/12/stylecop-%E6%95%B4%E5%90%88svn/</link>
      <pubDate>Mon, 24 Dec 2012 20:18:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/stylecop-%E6%95%B4%E5%90%88svn/</guid>
      <description>安裝SVNStyleCop 1. 首先下載SVNStyleCop安裝檔 2. 解壓縮後編輯SVNStyleCop.exe.config 3. 設定SVNSettings.StyleCop裡面要檢查的規則 4. 修改SVNStyleCop.exe.config裡面的路徑範本
&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;configSections&amp;gt; &amp;lt;section name=&#34;svnStyleCopConfig&#34; type=&#34;SVNStyleCop.SvnStyleCopConfigSection, SVNStyleCop&#34; allowDefinition=&#34;Everywhere&#34; allowExeDefinition=&#34;MachineToApplication&#34; restartOnExternalChanges=&#34;true&#34; /&amp;gt; &amp;lt;/configSections&amp;gt; &amp;lt;svnStyleCopConfig tempFolder=&#34;Temp&#34;&amp;gt; &amp;lt;!-- 設定svnlook.exe執行檔位置 --&amp;gt; &amp;lt;svnLook location=&#34;C:\Program Files\VisualSVN Server\bin\svnlook.exe&#34; /&amp;gt; &amp;lt;styleCop settingsFile=&#34;SVNSettings.StyleCop&#34; maxViolationCount=&#34;20&#34; /&amp;gt; &amp;lt;!-- 設定專案路徑範本 --&amp;gt; &amp;lt;pathPatterns&amp;gt; &amp;lt;clear /&amp;gt; &amp;lt;add value=&#34;^trunk/.*\.cs$&#34;/&amp;gt; &amp;lt;add value=&#34;^branches/.*\.cs$&#34;/&amp;gt; &amp;lt;add value=&#34;^tags/.*\.cs$&#34;/&amp;gt; &amp;lt;/pathPatterns&amp;gt; &amp;lt;/svnStyleCopConfig&amp;gt; &amp;lt;/configuration&amp;gt; 設定 1\. 編輯壓縮檔下面的pre-commit.cmd，修改前兩行svnlook.exe和SVNStyleCop.exe的路徑2\. 把批次檔的內容複製到SVN Repos的pre-commit hook[![](http://3.bp.blogspot.com/-87zwTSTxMa0/UOPNcTue3SI/AAAAAAAAApY/zcxgaQcFXAs/s1600/01.Hook.png)](http://3.bp.blogspot.com/-87zwTSTxMa0/UOPNcTue3SI/AAAAAAAAApY/zcxgaQcFXAs/s1600/01.Hook.png)   參考資料 SVNStyleCop官網</description>
    </item>
    
    <item>
      <title>StyleCop 整合專案設定</title>
      <link>http://example.org/posts/2012/12/stylecop-%E6%95%B4%E5%90%88%E5%B0%88%E6%A1%88%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Mon, 24 Dec 2012 20:17:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/stylecop-%E6%95%B4%E5%90%88%E5%B0%88%E6%A1%88%E8%A8%AD%E5%AE%9A/</guid>
      <description>首先卸載專案
如果要讓沒通過規則的警告變成錯誤，可以在專案中加入StyleCopTreatErrorsAsWarnings這個屬性
&amp;lt;PropertyGroup&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Configuration Condition=&#34; &#39;$(Configuration)&#39; == &#39;&#39; &#34;&amp;gt;Debug&amp;lt;/Configuration&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Platform Condition=&#34; &#39;$(Platform)&#39; == &#39;&#39; &#34;&amp;gt;AnyCPU&amp;lt;/Platform&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;ProjectGuid&amp;gt;{6F76C2E4-57EF-4A46-9A41-E7A9653F5EF9}&amp;lt;/ProjectGuid&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;AppDesignerFolder&amp;gt;Properties&amp;lt;/AppDesignerFolder&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;RootNamespace&amp;gt;DemoApp&amp;lt;/RootNamespace&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;AssemblyName&amp;gt;DemoApp&amp;lt;/AssemblyName&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;TargetFrameworkVersion&amp;gt;v4.5&amp;lt;/TargetFrameworkVersion&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;FileAlignment&amp;gt;512&amp;lt;/FileAlignment&amp;gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;StyleCopTreatErrorsAsWarnings&amp;gt;false&amp;lt;/StyleCopTreatErrorsAsWarnings&amp;gt; &amp;lt;/PropertyGroup&amp;gt;  如果要編譯的時後，也做規則驗證，可以在最下面加入一個StyleCop.targets
&amp;lt;Import Project=&#34;$(MSBuildToolsPath)\Microsoft.CSharp.targets&#34; /&amp;gt; &amp;lt;Import Project=&#34;$(ProgramFiles)\MSBuild\StyleCop\v4.7\StyleCop.targets&#34; /&amp;gt;  參考資料
http://blogs.msdn.com/b/sourceanalysis/archive/2008/05/24/source-analysis-msbuild-integration.aspx</description>
    </item>
    
    <item>
      <title>StyleCop 程式碼風格和常見警告訊息</title>
      <link>http://example.org/posts/2012/12/stylecop-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E9%A2%A8%E6%A0%BC%E5%92%8C%E5%B8%B8%E8%A6%8B%E8%AD%A6%E5%91%8A%E8%A8%8A%E6%81%AF/</link>
      <pubDate>Mon, 24 Dec 2012 20:01:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/stylecop-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E9%A2%A8%E6%A0%BC%E5%92%8C%E5%B8%B8%E8%A6%8B%E8%AD%A6%E5%91%8A%E8%A8%8A%E6%81%AF/</guid>
      <description>每個檔案的最上面，都加一個檔頭 // &amp;lt;copyright company=&amp;quot;CompanyName&amp;rdquo; file=&amp;quot;NameOfFile.cs&amp;rdquo;&amp;gt; // Company copyright tag. // &amp;lt;/copyright&amp;gt;
XML註解 建構式以Initializes a new instance of the xxx class開頭 解構式以Finalizes an instance of the xxx class開頭 屬性以Gets or sets開頭 註解文字最少兩個字以上，並用空格分隔 註解文字斷行要用para分隔 程式碼撰寫順序 程式碼撰寫順序: public -&amp;amp;gt; internal -&amp;amp;gt; protected internal -&amp;amp;gt; protected -&amp;amp;gt; private 程式碼元素撰寫順序: Fields -&amp;amp;gt; Constructor -&amp;amp;gt; Event-&amp;amp;gt; Property -&amp;amp;gt; Method
大小寫規則 Camel Case:私有的內部變數、成員變數、參數 Pascal Case:公開的屬性、方法、事件&amp;hellip; 其他 using 放到namespace下面 需使用明確的存取修飾詞 程式碼中多餘的空白行 變數不用使用底線
常見錯誤 SA1633 : CSharp.Documentation : The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</description>
    </item>
    
    <item>
      <title>StyleCop 程式碼風格和一致性規則檢查工具</title>
      <link>http://example.org/posts/2012/12/stylecop-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E9%A2%A8%E6%A0%BC%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7%E8%A6%8F%E5%89%87%E6%AA%A2%E6%9F%A5%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 24 Dec 2012 19:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/stylecop-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E9%A2%A8%E6%A0%BC%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7%E8%A6%8F%E5%89%87%E6%AA%A2%E6%9F%A5%E5%B7%A5%E5%85%B7/</guid>
      <description>StyleCop是C# 程式碼風格和一致性規則檢查工具，針對原始碼來做檢查，目前已經Open Source，網址為http://stylecop.codeplex.com 首先下載msi格式的安裝檔[![](http://3.bp.blogspot.com/--jwuaUDVBfs/UNhBDnLG0eI/AAAAAAAAAhk/b_U-xXWZIcc/s1600/01.Download.png)](http://3.bp.blogspot.com/--jwuaUDVBfs/UNhBDnLG0eI/AAAAAAAAAhk/b_U-xXWZIcc/s1600/01.Download.png) 下載回來後一直按下一步就行了[![](http://1.bp.blogspot.com/-PRXONIZ_JxE/UNhBEIzkfBI/AAAAAAAAAho/VlZngd-AHbE/s1600/02.Install.png)](http://1.bp.blogspot.com/-PRXONIZ_JxE/UNhBEIzkfBI/AAAAAAAAAho/VlZngd-AHbE/s1600/02.Install.png) 等幾分鐘才能跑完[![](http://1.bp.blogspot.com/-xfr0KROUJtg/UNhBEyCSOrI/AAAAAAAAAhw/a0SoGG2XcEY/s1600/03.InstallOK.png)](http://1.bp.blogspot.com/-xfr0KROUJtg/UNhBEyCSOrI/AAAAAAAAAhw/a0SoGG2XcEY/s1600/03.InstallOK.png) 打開專案，在專案上面按右鍵，選單中就會出現StyleCop相關的功能，先選擇Run StyleCop[![](http://1.bp.blogspot.com/-M30ktUiaFUk/UNhBFYlbzQI/AAAAAAAAAh4/o7PhLu-ZA9Y/s1600/04.ContextMenu.png)](http://1.bp.blogspot.com/-M30ktUiaFUk/UNhBFYlbzQI/AAAAAAAAAh4/o7PhLu-ZA9Y/s1600/04.ContextMenu.png) 工作清單就會出現一堆不符合的警告在警告訊息上面點兩下，就會跳到引發警告的程式碼位置 [![](http://1.bp.blogspot.com/-rwafVo1cfac/UNhBGI6MfMI/AAAAAAAAAiA/Gp5JccWdtTo/s1600/05.ErrorMsgClick.png)](http://1.bp.blogspot.com/-rwafVo1cfac/UNhBGI6MfMI/AAAAAAAAAiA/Gp5JccWdtTo/s1600/05.ErrorMsgClick.png) 如果要了解引發警告的原因，可以在訊息上面按右鍵，選擇顯示錯誤說明[![](http://2.bp.blogspot.com/-xhJ2QEBbHoI/UNhBG6EP7JI/AAAAAAAAAiI/2V_wFrzpYD8/s1600/06.ShowErrorMsg.png)](http://2.bp.blogspot.com/-xhJ2QEBbHoI/UNhBG6EP7JI/AAAAAAAAAiI/2V_wFrzpYD8/s1600/06.ShowErrorMsg.png) 就會跳出StyleCop的說明手冊[![](http://1.bp.blogspot.com/-iS6TiIGAbBI/UNhBHprpkPI/AAAAAAAAAiQ/dt7cxyCK5b0/s1600/07.ErrorMsg.png)](http://1.bp.blogspot.com/-iS6TiIGAbBI/UNhBHprpkPI/AAAAAAAAAiQ/dt7cxyCK5b0/s1600/07.ErrorMsg.png) 在專案上面按右鍵，可以選擇設定[![](http://1.bp.blogspot.com/-xNiffoKWSq8/UNhBIXrQ8uI/AAAAAAAAAiY/OnDUuiUbrAI/s1600/08.Setting.png)](http://1.bp.blogspot.com/-xNiffoKWSq8/UNhBIXrQ8uI/AAAAAAAAAiY/OnDUuiUbrAI/s1600/08.Setting.png) 顯示的設定介面[![](http://2.bp.blogspot.com/-EaQfSztjdkE/UNhBJPQvZuI/AAAAAAAAAig/rwnc9ZGH9Jg/s1600/09.SettingUI.png)](http://2.bp.blogspot.com/-EaQfSztjdkE/UNhBJPQvZuI/AAAAAAAAAig/rwnc9ZGH9Jg/s1600/09.SettingUI.png) 專案下就會出現一個StyleCo的檔案，裡面就是剛設定的值  [!</description>
    </item>
    
    <item>
      <title>continuous integration (CI) server:TeamCity 學習筆記</title>
      <link>http://example.org/posts/2012/12/continuous-integration-ci-server-teamcity-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sat, 01 Dec 2012 14:55:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/continuous-integration-ci-server-teamcity-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>1. 安裝continuous integration (CI) server:TeamCity http://blog.developer.idv.tw/2012/11/teamcity.html
2. TeamCity Migrate To SQL Server http://blog.developer.idv.tw/2012/11/teamcity-migrate-to-sql-server.html
3. TeamCity 設定專案 http://blog.developer.idv.tw/2012/11/teamcity_13.html
4. TeamCity 建置前先還原NuGet套件 http://blog.developer.idv.tw/2012/11/teamcity-nuget.html
5. TeamCity 建置後打包和發佈套件 http://blog.developer.idv.tw/2012/11/teamcity_6277.html
6. TeamCity 改用網域帳號LDAP登入 http://blog.developer.idv.tw/2012/11/teamcity-ldap.html
7. TeamCity 安裝BuildAgent http://blog.developer.idv.tw/2012/11/teamcity-buildagent.html
8. TeamCity刪除特定的Nuget Package http://blog.developer.idv.tw/2013/10/teamcity-nuget-package.html
9. TeamCity整合FxCop報表 http://blog.developer.idv.tw/2014/04/teamcityfxcop.html
10. TeamCity整合Code Coverage報表 http://blog.developer.idv.tw/2014/04/teamcitycode-coverage.html
11.TeamCity整合Source Monitor報表 http://blog.developer.idv.tw/2014/04/teamcitysource-monitor.html
12. TeamCity 整合 StyleCop http://blog.developer.idv.tw/2014/06/teamcity-stylecop.html
13. TeamCity 安裝 Octopus Deploy Integration 套件 http://blog.developer.idv.tw/2014/09/teamcity-octopus-deploy-integration.html
14. TeamCity 打包 Octopus 部署套件 http://blog.developer.idv.tw/2014/09/teamcity-octopack.html
15. TeamCity 發行 Octopus 部署套件 http://blog.</description>
    </item>
    
    <item>
      <title>自動化佈署工具Octopus學習筆記</title>
      <link>http://example.org/posts/2012/12/%E8%87%AA%E5%8B%95%E5%8C%96%E4%BD%88%E7%BD%B2%E5%B7%A5%E5%85%B7octopus%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sat, 01 Dec 2012 14:32:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/%E8%87%AA%E5%8B%95%E5%8C%96%E4%BD%88%E7%BD%B2%E5%B7%A5%E5%85%B7octopus%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>1. 安裝自動佈署工具Octopus http://blog.developer.idv.tw/2012/11/octopus.html
2. 安裝Octopus Tentacle http://blog.developer.idv.tw/2012/11/octopus-tentacle.html
3. Octopus打包網站專案 http://blog.developer.idv.tw/2012/11/octopus_5.html
4. Octopus部署專案 http://blog.developer.idv.tw/2012/11/octopus_3840.html
5. Octopus XML設定檔轉換和替代變數 http://blog.developer.idv.tw/2012/11/octopus-xml.html
6. NuGet 套件超過30MB的問題 http://blog.developer.idv.tw/2012/11/nuget-30mb.html
7. Windows平台的軟體套件管理:Chocolatey http://blog.developer.idv.tw/2012/11/windowschocolatey.html
8. 利用OctoPack套件打包Web專案 http://blog.developer.idv.tw/2014/09/octopackweb.html</description>
    </item>
    
    <item>
      <title>NuGet 學習筆記</title>
      <link>http://example.org/posts/2012/12/nuget-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sat, 01 Dec 2012 09:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/12/nuget-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid>
      <description>1. 安裝NuGet套件管理工具 http://blog.developer.idv.tw/2012/10/nuget.html
2. 使用NuGet安裝、移除、更新套件 http://blog.developer.idv.tw/2012/10/nuget_12.html
3. 架設Nuget.Server http://blog.developer.idv.tw/2012/10/nugetserver.html
4. 架設SymbolSource.Server http://blog.developer.idv.tw/2012/10/symbolsourceserver.html
5. 建立NuGet套件 http://blog.developer.idv.tw/2012/10/nuget_21.html
6. NuGet編譯後自動發佈套件 http://blog.developer.idv.tw/2012/10/nuget_5451.html
7. NuGet的Cofing設定檔和Source Code轉換 http://blog.developer.idv.tw/2012/11/nugetcofingsource-code.html
8. NuGet Spec格式 http://blog.developer.idv.tw/2012/11/nuget-spec.html
9. Nuget 版本控制 http://blog.developer.idv.tw/2012/11/nuget.html 參考資料
10. NuGet Multiple Framework 建置 http://blog.developer.idv.tw/2013/12/nuget-multiple-framework.html
NuGetPro  NuGet Gallery NuGet Doc</description>
    </item>
    
    <item>
      <title>TeamCity 安裝BuildAgent</title>
      <link>http://example.org/posts/2012/11/teamcity-%E5%AE%89%E8%A3%9Dbuildagent/</link>
      <pubDate>Thu, 29 Nov 2012 22:46:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-%E5%AE%89%E8%A3%9Dbuildagent/</guid>
      <description>首先下載BuildAgent ](http://1.bp.blogspot.com/-ljIYNJqcFMA/ULd0mqvusZI/AAAAAAAAAgU/rhd3IZP6gIA/s1600/01.Download.png)
把安裝程式傳送到目標電腦後，一直按下一步安裝就可以了 ](http://3.bp.blogspot.com/-Nl-fVttlNvY/ULd01UChNnI/AAAAAAAAAgc/uCdjsRJa3Q0/s1600/02.Install.png)
安裝好後，到BuildAgent下面的conf資料夾，找到buildAgent.properties設定檔 ](http://2.bp.blogspot.com/-DlsAiWRF11g/ULd05S1cHrI/AAAAAAAAAgk/qyERkuG3M3A/s1600/03.Conf.png)
確認一下ServerURL是否正確，要注意用反斜線來表示的跳脫字元 順利連線之後，約1~2分鐘，最下面就會出現authorizationToken ](http://1.bp.blogspot.com/-f_JZU5qJLdI/ULd0-Dch_OI/AAAAAAAAAgs/tH_uctbiWLU/s1600/04.UnAuthorized.png)
登入TeamCity，也會看到未授權的記錄，把剛那組授權碼輸入就行了 ](http://1.bp.blogspot.com/-ErLooHee9vA/ULd1CY7_XvI/AAAAAAAAAg0/ku4uJzh7nVQ/s1600/05.Authorized.png)
等待一陣子，Connected就會有剛安裝的BuildAgent了 ](http://1.bp.blogspot.com/-BpS-6DA0Di8/ULd1FrO0EzI/AAAAAAAAAg8/OSZQBP1KXDw/s1600/06.Connect.png)</description>
    </item>
    
    <item>
      <title>TeamCity 改用網域帳號LDAP登入</title>
      <link>http://example.org/posts/2012/11/teamcity-%E6%94%B9%E7%94%A8%E7%B6%B2%E5%9F%9F%E5%B8%B3%E8%99%9Fldap%E7%99%BB%E5%85%A5/</link>
      <pubDate>Thu, 29 Nov 2012 22:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-%E6%94%B9%E7%94%A8%E7%B6%B2%E5%9F%9F%E5%B8%B3%E8%99%9Fldap%E7%99%BB%E5%85%A5/</guid>
      <description>如果開發環境中有網域管理的話，可以把登入模式改LDAP模組登入 打開C:\ProgramData\JetBrains\TeamCity\config\main-config.xml ](http://1.bp.blogspot.com/-LkzYbvwCZuw/ULdqGx9BwaI/AAAAAAAAAfQ/6CW0ZAsBGI8/s1600/01.MainConfig.png)
裡面的auth-type節點中，預設會是DefaultLoginModule &amp;lt;login-module class=&amp;#34;jetbrains.buildServer.serverSide.impl.auth.DefaultLoginModule&amp;#34; /&amp;gt; 將模組改成LDAPLoginModule就行了 &amp;lt;login-module class=&amp;#34;jetbrains.buildServer.serverSide.impl.auth.LDAPLoginModule&amp;#34; /&amp;gt; 再來是設定LDAP的環境參數，在config資料夾中，有一個ldap-config.properties.dist的範本檔 ](http://4.bp.blogspot.com/-WMSkZa1XkIk/ULdojCaepFI/AAAAAAAAAfI/vMVyOCm631c/s1600/ldapConfig.png)
複制成ldap-config.properties這個檔案，再用文字編輯器打開來修改，主要有以下幾個項目 把example換成自已的網域名稱 #設定AD的位置 java.naming.provider.url=ldap://dc.example.com:389/DC=example,DC=com #設定登入的時後，帳號格式不用包含\或是@ teamcity.auth.loginFilter=[^/\\\\@]+ #配合上一個設定，和AD驗證的時後，送過去的帳號，前面自動補上網域名稱 teamcity.auth.formatDN=example\\$login$  設定這三個項目，其他改用預設值，就可以用網域驗證了 登入後如果要同步帳號資料，可以再多加以下幾個選項  java.naming.security.principal=&amp;lt;username&amp;gt; java.naming.security.credentials=&amp;lt;password&amp;gt; teamcity.users.username=sAMAccountName teamcity.options.users.synchronize=true teamcity.users.filter=(objectClass=user) teamcity.users.property.displayName=displayName teamcity.users.property.email=mail 第一次登入的時後，會需要設定帳號成管理員 ](http://4.bp.blogspot.com/-YeLe1Eu1ow8/ULdoiVM37FI/AAAAAAAAAfA/wpXiVMbloMI/s1600/01.LDAP.png)
如果有問題，可以查一下log ](http://4.bp.blogspot.com/-msOoL42fhGg/ULdri4HdINI/AAAAAAAAAfY/njs3tVOcjv8/s1600/02.log.png)
參考資料  Typical LDAP Configurations LDAP Integration How To Set Up Secure LDAP Authentication with TeamCity  </description>
    </item>
    
    <item>
      <title>TeamCity 建置後打包和發佈套件</title>
      <link>http://example.org/posts/2012/11/teamcity-%E5%BB%BA%E7%BD%AE%E5%BE%8C%E6%89%93%E5%8C%85%E5%92%8C%E7%99%BC%E4%BD%88%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Tue, 13 Nov 2012 23:04:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-%E5%BB%BA%E7%BD%AE%E5%BE%8C%E6%89%93%E5%8C%85%E5%92%8C%E7%99%BC%E4%BD%88%E5%A5%97%E4%BB%B6/</guid>
      <description>前言 接下來按照打包的方式來作業，新增一個Build Step為NuGetPack 選擇NuGet執行檔的版本，再選擇專案檔的路徑 Version是建置時後的版本，最後是輸出的資料夾 ](http://1.bp.blogspot.com/-Pyj4DdHcPGQ/UKJg1gT5ksI/AAAAAAAAAdI/iXtQOOhP51c/s1600/01.NugetPack.png)
因為增加了套件輸出的路徑，所以回到General Settings 在Artifact paths也增加套件輸出的路徑 ](http://1.bp.blogspot.com/-QxFU1xxqx04/UKJhPtSoFqI/AAAAAAAAAdQ/9s6gOq3iZfM/s1600/02.ArtifactPaths.png)
設定完成後再次建置，建置成功就會在Artifacts得到套件 ](http://3.bp.blogspot.com/-u8ub2aXW8pc/UKJhQFcK60I/AAAAAAAAAdY/GulIFxNyNPE/s1600/03.BuildSuccess.png)
接下來再新增一個Build Step，選擇NuGetPublish 選擇NuGet執行檔的版本，輸入NuGet Server的網址和api key 再選擇要上傳的套件，下次建置的時後，就會一起發佈出去了 ](http://2.bp.blogspot.com/-Axp5HdttthA/UKJhQ3jst5I/AAAAAAAAAdg/hrhTgMC4uzU/s1600/04.Publish.png)</description>
    </item>
    
    <item>
      <title>TeamCity 建置前先還原NuGet套件</title>
      <link>http://example.org/posts/2012/11/teamcity-%E5%BB%BA%E7%BD%AE%E5%89%8D%E5%85%88%E9%82%84%E5%8E%9Fnuget%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Tue, 13 Nov 2012 22:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-%E5%BB%BA%E7%BD%AE%E5%89%8D%E5%85%88%E9%82%84%E5%8E%9Fnuget%E5%A5%97%E4%BB%B6/</guid>
      <description>當專案開始使用NuGet來管理套件時，預設套件會安裝在方案檔所在目錄的packages資料夾下 ](http://1.bp.blogspot.com/-Fb-XAssHj4w/UKJTn5RDetI/AAAAAAAAAbc/0mO3150CpWQ/s1600/01.Packages.png)
一般不會把這個套件這個資料夾加入原始檔控制以節省空間，而會在Vistual Studio中啟用套件還原 在方案檔上按右鍵就會看到這個選項了 ](http://1.bp.blogspot.com/-dyZVt873N58/UKJTobl3ClI/AAAAAAAAAbk/NhajJ3Li0bg/s1600/02.PackageRestore.png)
按下後會有一個提示訊息，主要是會新增一個方案資料夾的提示 ](http://2.bp.blogspot.com/-6K_7ZRaH-U0/UKJTo96X_eI/AAAAAAAAAbs/F67Lyeec0TM/s1600/03.AlertMsg.png)
按下是(Y)之前，就會多出一個.nuget的方案資料夾 ](http://4.bp.blogspot.com/-y91qsRmScLI/UKJTpo9UQUI/AAAAAAAAAb0/6o_pDPgV6-A/s1600/04.NuGetDir.png)
還要允許NuGet在建置期間下載遺漏的套件 ](http://1.bp.blogspot.com/-HcrmcbS0_2c/UKJTqBojMQI/AAAAAAAAAb8/twadrgujphw/s1600/05.AllowDownload.png)
把.nuget這個方案資料夾加入Source Control ](http://4.bp.blogspot.com/-rGNsuEcMug8/UKJTqeyIARI/AAAAAAAAAcE/X_gwllNs14o/s1600/06.NuGetSVNDir.png)
先在TeamCity中安裝NuGet Command Line工具 ](http://2.bp.blogspot.com/-D5zrJvyfRKE/UKJTq18pInI/AAAAAAAAAcM/ikPaGWFbePw/s1600/07.AddNuGetExe.png)
新增一個Build Step，選擇NuGet Installer 選擇NuGet的版本，和輸入NuGet的來源 如果使用的套件是從NuGet官網來的，那直接保持空白 如果會使用其他來源的套件，就要在此輸入網址 再輸入方案檔的相對路徑就行了 ](http://1.bp.blogspot.com/--zcz92kuTII/UKJTrZfOVWI/AAAAAAAAAcU/VjDyBdBpBLU/s1600/08.PreInstall.png)
再來要把NuGet Install這個動作，放到編譯之前 所以按一下Reorder build steps，然後用拖曳的方式調整步驟後按Apply ](http://2.bp.blogspot.com/-3BcMkxmRzyc/UKJTsEam9hI/AAAAAAAAAcc/Uj9RBGmTYP8/s1600/09.ReOrderStep.png)
再次建置就成功了 ](http://3.bp.blogspot.com/-hTTzcZcJpos/UKJTtmr7FLI/AAAAAAAAAck/MQKYRgqxUJ0/s1600/10.BuildSuccess.png)</description>
    </item>
    
    <item>
      <title>TeamCity 設定專案</title>
      <link>http://example.org/posts/2012/11/teamcity-%E8%A8%AD%E5%AE%9A%E5%B0%88%E6%A1%88/</link>
      <pubDate>Tue, 13 Nov 2012 20:50:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-%E8%A8%AD%E5%AE%9A%E5%B0%88%E6%A1%88/</guid>
      <description>接下來開始設定專案，首先建立一個專案 ](http://2.bp.blogspot.com/-6Z--lc4grZs/UKI-cBf9wrI/AAAAAAAAAZQ/IxPCZASp194/s1600/01.DefaultPage.png)
輸入專案名稱和說明後，按下Create就行了 ](http://2.bp.blogspot.com/-RZqV75lOXLw/UKI-c1lNXgI/AAAAAAAAAZY/xBnae98EbRs/s1600/02.CreateProject.png)
接下來要開始設定Build Configuration，免費版只能建20個 ](http://3.bp.blogspot.com/-cgPFA7QHV_Q/UKI-dRMINHI/AAAAAAAAAZg/_HNZLVsbKBY/s1600/03.CreateProjectSuccess.png)
第一步是設定一個名稱，這裡以Release Build為例 Build number format是自動版號的格式，除了每次建置會自動加1之外 因為接下來的版本控制會以SVN為例，所以加入了SVN的版號%build.vcs.number% Artifact Paths是最後產出檔案的路徑，先指向到Publish這個資料夾下面的zip檔 ](http://1.bp.blogspot.com/-0VQnfAkDWuM/UKJkDkGNBPI/AAAAAAAAAeE/Z_y0L8qvUb4/s1600/04.GeneralSetting.png)
第二步是設定一個版本控制來取得原始碼 ](http://4.bp.blogspot.com/-UkgcJOZkncQ/UKI-emmKCZI/AAAAAAAAAZw/dr9l8W2sPHQ/s1600/05.AddSVN.png)
下拉選單中有大部份Source Control的類型，這邊以SVN為例子 主要就是輸入路徑和帳號密碼就行了 ](http://1.bp.blogspot.com/-jJ6LldtRrGY/UKI-fGKSBpI/AAAAAAAAAZ4/O2YI_fnIPE4/s1600/06.ConfigSVN.png)
Labeling Rules這邊設定的是從trunk分支到tags的動作，等下還會有更詳細的設定 Test Connection可以測試一下是否可以連線，沒問題的話就按下Save按鈕 ](http://2.bp.blogspot.com/-6GoA44nrcIU/UKI-f91HcEI/AAAAAAAAAaA/spum8XecZxc/s1600/07.LabelingRule.png)
完成了一個VCS root的設定，順便編輯一下Checkout Rules 最簡單的用法就是每次只取出trunk的內容，並當成根目錄，就不會取出trunk和branches的資料了 ](http://3.bp.blogspot.com/-lhIOzEPYwGo/UKI-gphZzGI/AAAAAAAAAaI/cLETpRhADCE/s1600/08.AddCheckOutRule.png)
接下來還有更詳細的設定 Clean all files before build是用來選擇是否在每次編譯之前都先清空svn的資料，重新下載 VCS Labeling mode是用來選擇，是否要在建置之後，來執行剛設定Labeling的動作 ](http://3.bp.blogspot.com/-QF04KvH5GD8/UKI-hhYbqxI/AAAAAAAAAaQ/QHHSjvDHF0U/s1600/09.AddCheckOutRuleOK.png)
Build Step是用來設定建置方式，這邊選擇用方案檔的方式來建置專案 因為用到了Package這個target來封裝專案，所以需要選擇專案檔而不是方案檔 希望建置後封裝的檔案可以產出在前面設定Artifact Paths的路徑中，所以額外設了一個參數 如果一開始選擇用MSBuild來建置的話，參數的設定會更靈活 ](http://4.bp.blogspot.com/-HrWNHxrJr4k/UKJkQJN45nI/AAAAAAAAAeM/HBtGCa28xhs/s1600/10.SlnSetting.png) 
到這裡已經設定好專案了，如果日後需要修改設定，可以直接按右邊的某一個步驟來調整 先按一下右上角的Run來跑跑看目前的設定正不正確，再按一下Build Configuration Home來看結果 ](http://1.bp.blogspot.com/-qC2tZAjzWIk/UKI-i2KJkpI/AAAAAAAAAag/kuJ0MGuRkK4/s1600/11.ConfigOK.png)
可以看到這個專案的編譯記錄，目前編譯的版本，和SVN的送交記錄等等訊息 ](http://4.bp.blogspot.com/-32zzSpUlyws/UKJkcEg2LQI/AAAAAAAAAeU/W2FsTKGR3bQ/s1600/12.Run.png) 
編譯成功，也正確產出檔案的話，在Artifacts會有檔案下載的連結 ](http://3.bp.blogspot.com/-pFj39zNIxV0/UKJkgEv6tRI/AAAAAAAAAec/Z_VC5mEObtQ/s1600/13.Artifacts.png) 
參考資料  Continuous Integration &amp;amp; Build Server – TeamCity (二) 設定專案 Continuous builds with TeamCity   </description>
    </item>
    
    <item>
      <title>TeamCity Migrate To SQL Server</title>
      <link>http://example.org/posts/2012/11/teamcity-migrate-to-sql-server/</link>
      <pubDate>Thu, 08 Nov 2012 20:57:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/teamcity-migrate-to-sql-server/</guid>
      <description>首先淮備好資料庫，例如一個名稱為TeamCity的DB ](http://2.bp.blogspot.com/-vkJGa93mgS8/UJud6ZDutdI/AAAAAAAAAXA/efJdpGCptNE/s1600/01.NewDB.png)
建一個登入帳號，這裡帳號用bar，密碼用foo當範例 ](http://1.bp.blogspot.com/-WRh2WZcEgNM/UJud7G_MGSI/AAAAAAAAAXI/hipvEg4ZmNY/s1600/02.NewUser.png)
給予db_owner的權限 ](http://3.bp.blogspot.com/-1mkS-zvnKaw/UJud7voFGwI/AAAAAAAAAXQ/IbcM34MqW_g/s1600/03.Owner.png)
再來下載Database Driver，官網的文件中有介紹兩種Driver 但我試了半天都不行用，後來爬文找到更改連線字串的寫法就可以了 所以在這裡以Microsoft JDBC Driver來介紹 先去Microsoft Download Center 下載Driver ](http://1.bp.blogspot.com/-YNHb9XrRv9k/UJud8PN0l0I/AAAAAAAAAXY/-w8b5MtUqSk/s1600/04.Download.png)
下載後解壓縮，把sqljdbc4.jar複製到這個神秘的地方 ](http://3.bp.blogspot.com/-whQq072tXfw/UJud8vAsOII/AAAAAAAAAXg/QhDweQyvu08/s1600/05.LibDir.png)
再來編輯database.mssql.properties.dist這一個範本檔 ](http://1.bp.blogspot.com/-8eIjxlciydI/UJud9RDp2bI/AAAAAAAAAXo/LzrW7FDwNZA/s1600/06.DatabaseTemplate.png)
官網的文件是把帳密打在後面，但試了半天就是不行 爬文的結果把帳密改寫在連線字串中就成功了，JAVA真是一種神秘的語言 ](http://2.bp.blogspot.com/-k2IyAF5GUFk/UJud91XM0HI/AAAAAAAAAXw/l4Jxv5E89a8/s1600/07.Config.png)
TeamCity升級到7.1.2後，JDBC的設定不能用了，只好再試了一下另一種連線方式jtds-1.2.2 首先到此下載，jTDS - SQL Server and Sybase JDBC driver 我下載最新的版本，會有java.lang.UnsupportedClassVersionError的錯誤，換成1.2.2就好了 一樣把jtds-1.2.2.jar複製到lib/jdbc的資料夾 連線字串就可以照著範本的格式打了
connectionUrl=jdbc:jtds:sqlserver://&amp;lt;hostname&amp;gt;:1433/&amp;lt;dbname&amp;gt; connectionProperties.user=&amp;lt;username&amp;gt; connectionProperties.password=&amp;lt;password&amp;gt; 參考資料  Migrating to an External Database  到此淮備工作就完成了，要開始轉移資料之前，要先把服務停下來 ](http://1.bp.blogspot.com/-ZO21PE08jw8/UJud-TBJl6I/AAAAAAAAAX4/3I9MMVD7KMw/s1600/08.StopService.png)
然後打開一個cmd，輸入以下指令 set path=%path%;c:\TeamCity\jre\bin 這行是和設定JAVA_HOME這個神秘的全域變數同樣的效果 用來把Java Run Time的路徑包含進系統的path 因為我沒安裝JAVA環境，所以要指向到TeamCity自帶的jre路徑 但如果在執行過程中會發生無法開啟jvm.cfg這個錯誤訊息的話 把System32下面的Java.exe、Javaw.exe、Javaws.exe都砍掉就行了
maintainDB.cmd migrate -T c:\ProgramData\JetBrains\TeamCity\config\database.mssql.properties.dist maintainDB.cmd是TeamCity自帶的資料庫維護工具，可以用來備份、還原、和搬移資料 這邊用的是migrate，把剛設定資料庫的設定檔用-T參考傳進去就行了 ](http://3.bp.blogspot.com/-6skME4p2u5U/UJud-95UhjI/AAAAAAAAAYA/L0Lezi6GN14/s1600/09.Cmd.png)
順利的話，就會開始搬移資料進SQL Server，並且也會把剛剛的資料庫連線範本 複制成正式用的檔案database.properties ](http://3.bp.blogspot.com/-Y76ZKXqUFmY/UJumBkLtVVI/AAAAAAAAAYw/56KfkQqXhIQ/s1600/10.Success.png)</description>
    </item>
    
    <item>
      <title>安裝continuous integration (CI) server:TeamCity</title>
      <link>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9Dcontinuous-integration-ci-server-teamcity/</link>
      <pubDate>Wed, 07 Nov 2012 19:59:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9Dcontinuous-integration-ci-server-teamcity/</guid>
      <description>首先到TeamCity的官網下載合適平台的安裝檔，這裡以Windows平台為例 ](http://2.bp.blogspot.com/-AXLFKiOYCwo/UJpLk6nWQEI/AAAAAAAAAUI/Pq6nhLyFBmo/s1600/01.Download.png)
接下來一直按下一步就行了 ](http://4.bp.blogspot.com/-bIHMy3RoffA/UJpLlYIgjwI/AAAAAAAAAUQ/qYC73ihpSTc/s1600/02.Install.png)
安裝的路徑 ](http://4.bp.blogspot.com/--R9vNZrd0c4/UJpQ16_40uI/AAAAAAAAAWY/Od-LiFqEP-U/s1600/03.InstallPath.png)
安裝的項目，可單獨選擇Build Agent或Server ](http://3.bp.blogspot.com/-PXWB1fViYNo/UJpPYyre8vI/AAAAAAAAAWI/YJJCEISpev8/s1600/04.InstallItem.png)
設定檔的路徑 ](http://1.bp.blogspot.com/-xclD7A4hI5s/UJpPZahympI/AAAAAAAAAWQ/CVvhaGMYtts/s1600/05.AppPath.png)
如果安裝的機器上面已經有Web伺服器的話，預設的Port就會改用8080 ](http://1.bp.blogspot.com/-hGBViNi4gSA/UJpLmB-UDII/AAAAAAAAAUY/0isL_frK7Uw/s1600/03.Port.png)
設定BuildAgent的環境，基本上會自動偵測，記住網域，按下Save就行了 ](http://2.bp.blogspot.com/-whsaUg0yWpY/UJpRYUAHXfI/AAAAAAAAAWg/Vu7tsT0mzSk/s1600/07.Config.png)
選擇TeamCity Server Service要用的帳號 ](http://3.bp.blogspot.com/-zjQfaovl5qs/UJpLnMGHDNI/AAAAAAAAAUo/irM35PeE5fs/s1600/05.Account.png)
選擇TeamCity Agent Service要用的帳號 ](http://3.bp.blogspot.com/-oNK5Kj7vcuY/UJpLn2N21UI/AAAAAAAAAUw/HEisyuMEwII/s1600/06.AgentAccount.png)
啟動服務 ](http://1.bp.blogspot.com/-jepVzX5K58E/UJpLojQtS0I/AAAAAAAAAU4/U9C7b4ee1co/s1600/07.StartService.png)
到此安裝完成，按下Finish開始設定頁面 ](http://1.bp.blogspot.com/-HtFXZHUHMQ8/UJpLpZd5AvI/AAAAAAAAAVA/G6P77ikRea0/s1600/08.ConfigOK.png)
第一次執行時的頁面，按下Proceed按鈕執行初始化動作 ](http://4.bp.blogspot.com/-g3yN6FR9TjE/UJpLp9Ow6RI/AAAAAAAAAVI/RBxGhby_zSE/s1600/09.FirstStart.png)
等待初始化完成後，會跳出使用者授權頁面 ](http://2.bp.blogspot.com/-L5ByFtFy_Y4/UJpLquKDRfI/AAAAAAAAAVQ/5DI2jjLBMy4/s1600/10.Authority.png)
輸入一組管理用的帳號 ](http://3.bp.blogspot.com/-Ayhsa_UAN48/UJpLrb1JDoI/AAAAAAAAAVY/Nl-NBuv3UlY/s1600/11.AdminAccount.png)
登入成功，接下來就可以開始來設定專案了 ](http://3.bp.blogspot.com/-MkG9bg7OfcM/UJpLrzh3SDI/AAAAAAAAAVg/XVqnth93x3s/s1600/12.InstallOK.png)
參考資料  TeamCity Edition Comparison Matrix  </description>
    </item>
    
    <item>
      <title>Windows平台的軟體套件管理:Chocolatey</title>
      <link>http://example.org/posts/2012/11/windows%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BB%9F%E9%AB%94%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86-chocolatey/</link>
      <pubDate>Tue, 06 Nov 2012 13:56:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/windows%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BB%9F%E9%AB%94%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86-chocolatey/</guid>
      <description>先到官網逛一下，安裝的方式很簡單，打開一個cmd，切到C:\，直接在官網上的那一串複製貼上就好了
C:\@powershell -NoProfile -ExecutionPolicy unrestricted -Command &amp;#34;iex ((new-object net.webclient .DownloadString(&amp;#39;http://bit.ly/psChocInstall&amp;#39;))&amp;#34; &amp;amp;amp;&amp;amp;amp; SET PATH=%PATH%;%systemdrive%\chocolatey\bin 如果有Vistual Studio，也安裝Nuget套件的話，也可以用命令列安裝chocolatey套件Install-Package chocolatey
如果有nuget命令列工具的話，直接安裝也可以nuget install chocolatey
安裝好之後，可在官網搜尋目前有的套件，常見的像``tortoisesvn、Radmin.Viewer、7zip，只要執行cinst 套件名稱就可以安裝了，還滿方便的</description>
    </item>
    
    <item>
      <title>NuGet 套件超過30MB的問題</title>
      <link>http://example.org/posts/2012/11/nuget-%E5%A5%97%E4%BB%B6%E8%B6%85%E9%81%8E30mb%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Tue, 06 Nov 2012 13:28:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/nuget-%E5%A5%97%E4%BB%B6%E8%B6%85%E9%81%8E30mb%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>前台 開始打包Web套件之後，套件的檔案很快就超過了30MB，使用NuGet Push的時後，一直顯示404找不到網頁，再到IIS查Log，回應碼是404.13，再Google一下，原來IIS7預設的上傳是30MB， 所以把這個值設大一點就好了，例如加大到300MB
&amp;lt;system.web&amp;gt; &amp;lt;httpRuntime maxRequestLength=”31457280” /&amp;gt; &amp;lt;/system.web&amp;gt; 參考資料  30MB Default Maximum Nuget Package Size  404.13 Not Found – Uploading Large Files with Integrated Pipeline!   </description>
    </item>
    
    <item>
      <title>Octopus XML設定檔轉換和替代變數</title>
      <link>http://example.org/posts/2012/11/octopus-xml%E8%A8%AD%E5%AE%9A%E6%AA%94%E8%BD%89%E6%8F%9B%E5%92%8C%E6%9B%BF%E4%BB%A3%E8%AE%8A%E6%95%B8/</link>
      <pubDate>Tue, 06 Nov 2012 10:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/octopus-xml%E8%A8%AD%E5%AE%9A%E6%AA%94%E8%BD%89%E6%8F%9B%E5%92%8C%E6%9B%BF%E4%BB%A3%E8%AE%8A%E6%95%B8/</guid>
      <description>前言 專案佈署的過程中，不同環境的設定檔會有所不同 web.config使用的還是XDT Transform 只要檔名和環境別對的起來，就會自動轉換，例如UAT環境 佈署的時後，只要有web.uat.config這個檔案 就會自動轉換原來的web.config 除此之外，Octopus還有一些預先定義好的變數，可以在Variables裡面設定 ](http://3.bp.blogspot.com/-y3E2E-vvY3k/UJh56tJ6rVI/AAAAAAAAATo/cx2IDuw-4NA/s1600/01.+Variables.png)
OctopusOriginalPackageDirectoryPath 這個變數用來指定套件佈署時的原來位置，例如 C:\Apps\Prod\MyApp\1.0.0
OctopusPackageDirectoryPath 這個變數用來自訂套件要安裝的位置，例如D:\WebSite\MyApp
OctopusWebSiteName 這個變數用來自訂站台的名稱，如不指定，則是以套件的名稱來對應IIS的設定
更多詳細的設定，可以參考官網的文件
參考資料  Variables XML Configuration Files  </description>
    </item>
    
    <item>
      <title>Octopus部署專案</title>
      <link>http://example.org/posts/2012/11/octopus%E9%83%A8%E7%BD%B2%E5%B0%88%E6%A1%88/</link>
      <pubDate>Mon, 05 Nov 2012 21:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/octopus%E9%83%A8%E7%BD%B2%E5%B0%88%E6%A1%88/</guid>
      <description>首先設定一下NuGet套件的來源，在設定中選擇NuGet，再點擊Add NuGet feed ](http://2.bp.blogspot.com/-eB-5_jr8Tco/UJe-gvfxniI/AAAAAAAAARs/Uf5vQaP2B9k/s1600/01.AddNuGetFeed.png)
輸入名稱和NuGet Server所在位置，如有需要授權就再輸入帳密，然後按下新增 ](http://3.bp.blogspot.com/-p-KdXHP_KvA/UJe-hAxku4I/AAAAAAAAAR0/_NYIRdWHbks/s1600/02.SaveNuGetFeed.png)
接下來先建立專案群組 ](http://2.bp.blogspot.com/-_xbwdU3aDvA/UJe-hmD6DmI/AAAAAAAAAR8/E_rbSdD6ous/s1600/03.ProjGroup.png)
再來選擇建立專案 ](http://2.bp.blogspot.com/-4gsASjDPLTU/UJe-iecxQoI/AAAAAAAAASE/qEAzaQGrxGg/s1600/04.CreateProj.png)
輸入專案資訊 ](http://4.bp.blogspot.com/-ZAwObqAo_KM/UJe-ivPrxWI/AAAAAAAAASM/OtkrLc6EIzc/s1600/05.AddProj.png)
新增完成，點擊專案名稱來設定部署 ](http://3.bp.blogspot.com/-OUKY0O9Ysoo/UJe-jGQvxYI/AAAAAAAAASU/RGDhTl0smos/s1600/06.AddProjSuccess.png)
選擇Steps，再點擊Add package step ](http://2.bp.blogspot.com/-gRHt3_sxa-0/UJe-j1SAj4I/AAAAAAAAASc/pjn3CciupCU/s1600/07.Steps.png)
輸入套件資料，如果專案有多個套件，可重覆此步驟 ](http://4.bp.blogspot.com/-aau7ZAIqhzo/UJe-kJ3IBsI/AAAAAAAAASk/RJ22IWIbMug/s1600/08.AddStep.png)
接下來建立發佈版本 ](http://1.bp.blogspot.com/-Q3sIi82aRWg/UJe-k7H2nEI/AAAAAAAAASs/FB5PLU39KK4/s1600/09.CreateRelease.png)
輸入版本資訊 ](http://4.bp.blogspot.com/-7hmX0qXpuP8/UJe-lqezpeI/AAAAAAAAAS0/s1zlTX_NIps/s1600/10.AddPack.png)
發佈版本資訊 ](http://3.bp.blogspot.com/-7NdYKSQqG9s/UJe-mEzRh5I/AAAAAAAAAS8/_7dyWOdaW9Q/s1600/11.Deploy.png)
執行發佈版本 ](http://2.bp.blogspot.com/-TAKCxk9v-tA/UJe-m1BFQCI/AAAAAAAAATE/3RJ0pHpepHQ/s1600/12.DeployPackage.png)
發佈成功 ](http://1.bp.blogspot.com/-TDX71V5yrrY/UJe-nIkvpYI/AAAAAAAAATM/du0maFJdsSs/s1600/13.DeploySuccess.png)</description>
    </item>
    
    <item>
      <title>Octopus打包網站專案</title>
      <link>http://example.org/posts/2012/11/octopus%E6%89%93%E5%8C%85%E7%B6%B2%E7%AB%99%E5%B0%88%E6%A1%88/</link>
      <pubDate>Mon, 05 Nov 2012 20:47:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/octopus%E6%89%93%E5%8C%85%E7%B6%B2%E7%AB%99%E5%B0%88%E6%A1%88/</guid>
      <description>先建一個HelloWorld的空白站台 ](http://1.bp.blogspot.com/-q-PoZn-V6so/UJey4s6A-gI/AAAAAAAAAQ4/VkzzC4SN6sQ/s1600/01.NewProject.png)
新增一個首頁，輸出Hello和目前時間 using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; namespace HelloWorld { public partial class _default : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { Response.Write(“hello:” + DateTime.Now.ToString()); } } } 接下來用NuGet安裝OctoPack套件 ](http://3.bp.blogspot.com/-JZBnLxWF4Fg/UJey5I_yqbI/AAAAAAAAARA/DPpwKjhGQAs/s1600/02.OctoPack.png)
新增一個nuspec檔案，但所有佔位符號都要手動輸入 &amp;lt;?xml version=”1.0”?&amp;gt; &amp;lt;package &amp;gt; &amp;lt;metadata&amp;gt; &amp;lt;id&amp;gt;HelloWorld&amp;lt;/id&amp;gt; &amp;lt;version&amp;gt;1.0.0.0&amp;lt;/version&amp;gt; &amp;lt;title&amp;gt;佈署測試用Package&amp;lt;/title&amp;gt; &amp;lt;authors&amp;gt;Xian&amp;lt;/authors&amp;gt; &amp;lt;owners&amp;gt;Xian&amp;lt;/owners&amp;gt; &amp;lt;licenseUrl&amp;gt;http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/licenseUrl&amp;gt; &amp;lt;projectUrl&amp;gt;http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/projectUrl&amp;gt; &amp;lt;iconUrl&amp;gt;http://ICON_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/iconUrl&amp;gt; &amp;lt;requireLicenseAcceptance&amp;gt;false&amp;lt;/requireLicenseAcceptance&amp;gt; &amp;lt;description&amp;gt;佈署測試用…&amp;lt;/description&amp;gt; &amp;lt;releaseNotes&amp;gt;Summary of changes made in this release of the package.&amp;lt;/releaseNotes&amp;gt; &amp;lt;copyright&amp;gt;Copyright 2012&amp;lt;/copyright&amp;gt; &amp;lt;tags&amp;gt;Tag1 Tag2&amp;lt;/tags&amp;gt; &amp;lt;/metadata&amp;gt; &amp;lt;/package&amp;gt; 選擇Release組態，按下建置 bin資料夾下就可以得到這個網站的套件 ](http://1.</description>
    </item>
    
    <item>
      <title>安裝Octopus Tentacle</title>
      <link>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9Doctopus-tentacle/</link>
      <pubDate>Mon, 05 Nov 2012 20:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9Doctopus-tentacle/</guid>
      <description>首先到官網下載Tentacle安裝程式 ](http://2.bp.blogspot.com/-23up0pJpYA8/UJeslHAt-1I/AAAAAAAAAPk/rNtz5vZ9vI8/s1600/00.Files.png)
一直按下一步就可以完成安裝了 ](http://4.bp.blogspot.com/-iLmkFkUJ7Ss/UJesluMrZmI/AAAAAAAAAPs/XQ__Y070zrw/s1600/01.Install.png)
接下來進入設定畫面，這裡的信任key要從剛安裝的網站上取得 ](http://2.bp.blogspot.com/-2Zn6TeCZlSU/UJesmFKNP1I/AAAAAAAAAP0/YgSc8eNFe5o/s1600/02.Client.png)
先建一個環境出來 ](http://3.bp.blogspot.com/-Jye8t4XHAPk/UJesm4wStcI/AAAAAAAAAP8/QCS7jTpZP34/s1600/03.EnvirAdd.png)
再建一個機器，把Tentacle的Key打上去Thumbprint就是要打到Tentacle去的Key Roles輸入機器的用途，這邊以WebServer為例 ](http://1.bp.blogspot.com/-qErkwlnaUtg/UJesncGhhuI/AAAAAAAAAQE/fCZqO4Ua6u0/s1600/04.AddMachine.png)
再回到Tentacle的設定畫面，這邊是部署過來的資料要存放的地方 ](http://4.bp.blogspot.com/-pKa_a3Nn6qI/UJesn-5iwxI/AAAAAAAAAQM/mn_Bo-idNpI/s1600/05.ClientLocation.png)
Tentacle的Service，按下Install就行了 ](http://3.bp.blogspot.com/-P1ConmMDXMo/UJesoVX8gVI/AAAAAAAAAQU/eHXVH7AnDxI/s1600/06.ClientService.png)
回到網站，按一下Check health，順利的話就會看到剛設定的Machine可以使用了 ](http://1.bp.blogspot.com/-yM3_QMYevIA/UJespGj3ikI/AAAAAAAAAQc/tckJLMtWuJg/s1600/07.OK.png)</description>
    </item>
    
    <item>
      <title>安裝自動佈署工具Octopus</title>
      <link>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9D%E8%87%AA%E5%8B%95%E4%BD%88%E7%BD%B2%E5%B7%A5%E5%85%B7octopus/</link>
      <pubDate>Mon, 05 Nov 2012 19:48:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/%E5%AE%89%E8%A3%9D%E8%87%AA%E5%8B%95%E4%BD%88%E7%BD%B2%E5%B7%A5%E5%85%B7octopus/</guid>
      <description>前言 首先到Octopus官網下載安裝檔 Octopus Install是Server端 Octopus Tentacle Installer是Client端 ](http://1.bp.blogspot.com/-H9qjtO_IV9U/UJemMZ4NxOI/AAAAAAAAAOM/j6zAcX16n6o/s1600/00.Files.png)
先下載Server端，然後一直下一步就可以安裝好了 ](http://4.bp.blogspot.com/-f3MuiPrHB4s/UJemNCMmQPI/AAAAAAAAAOU/q4eG1L3YYHo/s1600/01.install.png)
接下來會進入設定畫面，這邊選擇是否允許自動檢查更新和資料搜集 ](http://3.bp.blogspot.com/-_M8Of2TU_TI/UJemNQ5lMrI/AAAAAAAAAOc/E5rTE3tg61I/s1600/02.config.png)
這邊是資料存放的地方，自行輸入路徑按Save就行了 ](http://4.bp.blogspot.com/-4iTFrbVfLmg/UJemOjEH2kI/AAAAAAAAAOk/QWBc6XcdU8U/s1600/03.Location.png)
這邊是Service安裝，按下Install就行了 ](http://2.bp.blogspot.com/--gWTrNSFGak/UJemPANyFpI/AAAAAAAAAOs/KBMdCGKxpYM/s1600/04.Service.png)
這邊是網站的安裝，按下Create Site就行了 ](http://2.bp.blogspot.com/-CPrX6aLZMbg/UJemP-ZV5XI/AAAAAAAAAO0/bKO4k7-xDGY/s1600/05.Web.png)
IIS中就會出現這個網站 ](http://4.bp.blogspot.com/-Yd13lI2ac34/UJemQaQmfRI/AAAAAAAAAO8/X9YSOI1eYc4/s1600/06.IIS.png)
第一次瀏覽這個網站的時後，會需要輸入管理員的密碼 ](http://3.bp.blogspot.com/-if_hX5Z9Sds/UJemQ4sqtpI/AAAAAAAAAPE/48yKRb2qmOE/s1600/07.DefaultPage.png) 通過密碼複雜度之後，就可以登入網站，Server端就安裝完成了 ](http://2.bp.blogspot.com/-08tk_T_LEkg/UJemRqKOHtI/AAAAAAAAAPM/9HZY8sUbAJY/s1600/08.Login.png)</description>
    </item>
    
    <item>
      <title>Nuget 版本控制</title>
      <link>http://example.org/posts/2012/11/nuget-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Mon, 05 Nov 2012 18:29:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/nuget-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</guid>
      <description>前台 NuGet正式套件的檔名，通常是這樣的格式:[id].[Major].[Minor].[Patch].nupkg ex: MyPackage.1.0.1.nupkg 測試套件的檔名，通常格式為:id.[Major].[Minor].[Patch]-[alpha | beta | rc].nupkg
ex: MyPackage.1.0.1-alpha.nupkg MyPackage.1.0.1-beta.nupkg MyPackage.1.0.1-rc.nupkg
 有相依性的套件，指定的版號格式如下 直接指定版號為最低版號 小括號為不包含 中括號為包含 空白表示最新版號 1.0 = 1.0 ≤ x (,1.0] = x ≤ 1.0 (,1.0) = x &amp;lt; 1.0 [1.0] = x == 1.0 (1.0) = invalid (1.0,) = 1.0 &amp;lt; x (1.0,2.0) = 1.0 &amp;lt; x &amp;lt; 2.0 [1.0,2.0] = 1.0 ≤ x ≤ 2.0 empty = latest version.  參考資料  Versioning  </description>
    </item>
    
    <item>
      <title>NuGet Spec格式</title>
      <link>http://example.org/posts/2012/11/nuget-spec%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Mon, 05 Nov 2012 18:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/nuget-spec%E6%A0%BC%E5%BC%8F/</guid>
      <description>套件的.nuspec檔案，預設是包括這些內容 &amp;lt;?xml version=”1.0”?&amp;gt; &amp;lt;package &amp;gt; &amp;lt;metadata&amp;gt; &amp;lt;id&amp;gt;$id$&amp;lt;/id&amp;gt; &amp;lt;version&amp;gt;$version$&amp;lt;/version&amp;gt; &amp;lt;title&amp;gt;$title$&amp;lt;/title&amp;gt; &amp;lt;authors&amp;gt;$author$&amp;lt;/authors&amp;gt; &amp;lt;owners&amp;gt;$author$&amp;lt;/owners&amp;gt; &amp;lt;licenseUrl&amp;gt;http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/licenseUrl&amp;gt; &amp;lt;projectUrl&amp;gt;http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/projectUrl&amp;gt; &amp;lt;iconUrl&amp;gt;http://ICON_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/iconUrl&amp;gt; &amp;lt;requireLicenseAcceptance&amp;gt;false&amp;lt;/requireLicenseAcceptance&amp;gt; &amp;lt;description&amp;gt;$description$&amp;lt;/description&amp;gt; &amp;lt;releaseNotes&amp;gt;Summary of changes made in this release of the package.&amp;lt;/releaseNotes&amp;gt; &amp;lt;copyright&amp;gt;Copyright 2012&amp;lt;/copyright&amp;gt; &amp;lt;tags&amp;gt;Tag1 Tag2&amp;lt;/tags&amp;gt; &amp;lt;/metadata&amp;gt; &amp;lt;/package&amp;gt;  $id對應的是這個套件的檔名 $version$對應的是AssemblyInfo.cs中的AssemblyVersionAttribute $author$對應的是AssemblyInfo.cs中的AssemblyCompanyAttribute $description$對應的是AssemblyInfo.cs中的AssemblyDescriptionAttribute $title是套件的顯示名稱 requireLicenseAcceptance是安裝的時後要不要跳授權對話方塊 $licenseUrl是使用條款的網址 $projectUrl是專案資訊的網址 $iconUrl是套件icon的網址  除了這幾個用來設定套件資訊的項目之外，還可以在這個檔案中包含相依性 例如要在這個套件中，使用到log4net套件，那只要加一行dependencies資料就行了
&amp;lt;dependencies&amp;gt; &amp;lt;dependency id=”log4net” version=”2.0.0” /&amp;gt; &amp;lt;/dependencies&amp;gt; 除了相依性，還可以指定GAC裡面的Assembly，例如System.ServiceModel
&amp;lt;frameworkAssemblies&amp;gt; &amp;lt;frameworkAssembly assemblyName=”System.ServiceModel” targetFramework=”net40” /&amp;gt; &amp;lt;/frameworkAssemblies&amp;gt; 如果要額外打包檔案的話，就要用files這個tag了 src指定檔案所在的相對路徑，target指定檔案在套件中的位置 也可以萬用字元和exclude來排除特定檔案
&amp;lt;files&amp;gt; &amp;lt;file src=”bin\Debug*.dll” target=”lib” /&amp;gt; &amp;lt;file src=”bin\Debug*.pdb” target=”lib” /&amp;gt; &amp;lt;file src=”tools*\.</description>
    </item>
    
    <item>
      <title>NuGet的Cofing設定檔和Source Code轉換</title>
      <link>http://example.org/posts/2012/11/nuget%E7%9A%84cofing%E8%A8%AD%E5%AE%9A%E6%AA%94%E5%92%8Csource-code%E8%BD%89%E6%8F%9B/</link>
      <pubDate>Mon, 05 Nov 2012 17:40:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/11/nuget%E7%9A%84cofing%E8%A8%AD%E5%AE%9A%E6%AA%94%E5%92%8Csource-code%E8%BD%89%E6%8F%9B/</guid>
      <description>前言 使用套件的時後，有時會需要指定設定檔，例如自訂的Section，或特定AppSetting的值 在打包的時後，只要在你想轉換的檔案後面加上.transform的副檔名就行了 以web.config為例，只要新增一個檔案名為web.config.transform在套件中，安裝套件的時後就會合併這個檔案的內容
web.config.transform &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;appSettings&amp;gt; &amp;lt;add key=&amp;#34;aa&amp;#34; value=&amp;#34;aa&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;bb&amp;#34; value=&amp;#34;bb&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;cc&amp;#34; value=&amp;#34;cc&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;dd&amp;#34; value=&amp;#34;dd&amp;#34; /&amp;gt; &amp;lt;/appSettings&amp;gt; &amp;lt;/configuration&amp;gt; web.config &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;appSettings&amp;gt; &amp;lt;add key=&amp;#34;aa&amp;#34; value=&amp;#34;123&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;bb&amp;#34; value=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;cc&amp;#34; /&amp;gt; &amp;lt;/appSettings&amp;gt; &amp;lt;/configuration&amp;gt; 合併後的結果會變成 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;appSettings&amp;gt; &amp;lt;!– 原來的值不變 –&amp;gt; &amp;lt;add key=&amp;#34;aa&amp;#34; value=&amp;#34;123&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;bb&amp;#34; value=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;!– 合併的資料 –&amp;gt; &amp;lt;add key=&amp;#34;aa&amp;#34; value=&amp;#34;aa&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;bb&amp;#34; value=&amp;#34;bb&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;cc&amp;#34; value=&amp;#34;cc&amp;#34; /&amp;gt; &amp;lt;add key=&amp;#34;dd&amp;#34; value=&amp;#34;dd&amp;#34; /&amp;gt; &amp;lt;/appSettings&amp;gt; &amp;lt;/configuration&amp;gt; 程式碼轉換的方式，是用.</description>
    </item>
    
    <item>
      <title>NuGet編譯後自動發佈套件</title>
      <link>http://example.org/posts/2012/10/nuget%E7%B7%A8%E8%AD%AF%E5%BE%8C%E8%87%AA%E5%8B%95%E7%99%BC%E4%BD%88%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Sun, 21 Oct 2012 20:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/nuget%E7%B7%A8%E8%AD%AF%E5%BE%8C%E8%87%AA%E5%8B%95%E7%99%BC%E4%BD%88%E5%A5%97%E4%BB%B6/</guid>
      <description>前言 每次發佈套件，都要打一連串的命令太累了，比較簡單的方式是在專案中加上一個組態 在這個組態的建置後事件輸入命令就行了
首先先打開專案的組態管理員 
新增一個組態 ](http://2.bp.blogspot.com/-xCbZwESH_N8/UIPalua1W-I/AAAAAAAAANM/Z20zxEXMn2w/s1600/02.NewConfig.png)
名稱輸入NuGetPack ](http://3.bp.blogspot.com/-3oyPK-uxThc/UIPamann2lI/AAAAAAAAANU/Mq-5Bt_m9Ys/s1600/03.NugetPackConfig.png)
再來在專案上按右鍵，選擇卸載專案 ](http://4.bp.blogspot.com/-ByxhJPKdoNU/UIPam0tyYLI/AAAAAAAAANc/aa5geuvAM3A/s1600/04.UnloadProject.png)
再選擇編輯專案檔 ](http://2.bp.blogspot.com/-3y_YI_ZdAvQ/UIPanStvz2I/AAAAAAAAANk/5fBdjy3NAVI/s1600/05.EditProj.png)
在檔案的最下面，輸入建置後事件 之後要發佈的時後，選擇這個組態後編譯就行了 &amp;lt;Import Project=&amp;#34;$(MSBuildToolsPath)\Microsoft.CSharp.targets&amp;#34; /&amp;gt; &amp;lt;!– To modify your build process, add your task inside one of the targets below and uncomment it. Other similar extension points exist, see Microsoft.Common.targets. &amp;lt;Target Name=&amp;#34;BeforeBuild&amp;#34;&amp;gt; &amp;lt;/Target&amp;gt; &amp;lt;Target Name=&amp;#34;AfterBuild&amp;#34;&amp;gt; &amp;lt;/Target&amp;gt; –&amp;gt; &amp;lt;PropertyGroup Condition=&amp;#34;$(Configuration)|$(Platform)’ == ‘NuGetPack|AnyCPU&amp;#34;&amp;gt; &amp;lt;PostBuildEvent&amp;gt; CD $(ProjectDir) nuget pack -sym -prop configuration=release -build nuget push .symbols.nupkg 123 -Source http://localhost:2335/NuGet del .</description>
    </item>
    
    <item>
      <title>建立NuGet套件</title>
      <link>http://example.org/posts/2012/10/%E5%BB%BA%E7%AB%8Bnuget%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Sun, 21 Oct 2012 19:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/%E5%BB%BA%E7%AB%8Bnuget%E5%A5%97%E4%BB%B6/</guid>
      <description>首先下載NuGet命令列工具，請按此下載 為了方便起見，把這個檔案丟到系統資料夾中，例如%WinDir%或System32 ](http://2.bp.blogspot.com/-Iq1IYY5A7CA/UIPU0e78XoI/AAAAAAAAAMs/7ptcekOJkQQ/s1600/00.download.png)
接下來建立一個測試用的dll專案 ](http://4.bp.blogspot.com/-HMrws61C34M/UIPTGsi4x9I/AAAAAAAAALE/1ymW04Gppqs/s1600/00.NewProject.png)
為了方便起見，請先安裝PowerCommands擴充元件 ](http://2.bp.blogspot.com/-nJj9KyxiAaM/UIPTHOayBDI/AAAAAAAAALM/Nq0S4oy1bwI/s1600/01.PowerCommands.png)
在專案上按右鍵，就會出現Open Command Prompt這個功能，按下後會打開一個cmd視窗，並把路徑切換到專案下面 ](http://2.bp.blogspot.com/-crRkZcmDMRw/UIPTH93kj0I/AAAAAAAAALU/mbkQ15Lmx5I/s1600/02.OpenCommandPrompt.png)
輸入nuget spec，就會產生一個副檔名nuspec的檔案 P.S. 如果該目錄下不只一個專案檔(csproj)，請明確指定你要產生的專案檔是那一個 ](http://3.bp.blogspot.com/-Jz-baDzNlGc/UIPTIeo4bBI/AAAAAAAAALc/ZKcIqAgN_3w/s1600/03.NugetSpec.png)
在專案總管上面按下顯示所有檔案，就可以看到這個檔案 ](http://3.bp.blogspot.com/-lCpZOlgjhkU/UIPTJZ-ApfI/AAAAAAAAALk/FW-o1ID1r_A/s1600/04.ShowAllFile.png)
產生的nuspec檔案的內容如下 &amp;lt;package&amp;gt; &amp;lt;metadata&amp;gt; &amp;lt;id&amp;gt;$id$&amp;lt;/id&amp;gt; &amp;lt;version&amp;gt;$version$&amp;lt;/version&amp;gt; &amp;lt;title&amp;gt;$title$&amp;lt;/title&amp;gt; &amp;lt;authors&amp;gt;$author$&amp;lt;/authors&amp;gt; &amp;lt;owners&amp;gt;$author$&amp;lt;/owners&amp;gt; &amp;lt;licenseurl&amp;gt;http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/licenseurl&amp;gt; &amp;lt;projecturl&amp;gt;http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/projecturl&amp;gt; &amp;lt;iconurl&amp;gt;http://ICON_URL_HERE_OR_DELETE_THIS_LINE&amp;lt;/iconurl&amp;gt; &amp;lt;requirelicenseacceptance&amp;gt;false&amp;lt;/requirelicenseacceptance&amp;gt; &amp;lt;description&amp;gt;$description$&amp;lt;/description&amp;gt; &amp;lt;releasenotes&amp;gt;Summary of changes made in this release of the package.&amp;lt;/releasenotes&amp;gt; &amp;lt;copyright&amp;gt;Copyright 2012&amp;lt;/copyright&amp;gt; &amp;lt;tags&amp;gt;Tag1 Tag2&amp;lt;/tags&amp;gt; &amp;lt;/metadata&amp;gt; &amp;lt;/package&amp;gt;  $id對應的是這個套件的名稱 $version$對應的是AssemblyInfo.cs中的AssemblyVersionAttribute $author$對應的是AssemblyInfo.cs中的AssemblyCompanyAttribute $description$對應的是AssemblyInfo.cs中的AssemblyDescriptionAttribute 當然也可以手動輸入，下次再來更詳細地說明這個檔案的格式  接下來打包這個dll成一個套件，命令是nuget pack，參數說明如下  -sym:會一起產生包含偵錯符號的套件 -prop:用來額外指定一些特性，例如configuration=relase是編譯release這個組態 -build:是在打包前先編譯專案，以取得最新編譯的檔案 更詳細的說明，可以用nuget pack /?取得Help   因為有下-sym這個參數，所以除了會把元件打包成{id}.{version}.nupkg這樣格式的檔案之外 還會產生一個{id}.{version}.symbols.nupkg的檔案 ](http://1.bp.blogspot.com/-jVtaJ-nk4ls/UIPTLSt43zI/AAAAAAAAAL8/dQai5gRgPZY/s1600/07.Pkg.png)
接下來把這兩個檔案發佈到之前建立的nuget server和symbol server 發佈到nuget server  nuget push *.</description>
    </item>
    
    <item>
      <title>架設SymbolSource.Server</title>
      <link>http://example.org/posts/2012/10/%E6%9E%B6%E8%A8%ADsymbolsource-server/</link>
      <pubDate>Sun, 21 Oct 2012 17:19:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/%E6%9E%B6%E8%A8%ADsymbolsource-server/</guid>
      <description>首先要先安裝Debugging Tools for Windows ](http://1.bp.blogspot.com/-KzKeCG8zNjk/UIO4-cYGgII/AAAAAAAAAKU/wGhW5z4HeaQ/s1600/00.download.png)
記住這個安裝路徑，等下會用到 ](http://3.bp.blogspot.com/-QKH8P_Fpovo/UIO4J4JlA_I/AAAAAAAAAJk/5Yxs5DDK09I/s1600/00.Path.png)
選擇安裝Debugging Tool for Windows，一直按下一步就好了 ](http://4.bp.blogspot.com/-eQQb6sjiNqE/UIO4JNm7ZzI/AAAAAAAAAJc/ClovhmG2kzU/s1600/00.DebuggingTool.png)
接下來開始安裝SymbolSource.Server 先開一個MVC專案 ](http://3.bp.blogspot.com/-weYfPMU9dLY/UIO4Koyl5eI/AAAAAAAAAJs/6Jp_tUUv1eQ/s1600/01.NewProject.png)
選擇空白範本 ](http://2.bp.blogspot.com/-2fqKnGX6JNA/UIO4LMBQMSI/AAAAAAAAAJ0/sBdNebIBvDo/s1600/02.ProjectSetting.png)
用Nuget安裝SymbolSource.Server.Basic套件 ](http://2.bp.blogspot.com/-vAS8yuexXc4/UIO4Lr-AvLI/AAAAAAAAAJ8/AqZbH0BG-mg/s1600/03.SymbolSourceServer.png)
打開web.config，找到SrcSrvPath，修改成剛安裝的路徑 &amp;lt;add key=&amp;#34;SrcSrvPath&amp;#34; value=&amp;#34;C:\Program Files (x86)\Windows Kits\8.0\Debuggers\x64\srcsrv&amp;#34; /&amp;gt; 按F5執行，就會看到如下的畫面 一個是Symbol的位置，一個是套件發佈用的位置 ](http://1.bp.blogspot.com/-3aEpzPPQ66g/UIO4MDpaxbI/AAAAAAAAAKE/qXzukxnN2mU/s1600/04.DefaultPage.png)
設定一下偵錯選項  取消「啟用Just My Code的勾勾」 勾選「啟用來源伺服器支援」 把套件和Symbol發佈之後就可以偵錯了 ](http://2.bp.blogspot.com/-dypoFu3nhYk/UIO4Ms8TdjI/AAAAAAAAAKM/eC0J2y1De5Q/s1600/05.Setting.png)  再新增一個Symbol位置，指向到伺服器路徑，之後發佈套件和Symbol就可以偵錯了 ](http://4.bp.blogspot.com/-7qcGV2EU9d8/UIO9MgH6h1I/AAAAAAAAAKs/huq9yb8Emso/s1600/06.Symbol.png)
參考資料  Setting it up your own symbol and source server Setting up your own SymbolSource Server: step-by-step   </description>
    </item>
    
    <item>
      <title>架設Nuget.Server</title>
      <link>http://example.org/posts/2012/10/%E6%9E%B6%E8%A8%ADnuget-server/</link>
      <pubDate>Wed, 17 Oct 2012 11:15:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/%E6%9E%B6%E8%A8%ADnuget-server/</guid>
      <description>首先建立一個空白的Web應用程式專案 
再來使用Nuget安裝Nuget.Server這個套件 ](http://1.bp.blogspot.com/-Y35bQtZfSsY/UH4fBo6X46I/AAAAAAAAAIQ/Nw3tlc4gEtU/s1600/02.NugetServer.png)
VS2012需檢查一下是否有兩個compilation區段 ](http://3.bp.blogspot.com/-MBIm4bi6t0s/UH4fCb-AHtI/AAAAAAAAAIY/bZx8QYobEO8/s1600/03.ConfigError.png)
順便設定一下apiKey，這是之後用來上傳package的密碼 ](http://3.bp.blogspot.com/-nf5rin61TbM/UH4fDWK1JaI/AAAAAAAAAIk/46OQrDyq65A/s1600/04.ApiKey.png)
  設定完後，按下F5應該會看到這樣的畫面
  上面的網址是查詢Nuget套件資訊用的
  下面的命令是之後用command line工具上傳套件的指令格式 ](http://1.bp.blogspot.com/-1rhRqaKxNi4/UH4fESz8e6I/AAAAAAAAAIo/KBPtNfg9k5w/s1600/05.Default.png)
  工具-&amp;gt;選項-&amp;gt;套件管理員-&amp;gt;套件來源
  在這裡把剛的網址設定上去 ](http://1.bp.blogspot.com/-PAeK1lQ1tpY/UH4fEysT_-I/AAAAAAAAAIw/-9rtYt4W5T8/s1600/06.Setting.png)
  使用Nuget的時後，就會發現多了一個來源 ](http://3.bp.blogspot.com/-fZlBCZsU2i8/UH4ifzL3qtI/AAAAAAAAAJI/D1EF7scCW9Y/s1600/07.source.png)</description>
    </item>
    
    <item>
      <title>使用NuGet安裝、移除、更新套件</title>
      <link>http://example.org/posts/2012/10/%E4%BD%BF%E7%94%A8nuget%E5%AE%89%E8%A3%9D%E7%A7%BB%E9%99%A4%E6%9B%B4%E6%96%B0%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Fri, 12 Oct 2012 11:15:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/%E4%BD%BF%E7%94%A8nuget%E5%AE%89%E8%A3%9D%E7%A7%BB%E9%99%A4%E6%9B%B4%E6%96%B0%E5%A5%97%E4%BB%B6/</guid>
      <description>NuGet主要的功能，是新增、移除、更新套件，接下來就介紹這幾個功能  GUI介面可以很方便地新增和移除套件 在專案參考上面按右鍵 ](http://3.bp.blogspot.com/-XS3ZrSz7Sz8/UHeGBweDbVI/AAAAAAAAAHA/OLOYGXSeVMo/s1600/01.GUI.png)
出現的GUI視窗，左邊可以選擇來源，中間選擇套件，右上角則是搜尋方塊 以JQuery為列，直接按安裝就好了 ](http://4.bp.blogspot.com/-CY2Pd35x9bw/UHeIXhJTIoI/AAAAAAAAAHY/IvSXqNbp9AI/s1600/02.install.png)
安裝成功 ](http://1.bp.blogspot.com/-JfubxHCmqiM/UHeETIUq3RI/AAAAAAAAAG4/ZmOCOd0Isfg/s1600/03.InstallOK.png)
如果要解除安裝，選擇左邊的「已安裝的套件」，然後選擇解除安裝就好了 ](http://2.bp.blogspot.com/-S4d5AIcFThY/UHeGCUqmjeI/AAAAAAAAAHI/Sb-5Z8cqIV0/s1600/04.UnInstall.png)
解除安裝成功 ](http://3.bp.blogspot.com/-bxdHPUljs7w/UHeGEVtQXrI/AAAAAAAAAHM/_yoePcov-cc/s1600/05.UnInstallOK.png)
Console介面  功能比較完整，也可以使用Tab命令補全 選擇工具裡面的程式庫套件管理員，再選擇Package Manager Console ](http://4.bp.blogspot.com/-UwUWUKz-yBQ/UHeJVA0_4PI/AAAAAAAAAHg/e3FoTIa3nCg/s1600/06.Console.png)  就會打開Console介面 ](http://1.bp.blogspot.com/-jThsTH3PeJw/UHeJVgYOTkI/AAAAAAAAAHk/-sM2w6Ud-H4/s1600/07.Console2.png)
還是以JQuery為例  Install-Package是安裝套件 Update-Package是更新套件 參數-Version可以指定版本，如不指定則會以最新版為主 Uninstall-Package是移除套件 ](http://1.bp.blogspot.com/-cdtMPEn5V04/UHeJWvumlQI/AAAAAAAAAHw/J1Ow8bM38kA/s1600/08.Command.png)  搜尋套件的命令是Get-Package  參數ListAvailable可以列出可用套件 參數AllVersions用來列出該套件所有版本 參數Filter用來過慮條件 ](http://4.bp.blogspot.com/-BdqrQE8Fvqg/UHeJXsL6RhI/AAAAAAAAAH0/QsOebdVodSk/s1600/09.Filter.png)  </description>
    </item>
    
    <item>
      <title>安裝NuGet套件管理工具</title>
      <link>http://example.org/posts/2012/10/%E5%AE%89%E8%A3%9Dnuget%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 11 Oct 2012 18:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/10/%E5%AE%89%E8%A3%9Dnuget%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description>前言 NuGet是.NET平台上面的套件管理工具 主要用來安裝、更新、移除套件，套件中可能包含要參考的元件 使用的資料夾或檔案、設定檔、元件相依性等等 可以幫助我們省下不少時間和繁雜的工作
http://nuget.codeplex.com 這裡有Source Code和其他的工具
http://docs.nuget.org/ 這裡有相關的文件
先安裝Vistual Studio Extension，選擇工具裡面的擴充功能和更新 ](http://4.bp.blogspot.com/-MUeMfNZgLEg/UHZ6DAcHfuI/AAAAAAAAAEw/UehHNPObctY/s1600/01.Install.png)
選擇線上Visual Studio 組件庫，第一個就是NuGet Package Manager ](http://1.bp.blogspot.com/-T7tnB9XcbNE/UHZ6EOMz2EI/AAAAAAAAAE0/-xcg-R3x_eA/s1600/02.NuGet.png)
點擊下載就可以了 ](http://4.bp.blogspot.com/-NZidbhMyTW8/UHZ6E9eXTfI/AAAAAAAAAE8/m_dEbkwiG_o/s1600/03.download.png)
下載後會先跳出授權條款，選擇要安裝擴充功能的產品後按安裝 ](http://3.bp.blogspot.com/-skigye0-uG8/UHZ6Fr3kPrI/AAAAAAAAAFE/sGnL5qxDLiU/s1600/04.Licenes.png)
安裝中 ](http://1.bp.blogspot.com/-fsigQj-SZXM/UHZ6GjGapHI/AAAAAAAAAFM/rcLavJDcF0M/s1600/05.Install.png)
安裝完成 ](http://1.bp.blogspot.com/-DqosQ9bRxm8/UHZ6HYBlntI/AAAAAAAAAFU/fX9zzRxkHno/s1600/06.OK.png)
安裝完後需要重新啟動Vistual Studio，按下「立即重新啟動」就好了 ](http://2.bp.blogspot.com/-K2YO0NkYsRk/UHZ6IGHGkqI/AAAAAAAAAFg/NR6v74YiUJo/s1600/07.Msg.png)
重新啟動後，在工具中就會多了一個程式庫套件管理員 ](http://4.bp.blogspot.com/-UFABkchM5Pw/UHZ6JNR9PbI/AAAAAAAAAFk/4Ts5mrE1FdM/s1600/07.toolbar.png)
也可以在專案中的參考上按右鍵，選擇管理NuGet套件 ](http://1.bp.blogspot.com/-1KGwG2VZIpw/UHZ6J8J0IsI/AAAAAAAAAFs/iepvy0TOAgw/s1600/08.toolbar2.png)
選擇要安裝的套件，以JQuery為例 ](http://1.bp.blogspot.com/-il5IZubxn0Q/UHeERNvfOsI/AAAAAAAAAGw/zE7t9a1OsKU/s1600/02.install.png)
按下下載後就會開始安裝該套件相關的檔案 ](http://1.bp.blogspot.com/-JfubxHCmqiM/UHeETIUq3RI/AAAAAAAAAG4/ZmOCOd0Isfg/s1600/03.InstallOK.png)
安裝後的樣子 ](http://3.bp.blogspot.com/-NWG262i6zjk/UHaD66BbQKI/AAAAAAAAAGc/NRUS0g96X2o/s1600/11.installOK.png)</description>
    </item>
    
    <item>
      <title>VS2010 Remote Debug 遠端偵錯</title>
      <link>http://example.org/posts/2012/09/vs2010-remote-debug-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF/</link>
      <pubDate>Fri, 28 Sep 2012 15:09:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/09/vs2010-remote-debug-%E9%81%A0%E7%AB%AF%E5%81%B5%E9%8C%AF/</guid>
      <description>前言 很多時後特別是設定檔的原因，直接在開發環境的伺服器上面遠端偵錯，比較容易找到問題點，但ASP.NET的遠端偵錯之前一直搞不定，後來爬了許多文並做了多次的試驗後才搞定，主要問題分成兩個部份，防火牆的設定相對來說比較簡單，大部份都是帳號權限的問題比較麻煩，在此記錄一下，以供日後老年癡呆的時後服用
首先先從簡單的防火牆設定開始 http://msdn.microsoft.com/zh-tw/library/ee126350%28v=vs.100%29.aspx
 本機防火牆設定 遠端偵錯 DCOM:TCP 135 遠端偵錯 DCOM UDP IPSec UDP:500,4500 允許Vistual Studio接收網路訊息 SystemDrive:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe  在附加執行緒的時後，如果本機的防火牆設定沒開，預設就會跳出這個訊息 
選擇解除了就會幫你打開相對應的Port 
 遠端防火牆設定 遠端偵錯 DCOM TCP 135 IPSec 遠端偵錯 DCOM UDP 500, 4500 遠端偵錯檔案及印表機 TCP 139, 445 遠端偵錯檔案及印表機 UDP 137, 138 為 Visual Studio msvcmon.exe 處理序新增例外 SystemDrive:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE  在伺服器上面使用遠端偵錯工具組態精靈進行設定比較簡單 
再來就是問題比較多的帳號權限問題 http://msdn.microsoft.com/zh-tw/library/9y5b4b4f.aspx
 重點1:每台電腦上都必須有本機使用者帳戶，而且兩個帳戶的使用者名稱和密碼都必須相同 重點2:如果您要以不同的使用者帳戶執行  剛開始我是在本機和遠端都另外開一個帳號，密碼都一樣，在內部開發環境中順利執行遠端偵錯 但後來換了線上環境，卻又發生帳號權限問題，再多爬一些文後，才發現問題在這裡 也就是說本機附加執行緒的時後，用的是打開Visual Studio的帳號連線到遠端 而遠端接收連線後也要連回來本機，用的是打開msvsmon的帳號 開發環境隨便搞都沒關系，但線上環境就不能亂動了，更何況是加帳號 所以最簡單的方法，就是使用遠端的管理員帳號，然後讓本機來配合遠端的密碼，首先開啟遠端的偵錯工具</description>
    </item>
    
    <item>
      <title>app.config Transformations</title>
      <link>http://example.org/posts/2012/08/app-config-transformations/</link>
      <pubDate>Sat, 18 Aug 2012 17:58:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2012/08/app-config-transformations/</guid>
      <description>前言 使用過內建的web.config transform功能，對於佈署不同環境時更新設定檔內容很有幫助 但app.config並沒有這樣的功能，之前搜尋了一些解法，大部份是自行修改專案檔，並利用MSBuild來轉換XML檔案 那一次研究到頭暈眼花還搞不定，就暫時放下，改天境界有所提升再來研究 最近又想到這個問題，趁著失眠的時後再來摸一下，應該可以很快就睡著XD 結果找到了這個套件，用滑鼠點一點就搞定了，使用上方便多了
首先先下載SlowCheetah這個套件 安裝並重新啟動後，在app.config上面點右鍵，會出現這個Add Transform功能選項 ](http://3.bp.blogspot.com/-eD-oI9lRbjQ/UC9h51R2VZI/AAAAAAAAAAo/RL1zOHSjxrU/s1600/02.AddTransform.png)
按下後，會跳出一個警告視窗，提示會修改你的專案檔來完成app.config的轉換功能 ](http://3.bp.blogspot.com/-hZFwvWz7Jn4/UC9h6tFmWtI/AAAAAAAAAAs/ZmaHtC_mDzo/s1600/03.Alert.png)
按下「是」後 ，會自動幫你依組態新增出對應的config檔案 ](http://3.bp.blogspot.com/-dyVGcKN93PQ/UC9lbptDKlI/AAAAAAAAABc/heOoWKUG5Cs/s1600/035+Result.png)
這是一個簡單的設定檔內容 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;appSettings&amp;gt; &amp;lt;add key=&amp;#34;ServerIP&amp;#34; value=&amp;#34;127.0.0.1&amp;#34; /&amp;gt; &amp;lt;/appSettings&amp;gt; &amp;lt;connectionStrings&amp;gt; &amp;lt;add name=&amp;#34;MyDB&amp;#34; providerName=&amp;#34;System.Data.SqlClient&amp;#34; connectionString=&amp;#34;Data Source=(local);Initial Catalog=DemoDB;Integrated Security=True&amp;#34;/&amp;gt; &amp;lt;/connectionStrings&amp;gt; &amp;lt;/configuration&amp;gt; 在Debug組態的設定檔中，改變了設定檔的內容 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt; &amp;lt;!– For more information on using transformations see the web.config examples at http://go.microsoft.com/fwlink/?LinkId=214134\. –&amp;gt; &amp;lt;configuration xmlns:xdt=&amp;#34;http://schemas.microsoft.com/XML-Document-Transform&amp;#34;&amp;gt; &amp;lt;appSettings&amp;gt; &amp;lt;add key=&amp;#34;ServerIP&amp;#34; value=&amp;#34;192.168.100.11&amp;#34; xdt:Transform=&amp;#34;SetAttribute&amp;#34; xdt:Locator=&amp;#34;Match(key)&amp;#34; /&amp;gt; &amp;lt;/appSettings&amp;gt; &amp;lt;connectionStrings&amp;gt; &amp;lt;add name=&amp;#34;MyDB&amp;#34; connectionString=&amp;#34;Data Source=192.</description>
    </item>
    
  </channel>
</rss>