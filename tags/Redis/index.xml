<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on My New Hugo Site</title>
    <link>http://example.org/tags/redis/</link>
    <description>Recent content in Redis on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Jan 2015 17:51:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis RedisOutputCacheProvider</title>
      <link>http://example.org/posts/2015/01/redis-redisoutputcacheprovider/</link>
      <pubDate>Wed, 21 Jan 2015 17:51:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-redisoutputcacheprovider/</guid>
      <description>先開個Web專案
[![](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 安裝Microsoft.Web.RedisOutputCacheProvider套件 [![](http://4.bp.blogspot.com/-QT6Acrh4AnY/VL9106aZdnI/AAAAAAAACJg/7SwSvzSuaow/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://4.bp.blogspot.com/-QT6Acrh4AnY/VL9106aZdnI/AAAAAAAACJg/7SwSvzSuaow/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) web.config中的caching區段會自動帶入預設的設定 註解的說明也很清楚 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;system.web&amp;gt; &amp;lt;compilation debug=&#34;true&#34; targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;httpRuntime targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;caching&amp;gt; &amp;lt;outputCache defaultProvider=&#34;MyRedisOutputCache&#34;&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;!-- Either use &#39;connectionString&#39; and provide all parameters as string OR use &#39;host&#39;,&#39;port&#39;,&#39;accessKey&#39;,&#39;ssl&#39;,&#39;connectionTimeoutInMilliseconds&#39; and &#39;operationTimeoutInMilliseconds&#39;. --&amp;gt; &amp;lt;!-- &#39;databaseId&#39; and &#39;applicationName&#39; can be used with both options. --&amp;gt; &amp;lt;!-- &amp;lt;add name=&#34;MyRedisOutputCache&#34; host = &#34;127.0.0.1&#34; [String] port = &#34;&#34; [number] accessKey = &#34;&#34; [String] ssl = &#34;false&#34; [true|false] databaseId = &#34;</description>
    </item>
    
    <item>
      <title>Redis SessionStateProvider</title>
      <link>http://example.org/posts/2015/01/redis-sessionstateprovider/</link>
      <pubDate>Wed, 21 Jan 2015 17:28:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-sessionstateprovider/</guid>
      <description>首先開一個Web專案
[![](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png)](http://3.bp.blogspot.com/-W0eH1UB-UAg/VL9vePbpb0I/AAAAAAAACI4/dA1ZpbAc2uo/s1600/01.%E9%96%8B%E6%96%B0%E5%B0%88%E6%A1%88.png) 安裝Microsoft.Web.RedisSessionStateProvider套件 [![](http://1.bp.blogspot.com/-DuvFSvwfNg4/VL9vy-aDZCI/AAAAAAAACJA/Isrbq2EmYPE/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://1.bp.blogspot.com/-DuvFSvwfNg4/VL9vy-aDZCI/AAAAAAAACJA/Isrbq2EmYPE/s1600/02.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 設定檔中的sessionState自動會加入一段設定，註解的說明也很清楚 &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;system.web&amp;gt; &amp;lt;compilation debug=&#34;true&#34; targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;httpRuntime targetFramework=&#34;4.5&#34; /&amp;gt; &amp;lt;sessionState mode=&#34;Custom&#34; customProvider=&#34;MySessionStateStore&#34;&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;!-- Either use &#39;connectionString&#39; and provide all parameters as string OR use &#39;host&#39;,&#39;port&#39;,&#39;accessKey&#39;,&#39;ssl&#39;,&#39;connectionTimeoutInMilliseconds&#39; and &#39;operationTimeoutInMilliseconds&#39;. --&amp;gt; &amp;lt;!-- &#39;throwOnError&#39;,&#39;retryTimeoutInMilliseconds&#39;,&#39;databaseId&#39; and &#39;applicationName&#39; can be used with both options. --&amp;gt; &amp;lt;!-- &amp;lt;add name=&#34;MySessionStateStore&#34; host = &#34;127.0.0.1&#34; [String] port = &#34;&#34; [number] accessKey = &#34;&#34; [String] ssl = &#34;false&#34; [true|false] throwOnError = &#34;true&#34; [true|false] retryTimeoutInMilliseconds = &#34;</description>
    </item>
    
    <item>
      <title>Redis 持久化</title>
      <link>http://example.org/posts/2015/01/redis-%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Wed, 21 Jan 2015 16:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>Redis有兩種持久化方式，一種是RDB，一種是Append，可同時使用 RDB是定時快照，觸發條件發生時，會把當時記憶體的資料存成檔案 所以一旦發生故障，損失的資料較多
啟用RDB持久化
save 900 1 save 300 10 save 60 10000 關閉RDB持久化
save &amp;quot;&amp;rdquo; 設定是否可以壓縮 rdbcompression yes
設定RDB的檔名 dbfilename dump.rdb
設定檔案的資料夾位置 dir ./
=============================================== AOF是把收到的指令，用純文字檔的方式附加到檔案中，資料持久化的效能較完整
啟用AOF持久化
appendonly no AOF檔案名稱
appendfilename appendonly.aof AOF檔案寫入的方式
appendfsync always appendfsync everysec
appendfsync no 設定AOF檔案重整的時間 auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb</description>
    </item>
    
    <item>
      <title>Redis StoredSet</title>
      <link>http://example.org/posts/2015/01/redis-storedset/</link>
      <pubDate>Wed, 21 Jan 2015 16:08:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-storedset/</guid>
      <description>指令說明ZADD將一個或多個元素加入有序集合ZCARD取得有序集合中的元素個數ZCOUNT取得有序集合中，score值在min到max的元素個數ZINCRBY設定有序集合中的成員score遞增值ZRANGE取得有序集合中指定位置範圍的元素ZRANGEBYSCORE取得有序集合中指定score範圍的元素ZRANK取得有序集合中元素從大到小的排列順序ZREM移除有序集合中一個或多個元素ZREMRANGEBYRANK移除有序集合中指定排名範圍的元素ZREMRANGEBYSCORE移除有序集合中指定score範圍的元素ZREVRANGE取得有序集合中指定位置範圍的元素 元素以遞減方式排列ZREVRANGEBYSCORE取得有序集合中指定score範圍的元素 元素以遞減方式排列ZREVRANK取得有序集合中元素從小到大的排列順序ZSCORE取得有序集點中元素的score值ZUNIONSTORE合併一個或多個有序集合的聯集 並把合併後的資料存成另一個有序集合ZINTERSTORE合併一個或多個有序集合的交集 並把合併後的資料存成另一個有序集合ZSCAN搜尋有序集合元素ZRANGEBYLEX取得有序集合中指定位置範圍的元素 當元素有相同的score時，用成員的字典順序排列ZLEXCOUNT取得有序集合中指定位置範圍的元素數量 當元素有相同的score時，用成員的字典順序排列ZREMRANGEBYLEX移除有序集合中指定排名範圍的元素 當元素有相同的score時，用成員的字典順序排列</description>
    </item>
    
    <item>
      <title>Redis Set</title>
      <link>http://example.org/posts/2015/01/redis-set/</link>
      <pubDate>Tue, 20 Jan 2015 11:54:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-set/</guid>
      <description>指令說明SADD將一或多個元性加入集合SCARD取得集合中元素的數量SDIFF取得集合中的差集SDIFFSTORE取得集合中的差集，並將結果存到另一個集合SINTER取得集合中的合集SINTERSTORE取得集合中的合集，並將結果存到另一個集合SISMEMBER判斷集合中是否有指定的元素SMEMBERS取得集合中的所有元素SMOVE將集合中的元素移動到另一個集合SPOP隨機取得集合中的元素，並移除該元素SRANDMEMBER隨機取得集合中的元素，不移除該元素SREM移除集合中的一個或多個元素SUNION取得集合中的聯集SUNIONSTORE取得集合中的聯集，並將結果存到另一個集合SSCAN搜尋集合中的元素</description>
    </item>
    
    <item>
      <title>Redis List</title>
      <link>http://example.org/posts/2015/01/redis-list/</link>
      <pubDate>Tue, 20 Jan 2015 11:42:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-list/</guid>
      <description>指令說明BLPOP阻塞式指令，從開頭彈出內容BRPOP阻塞式指令，從尾端彈出內容BRPOPLPUSH阻塞式指令，從尾端彈出內容，並把彈出的內容加入一個List的頭部LINDEX取得List中指定位置的內容LINSERT配合AFTER和BEFORE來決定插入指定位置的前面或後面LLEN取得List的長度LPOP從開頭彈出資料LPUSH從開頭加入資料LPUSHX從開頭加入資料，只有當鍵值存在並且是一個List的時後才成功LRANGE取得指定範圍內的資料LREM移除和指定內容相同的元素和個數LSET設定指定的資料LTRIM只保留指定範圍內的資料，不在指定範圍的資料全部移除RPOP從尾部彈出資料RPOPLPUSH從尾部彈出資料，並把彈出的資料加入一個List的頭部RPUSH從尾部加入資料RPUSHX從尾部加入資料，只有當鍵值存在並且是一個List的時後才成功</description>
    </item>
    
    <item>
      <title>Redis Hash</title>
      <link>http://example.org/posts/2015/01/redis-hash/</link>
      <pubDate>Tue, 20 Jan 2015 11:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-hash/</guid>
      <description>指令說明HDEL刪除指定的鍵值裡面的欄位HEXISTS檢查指定的鍵值欄位是否存在HGET取得指定的鍵值欄位內容HGETALL取得指定的鍵值所有欄位內容HINCRBY指定的鍵值欄位內容遞增加一HINCRBYFLOAT指定的鍵值欄位內容遞指定的浮點數HKEYS取得指定鍵值的所有欄位名稱HLEN取得指定鍵值的欄位數量HMGET同時取得多組指定鍵值的欄位內容HMSET同時設定多組指定鍵值的欄位內容HSET設定指定鍵值的欄位內容HSETNX設定指定鍵值的欄位內容HVALS取得指定鍵值的所有欄位的內容HSCAN查詢指定鍵值的欄位名稱</description>
    </item>
    
    <item>
      <title>Redis String</title>
      <link>http://example.org/posts/2015/01/redis-string/</link>
      <pubDate>Tue, 20 Jan 2015 11:23:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-string/</guid>
      <description>指令說明APPEND拼接字串BITCOUNT計算字串中的二進位值被設成1的個數BITOP字串中的二進位值的位元操作DECR遞減值一DECRBY遞減指定的值GET取得指定鍵值的內容GETBIT取得指定鍵值的二進位內容GETRANGE取得指定鍵值的資料特定位置的內容GETSET設定指定鍵值的內容，並返回舊值INCR遞增值一INCRBY遞增指定的值INCRBYFLOAT遞增指定的浮點數值MGET一次取回多組指定的key valueMSET一次設定多組key valueMSETNX一次設定多組key value，並且所有設定的key都不存在才成功PSETEX設定key value，並指定過期時間，單位是毫秒SET設定key value 配合ex參數設定過期時間，單位是秒 配合px參數設定過期時間，單位是毫秒 配合nx參數只有key不存在時才成功 配合xx參數只有key已存在時才成功SETBIT設定指定鍵值的二進位資料SETEX設定key value，並指定過期時間，單位是秒SETNX設定key value，並只有在key不存在時才成功SETRANGE更改特定位置的資料內容STRLEN取得指定鍵值的內容長度</description>
    </item>
    
    <item>
      <title>Redis Key</title>
      <link>http://example.org/posts/2015/01/redis-key/</link>
      <pubDate>Tue, 20 Jan 2015 11:05:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-key/</guid>
      <description>指令說明DEL刪除指定的KeyDUMP將指定key的內容匯出二進位內容 配合RESTORE指令可以把資料還原EXISTS判斷指定的Key是否存在EXPIRE用來設定Key的過期時間，單位是秒EXPIREAT用來設定Key的過期時間，單位是秒，UNIX時間戳記KEYS用來查詢目前Redis實體上的Key 可配合pattern查詢MIGRATE搬移資料到不同的Redis執行個體MOVE將指定的Key值搬到同一個Redis執行個體的不同資料庫OBJECT用來顯示該Key值的特性 OBJECT REFCOUNT &amp;lt;key&amp;gt; 取得該key的異動次數 OBJECT ENCODING &amp;lt;key&amp;gt; 取得該key的編碼 OBJECT IDLETIME &amp;lt;key&amp;gt; 取得該key未被存取的秒數PERSIST取消KEY上面的過期時間PEXPIRE用來設定Key的過期時間，單位是毫秒PEXPIREAT用來設定Key的過期時間，單位是毫秒，UNIX時間戳記PTTL取得Key到期的剩餘時間，單位是毫秒RANDOMKEY隨機取得一個KeyRENAME更名Key的名稱，如果新名稱已存在會覆蓋RENAMENX當key的新名稱不存在時，才更名Key的名稱RESTORE配合DUMP指令匯出的二進位內容 用來把資料還原SORT排序指定key的內容 配合limit可限制筆數 TTL取得Key到期的剩餘時間，單位是秒TYPE取得指定Key的內容的資料型態SCAN搜尋Key，可配合pattern 返回結果是一個迭代的指標</description>
    </item>
    
    <item>
      <title>Redis C# Client - StackExchange.Redis</title>
      <link>http://example.org/posts/2015/01/redis-c-client-stackexchange-redis/</link>
      <pubDate>Tue, 20 Jan 2015 10:36:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-c-client-stackexchange-redis/</guid>
      <description>先透過NuGet安裝StackExchange.Redis這個套件 如果需要簽署的元件，可以安裝StackExchange.Redis.StrongName這個套件
[![](http://2.bp.blogspot.com/-5e3umPXt3g0/VL2_bYzn_sI/AAAAAAAACIo/y5oTaiwue3Q/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png)](http://2.bp.blogspot.com/-5e3umPXt3g0/VL2_bYzn_sI/AAAAAAAACIo/y5oTaiwue3Q/s1600/01.%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6.png) 透過ConnectionMultiplexer這個類別來產生連線，並重覆使用 再透過GetDatabase來取得要IDatabase介面，就可以存取Redis了
namespace ConsoleApplication1 { using System; using StackExchange.Redis; class Program { static void Main(string[] args) { ConnectionMultiplexer conn = ConnectionMultiplexer.Connect(&amp;quot;127.0.0.1:6379&amp;quot;); IDatabase cache = conn.GetDatabase(); cache.StringSet(&amp;quot;key1&amp;quot;, &amp;quot;value1&amp;quot;); string data = cache.StringGet(&amp;quot;key1&amp;quot;); Console.WriteLine(data); } }  } 
參考資料
StackExchange.Redis官網</description>
    </item>
    
    <item>
      <title>Redis 設定檔</title>
      <link>http://example.org/posts/2015/01/redis-%E8%A8%AD%E5%AE%9A%E6%AA%94/</link>
      <pubDate>Mon, 19 Jan 2015 19:13:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E8%A8%AD%E5%AE%9A%E6%AA%94/</guid>
      <description>用來指派空間的單位簡寫，不區分大小寫
1k =&amp;gt; 1000 bytes 1kb =&amp;gt; 1024 bytes 1m =&amp;gt; 1000000 bytes 1mb =&amp;gt; 1024*1024 bytes 1g =&amp;gt; 1000000000 bytes 1gb =&amp;gt; 102410241024 bytes 伺服器埠號 port 6379
繫結位址，預設是本機全部
bind 127.0.0.1 Client連線閒置多久要切斷連線，單位為秒，0是不限制時間 timeout 0
################################ 快照設定 ################################# 第一個參數是秒數，第二個參數是異動次數 符合以下任一條件，就執行一次快照，產生dump.rdb
save 900 1 save 300 10 save 60 10000
產生快照檔時是否要壓縮檔案 rdbcompression yes
快照檔案的檔名 dbfilename dump.rdb
快照檔案的路徑 dir ./
################################# 覆寫 #################################
在slave的實體上，用來指定master的位址
slaveof &amp;lt;masterip&amp;gt; &amp;lt;masterport&amp;gt; 如果master需要驗證密碼時設定
masterauth &amp;lt;master-password&amp;gt; 當slave和master斷線，或是正在同步中，是否回應Client端要求 設定成no會回應一個SYNC with master in progress的錯誤 slave-serve-stale-data yes</description>
    </item>
    
    <item>
      <title>Redis 安裝</title>
      <link>http://example.org/posts/2015/01/redis-%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Mon, 19 Jan 2015 17:56:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E5%AE%89%E8%A3%9D/</guid>
      <description>在Linux環境上安裝Redis，最簡單的方式是用套件管理(apt or yum)，但通常不是最新版本 如果要使用最新版本，需要到官網下載原始碼編譯$ wget http://download.redis.io/releases/redis-2.8.19.tar.gz $ tar xzf redis-2.8.19.tar.gz $ cd redis-2.8.19 $ make 編譯如果碰到這個情況 make[1]: Entering directory &#39;/tmp/redis-2.8.19/src&#39; &amp;nbsp; &amp;nbsp; CC adlist.o In file included from adlist.c:34:0: zmalloc.h:50:31: fatal error: jemalloc/jemalloc.h: No such file or directory &amp;nbsp;#include &amp;lt;jemalloc/jemalloc.h&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;^ compilation terminated.  可以到deps下面先行編譯$ cd deps $ make hiredis jemalloc linenoise lua 或是直接執行以下的命令$ make MALLOC=libc Windows下的安裝，可以參考MSOpenTech在github上面的文件 https://github.</description>
    </item>
    
    <item>
      <title>Redis 筆記</title>
      <link>http://example.org/posts/2015/01/redis-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Wed, 14 Jan 2015 11:11:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2015/01/redis-%E7%AD%86%E8%A8%98/</guid>
      <description>1. Redis 安裝 2. Redis 設定檔 3. Redis C# Client - StackExchange.Redis 4. Redis Key 5. Redis String 6. Redis Hash 7. Redis List 8. Redis Set 9. Redis StoredSet 10. Redis 持久化 11. Redis SessionStateProvider 12. Redis RedisOutputCacheProvider
參考資料
Redis 命令參考
ServiceStack.Redis</description>
    </item>
    
  </channel>
</rss>