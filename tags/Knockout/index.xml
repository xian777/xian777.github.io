<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knockout on My New Hugo Site</title>
    <link>http://example.org/tags/knockout/</link>
    <description>Recent content in Knockout on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2013 15:34:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/knockout/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Knockout.js JSON處理</title>
      <link>http://example.org/posts/2013/08/knockout-js-json%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 29 Aug 2013 15:34:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-json%E8%99%95%E7%90%86/</guid>
      <description> ko.toJS 將ViewModel轉成JavaScript物件  ko.toJSON 將ViewModel轉成JSON格式  ko.mapping.fromJS 合併JS物件到原有的ViewModel物件  ko.mapping.fromJSON 合併JSON資料到原有的ViewModel物件  ko.mapping需另外下載，可透過nuget取得 [![](http://3.bp.blogspot.com/-TbnD5B9xXSQ/Uh75aMBbtwI/AAAAAAAAAzE/x_0suryUO-8/s1600/03.mapping.png)](http://3.bp.blogspot.com/-TbnD5B9xXSQ/Uh75aMBbtwI/AAAAAAAAAzE/x_0suryUO-8/s1600/03.mapping.png)  </description>
    </item>
    
    <item>
      <title>Knockout.js 自訂範本</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%87%AA%E8%A8%82%E7%AF%84%E6%9C%AC/</link>
      <pubDate>Thu, 29 Aug 2013 14:52:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%87%AA%E8%A8%82%E7%AF%84%E6%9C%AC/</guid>
      <description>template是用來把複雜或是可重覆使用的輸出格式，獨立出來的一個功能 使用name來指定範本的id，data用來指定傳入範本的資料，as為資料的別名 再配合foreach、if等流程控制來輸出資料 </description>
    </item>
    
    <item>
      <title>Knockout.js 表單處理</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%A1%A8%E5%96%AE%E8%99%95%E7%90%86/</link>
      <pubDate>Thu, 29 Aug 2013 14:30:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%A1%A8%E5%96%AE%E8%99%95%E7%90%86/</guid>
      <description> click 觸發click事件的動作  event 繫結自訂的事件處理  submit 觸發表單送出事件的動作  enable 是否啟用  disable 是否停用  value 繫結表單內容  hasFocus 是否得到焦點  checked 是否核取  options 繫結下拉選單 optionsText為文字內容 optionsValue為下拉選單的值  selectedOptions 可複取的下拉選單所選取的資料  </description>
    </item>
    
    <item>
      <title>Knockout.js 流程控制</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 29 Aug 2013 14:07:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description> foreach 列舉ko.observableArray繫結的內容  if 條件判斷為true才處理該子元素內容  ifnot 反向判斷  with 指向物件參考，讓子元素內容可以直接使用該物件的屬性 而不需要使用完整的物件名稱    </description>
    </item>
    
    <item>
      <title>Knockout.js 資料繫結</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E8%B3%87%E6%96%99%E7%B9%AB%E7%B5%90/</link>
      <pubDate>Thu, 29 Aug 2013 10:33:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E8%B3%87%E6%96%99%E7%B9%AB%E7%B5%90/</guid>
      <description> visible 控制是否為可見元素  text 顯示文字內容  html 顯示html內容  css 設定css類別  style 自訂css樣式  attr 自訂html屬性  </description>
    </item>
    
    <item>
      <title>Knockout.js 簡介</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Thu, 29 Aug 2013 10:03:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E7%B0%A1%E4%BB%8B/</guid>
      <description>Knockout.js是一套Javascript Library，主要用來處理網頁上MVVM模式的資料更新與繫結 要引用Knockout最方便的方式，不外就是透過Nuget [![](http://1.bp.blogspot.com/-BdZy3etaPJw/Uh6rgtFjxBI/AAAAAAAAAys/WVfWTS9_ZtE/s1600/01.nuget.png)](http://1.bp.blogspot.com/-BdZy3etaPJw/Uh6rgtFjxBI/AAAAAAAAAys/WVfWTS9_ZtE/s1600/01.nuget.png) Scripts資料夾中就會出現Knockout的檔案 knockout-{version}.js為壓縮版本 knockout-{version}.debug.js為末壓縮版本[![](http://3.bp.blogspot.com/-8YCimjZDtUQ/Uh6rj1i1meI/AAAAAAAAAy0/BngICrtnWVI/s1600/02.scripts.png)](http://3.bp.blogspot.com/-8YCimjZDtUQ/Uh6rj1i1meI/AAAAAAAAAy0/BngICrtnWVI/s1600/02.scripts.png)knockout的使用方式，首先宣告一個ViewModel類別，然後透過ko.applyBindings來繫結這個類別 除了顯示資料之外，也支援雙向繫結 以下是一個簡單的例子  </description>
    </item>
    
    <item>
      <title>Knockout.js 筆記</title>
      <link>http://example.org/posts/2013/08/knockout-js-%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 26 Aug 2013 15:26:00 +0000</pubDate>
      
      <guid>http://example.org/posts/2013/08/knockout-js-%E7%AD%86%E8%A8%98/</guid>
      <description>Knockout.js 簡介
Knockout.js 資料繫結
Knockout.js 流程控制
Knockout.js 表單處理
Knockout.js 自訂範本
Knockout.js JSON處理
參考資源
Knockout.js 官網
KNOCKOUT.JS與MVVM基礎入門補充教材
knockout.js!! - 黑暗執行緒
KnockoutJS Starter ISBN:978-1-78216-114-1</description>
    </item>
    
  </channel>
</rss>